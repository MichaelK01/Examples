(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    389315,       7235]
NotebookOptionsPosition[    375513,       7027]
NotebookOutlinePosition[    375958,       7044]
CellTagsIndexPosition[    375915,       7041]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Regression", "Title",
 CellChangeTimes->{{3.8225678819582567`*^9, 3.82256789157771*^9}, 
   3.8225680219112043`*^9},ExpressionUUID->"a4305c4f-c3d1-401c-a457-\
a8f332cc52ee"],

Cell[CellGroupData[{

Cell["Linear regression", "Section",
 CellChangeTimes->{{3.8212980555841312`*^9, 3.8212980628876333`*^9}, {
  3.822568026364859*^9, 
  3.822568049977309*^9}},ExpressionUUID->"855011b2-effd-4f4c-8a6c-\
ff4d2d7ea5df"],

Cell[CellGroupData[{

Cell["Model fitting", "Subsection",
 CellChangeTimes->{{3.6629300756494093`*^9, 3.6629301174604807`*^9}, {
   3.662930152247402*^9, 3.662930178309421*^9}, {3.662930798413241*^9, 
   3.662930801365119*^9}, {3.6629312698640842`*^9, 3.662931280672957*^9}, 
   3.6629314656798353`*^9, {3.6629329013131437`*^9, 3.6629329059432497`*^9}, {
   3.6629340858191547`*^9, 3.662934087858817*^9}, {3.662934180889139*^9, 
   3.6629341872553883`*^9}, {3.662934522656699*^9, 3.662934524742794*^9}, {
   3.662935184855069*^9, 3.6629351885575123`*^9}, {3.82015158002421*^9, 
   3.820151581416563*^9}, {3.822570199288591*^9, 
   3.822570203268334*^9}},ExpressionUUID->"9e1ea565-b32b-4676-a286-\
125f6cb6a65c"],

Cell["\<\
Imagine we have some data taken from an experiment and we would like to find \
a model that fits the data well.\
\>", "Text",
 CellChangeTimes->{{3.820151593505913*^9, 3.8201516259326057`*^9}, {
  3.822570888079674*^9, 
  3.822570888897443*^9}},ExpressionUUID->"c8c7110b-a8ff-48c7-88e8-\
683f59e6b4f0"],

Cell[TextData[{
 "Here is some data I took earlier. Can you figure out a good model for this \
data? Once you have a good idea for a model, try using Mathematica\
\[CloseCurlyQuote]s ",
 ButtonBox["FindFit",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/FindFit"],
 " function to test it with the data. How would you verify that your model is \
a good fit for the data?"
}], "Text",
 CellChangeTimes->{{3.822570738200376*^9, 3.822570800094943*^9}, {
  3.8225708393555403`*^9, 3.822570872993877*^9}, {3.822570980110784*^9, 
  3.822570980392928*^9}},ExpressionUUID->"63cf96ff-c09b-435e-98f1-\
7a4f802d82d6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"List", 
       StyleBox[
       "\"Mystery data\"", "IconizedCustomName", StripOnInput -> False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["List", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Dimensions: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox[
             RowBox[{"{", 
               RowBox[{"101", ",", "2"}], "}"}], "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["53872", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    {{0, 0}, {
     Rational[1, 5] Pi, (Rational[-99, 100] (1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[2, 5] Pi, (Rational[-49, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[3, 5] Pi, (Rational[-291, 100] (1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[4, 5] Pi, (Rational[-96, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     Pi, 19 Pi^2}, {
     Rational[6, 5] Pi, (Rational[-141, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[7, 5] Pi, (Rational[-651, 100] (1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[8, 5] Pi, (Rational[-184, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[9, 5] Pi, (Rational[-819, 100] (1 + 5^Rational[1, 2])) Pi^2}, {
     2 Pi, (-36) Pi^2}, {
     Rational[11, 5] Pi, (Rational[-979, 100] (1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[12, 5] Pi, (Rational[-264, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[13, 5] Pi, (Rational[-1131, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[14, 5] 
      Pi, (Rational[-301, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     3 Pi, 51 Pi^2}, {
     Rational[16, 5] Pi, (Rational[-336, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[17, 5] Pi, (Rational[-1411, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[18, 5] 
      Pi, (Rational[-369, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[19, 5] Pi, (Rational[-1539, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {4 Pi, (-64) Pi^2}, {
     Rational[21, 5] Pi, (Rational[-1659, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {Rational[22, 5] 
      Pi, (Rational[-429, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[23, 5] Pi, (Rational[-1771, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[24, 5] 
      Pi, (Rational[-456, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     5 Pi, 75 Pi^2}, {
     Rational[26, 5] Pi, (Rational[-481, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[27, 5] Pi, (Rational[-1971, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[28, 5] 
      Pi, (Rational[-504, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[29, 5] Pi, (Rational[-2059, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {6 Pi, (-84) Pi^2}, {
     Rational[31, 5] Pi, (Rational[-2139, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {Rational[32, 5] 
      Pi, (Rational[-544, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[33, 5] Pi, (Rational[-2211, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[34, 5] 
      Pi, (Rational[-561, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     7 Pi, 91 Pi^2}, {
     Rational[36, 5] Pi, (Rational[-576, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[37, 5] Pi, (Rational[-2331, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[38, 5] 
      Pi, (Rational[-589, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[39, 5] Pi, (Rational[-2379, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {8 Pi, (-96) Pi^2}, {
     Rational[41, 5] Pi, (Rational[-2419, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {Rational[42, 5] 
      Pi, (Rational[-609, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[43, 5] Pi, (Rational[-2451, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[44, 5] 
      Pi, (Rational[-616, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     9 Pi, 99 Pi^2}, {
     Rational[46, 5] Pi, (Rational[-621, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[47, 5] Pi, (Rational[-2491, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[48, 5] 
      Pi, (Rational[-624, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[49, 5] Pi, (Rational[-2499, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {10 Pi, (-100) Pi^2}, {
     Rational[51, 5] Pi, (Rational[-2499, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {Rational[52, 5] 
      Pi, (Rational[-624, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[53, 5] Pi, (Rational[-2491, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[54, 5] 
      Pi, (Rational[-621, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     11 Pi, 99 Pi^2}, {
     Rational[56, 5] Pi, (Rational[-616, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[57, 5] Pi, (Rational[-2451, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[58, 5] 
      Pi, (Rational[-609, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[59, 5] Pi, (Rational[-2419, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {12 Pi, (-96) Pi^2}, {
     Rational[61, 5] Pi, (Rational[-2379, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {Rational[62, 5] 
      Pi, (Rational[-589, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[63, 5] Pi, (Rational[-2331, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[64, 5] 
      Pi, (Rational[-576, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     13 Pi, 91 Pi^2}, {
     Rational[66, 5] Pi, (Rational[-561, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[67, 5] Pi, (Rational[-2211, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[68, 5] 
      Pi, (Rational[-544, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[69, 5] Pi, (Rational[-2139, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {14 Pi, (-84) Pi^2}, {
     Rational[71, 5] Pi, (Rational[-2059, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {Rational[72, 5] 
      Pi, (Rational[-504, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[73, 5] Pi, (Rational[-1971, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[74, 5] 
      Pi, (Rational[-481, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     15 Pi, 75 Pi^2}, {
     Rational[76, 5] Pi, (Rational[-456, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[77, 5] Pi, (Rational[-1771, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[78, 5] 
      Pi, (Rational[-429, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[79, 5] Pi, (Rational[-1659, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {16 Pi, (-64) Pi^2}, {
     Rational[81, 5] Pi, (Rational[-1539, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {Rational[82, 5] 
      Pi, (Rational[-369, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[83, 5] Pi, (Rational[-1411, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[84, 5] 
      Pi, (Rational[-336, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     17 Pi, 51 Pi^2}, {
     Rational[86, 5] Pi, (Rational[-301, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[87, 5] Pi, (Rational[-1131, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[88, 5] 
      Pi, (Rational[-264, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[89, 5] Pi, (Rational[-979, 100] (1 + 5^Rational[1, 2])) Pi^2}, {
     18 Pi, (-36) Pi^2}, {
     Rational[91, 5] Pi, (Rational[-819, 100] (1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[92, 5] Pi, (Rational[-184, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[93, 5] Pi, (Rational[-651, 100] (1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[94, 5] Pi, (Rational[-141, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     19 Pi, 19 Pi^2}, {
     Rational[96, 5] Pi, (Rational[-96, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[97, 5] Pi, (Rational[-291, 100] (1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[98, 5] Pi, (Rational[-49, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[99, 5] Pi, (Rational[-99, 100] (1 + 5^Rational[1, 2])) Pi^2}, {
     20 Pi, 0}},
    SelectWithContents->True,
    Selectable->False]}], ";"}]], "Input",
 CellChangeTimes->{{3.82257070083882*^9, 3.822570702814842*^9}},
 CellLabel->
  "In[189]:=",ExpressionUUID->"d8326d55-2984-4375-a087-2288d5d31151"],

Cell[CellGroupData[{

Cell["Analysis", "Subsubsection",
 CellChangeTimes->{{3.822585152502647*^9, 
  3.8225851544780416`*^9}},ExpressionUUID->"3fcde024-09d1-4a32-9647-\
6d0fdf0d1648"],

Cell["Here is how I created that mystery data:", "Text",
 CellChangeTimes->{{3.822570895435966*^9, 3.8225709091645823`*^9}, {
  3.8225709682166653`*^9, 
  3.822570972137547*^9}},ExpressionUUID->"9ec25fcd-950f-4b13-bef4-\
11ce9ed5ea7e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "2"], "-", 
          RowBox[{"20", "\[Pi]", " ", "x"}]}], ")"}], 
        RowBox[{"Cos", "[", "x", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"20", "\[Pi]"}], ",", 
       RowBox[{"20", 
        RowBox[{"\[Pi]", "/", "100"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Iconize", "[", 
  RowBox[{"data", ",", "\"\<Mystery data\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.662935549281107*^9, 3.662935551034395*^9}, {
  3.8225699208442*^9, 3.822569921612623*^9}, {3.8225699620640507`*^9, 
  3.822569971161809*^9}, {3.822570276712679*^9, 3.822570334589026*^9}, {
  3.822570372406887*^9, 3.8225703899823627`*^9}, {3.822570428986524*^9, 
  3.822570551442627*^9}, {3.82257065122297*^9, 3.822570663769205*^9}, {
  3.822570988486458*^9, 3.8225709945144043`*^9}},
 CellLabel->"In[190]:=",
 CellID->196749448,ExpressionUUID->"7da11e59-d878-459c-873f-ab5586cecd18"],

Cell["\<\
The first thing we should do is try to plot the data to see if we can \
recognise anything\
\>", "Text",
 CellChangeTimes->{{3.822571032956109*^9, 
  3.822571046196196*^9}},ExpressionUUID->"6f1e0977-e988-40bb-a39e-\
d4a6a43a53a1"],

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"data", ",", 
   RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.822569937384112*^9, 3.8225699382269363`*^9}, {
  3.822570626071313*^9, 3.822570629121376*^9}, {3.822571053670908*^9, 
  3.822571057080161*^9}},
 CellLabel->
  "In[192]:=",ExpressionUUID->"a03cb623-aaa8-427d-abd5-c7bebc1a7949"],

Cell[TextData[{
 "If we have a good idea for a model that might fit the data, then we can use \
FindFit to look for the parameters that best fit the data. This looks like \
the plot of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"cos", "(", "x", ")"}], TraditionalForm]],ExpressionUUID->
  "2bde85e3-9476-476a-aa76-76ee37a96a2a"],
 " modulated by a quadratic so let\[CloseCurlyQuote]s try to fit a linear \
model of that form to the data:"
}], "Text",
 CellChangeTimes->{{3.820151629779784*^9, 3.8201516682324123`*^9}, {
  3.82257107286049*^9, 
  3.822571146377035*^9}},ExpressionUUID->"57dde213-1794-4dc7-8589-\
b4cc835b4eb9"],

Cell[BoxData[
 RowBox[{"model", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"a1", "+", 
      RowBox[{"a2", " ", "x"}], "+", 
      RowBox[{"a3", " ", 
       SuperscriptBox["x", "2"]}]}], ")"}], 
    RowBox[{"Cos", "[", "x", "]"}]}], "/.", 
   RowBox[{"FindFit", "[", 
    RowBox[{"data", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"a1", "+", 
        RowBox[{"a2", " ", "x"}], "+", 
        RowBox[{"a3", " ", 
         SuperscriptBox["x", "2"]}]}], ")"}], 
      RowBox[{"Cos", "[", "x", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"a1", ",", "a2", ",", "a3"}], "}"}], ",", "x"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.662935556538391*^9, 3.662935565816724*^9}, {
  3.820151675395122*^9, 3.820151692728674*^9}, {3.8225705672321377`*^9, 
  3.8225705962985764`*^9}},
 CellLabel->"In[193]:=",
 CellID->831553048,ExpressionUUID->"054b2643-5526-47b3-b957-4ae8bd018608"],

Cell["Now we plot the model against the data", "Text",
 CellChangeTimes->{{3.820151699011963*^9, 3.820151714753317*^9}, {
  3.822568203695649*^9, 
  3.822568203868881*^9}},ExpressionUUID->"82ff26bd-ab12-42a4-94f6-\
bb165d937e64"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{"model", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"20", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"data", ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6629355694544077`*^9, 3.662935612837612*^9}, {
  3.820151718022386*^9, 3.82015172671721*^9}, {3.822570605716585*^9, 
  3.822570607681707*^9}},
 CellLabel->
  "In[194]:=",ExpressionUUID->"050435b0-9389-458e-bacf-e0de36d24267"],

Cell["\<\
Now that we have seen a simple example, let\[CloseCurlyQuote]s apply what we \
have learned in the lectures to see if we can reproduce this and in the \
process understand what Mathematica has done to find a good fit to the data.\
\>", "Text",
 CellChangeTimes->{{3.822568213833042*^9, 3.82256825191229*^9}, {
  3.822571166392281*^9, 
  3.822571181202653*^9}},ExpressionUUID->"487c1937-74ef-44bf-a2ab-\
effe5a506a0e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Linear Regression for a linear function", "Subsection",
 CellChangeTimes->{{3.82134327414294*^9, 3.821343276043531*^9}, {
  3.8225685912056923`*^9, 
  3.822568595307932*^9}},ExpressionUUID->"79c7919a-4881-428a-a2a9-\
a8b52c6fdc97"],

Cell[TextData[{
 "We will start with a simple problem: find the line that best fits some data \
by determining the best fit parameters ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"\[Alpha]", ",", " ", "\[Beta]"}], ")"}], TraditionalForm]],
  ExpressionUUID->"ca6fb6c0-4bbc-4d46-9a92-d9ab26b8e197"],
 " in our model ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{"\[Alpha]", "+", 
     RowBox[{"\[Beta]", " ", "x"}]}]}], TraditionalForm]],ExpressionUUID->
  "149c4cad-8555-4213-8dc3-8a8655b029a5"],
 "."
}], "Text",
 CellChangeTimes->{{3.8225713040889273`*^9, 3.8225713998779783`*^9}, {
  3.8225856417730713`*^9, 
  3.822585713021261*^9}},ExpressionUUID->"a5a02d49-c636-4c43-8e31-\
bbb19b3d978a"],

Cell["\<\
The first thing we need is to collect some data samples. Normally, this could \
come from some experimental measurements, but for this example we will just \
generate some data ourselves.  In the real world we will never have perfectly \
clean measurements so we will expect some random noise in our samples. To \
simulate this, we will add some random noise when we\[CloseCurlyQuote]re \
generating the data we want to fit.\
\>", "Text",
 CellChangeTimes->{{3.8225713829258947`*^9, 3.8225714416822777`*^9}, {
  3.822585215921517*^9, 
  3.822585234097568*^9}},ExpressionUUID->"76a079be-070f-4dca-8114-\
7e17bb7c8605"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"3", "+", 
        RowBox[{"2", "x"}], "+", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "0.3"}], "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "5", ",", "0.5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "data", "]"}]}], "Input",
 CellChangeTimes->{{3.821183512484281*^9, 3.821183542049678*^9}, {
   3.821183580999058*^9, 3.821183586326396*^9}, {3.821183778328753*^9, 
   3.8211837816799097`*^9}, {3.8211838686763353`*^9, 3.821183892990655*^9}, {
   3.821183963150795*^9, 3.82118399538337*^9}, 3.821187466643404*^9, {
   3.821187813843504*^9, 3.8211878280974913`*^9}, {3.822571227133072*^9, 
   3.822571268686002*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"14b44add-0deb-4287-b7e8-f671cd8afe85"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.`", "2.6254710816429205`"},
     {"0.5`", "3.770097078696258`"},
     {"1.`", "5.0304635059036995`"},
     {"1.5`", "5.974313493453903`"},
     {"2.`", "7.4522626594547985`"},
     {"2.5`", "8.158474753735982`"},
     {"3.`", "9.1338695837616`"},
     {"3.5`", "10.053656798034213`"},
     {"4.`", "11.092691303313904`"},
     {"4.5`", "12.255372034894444`"},
     {"5.`", "13.015438626860393`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8546984758589783`*^9},
 CellLabel->
  "Out[21]//MatrixForm=",ExpressionUUID->"1e19dea0-9f15-4680-b580-\
cdcfe6696e12"]
}, Open  ]],

Cell[TextData[{
 "Now the first column are the values of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "i"], TraditionalForm]],ExpressionUUID->
  "67a387a0-9cc0-4cea-99c8-0cdfa4263767"],
 " and the second column is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", 
    SubscriptBox["x", "i"], ")"}], TraditionalForm]],ExpressionUUID->
  "43c66060-bcd3-439d-8e14-ca8172db74e3"],
 ". Let\[CloseCurlyQuote]s extract those two columns from the matrix."
}], "Text",
 CellChangeTimes->{{3.8225852618018293`*^9, 3.822585327881577*^9}, {
  3.8225854861295233`*^9, 3.8225854979661627`*^9}, {3.822585750267186*^9, 
  3.822585758407312*^9}},ExpressionUUID->"b1df831c-747f-4e25-9dda-\
8b54d97a7c18"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xi", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fxi", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8225853314143763`*^9, 3.822585341572329*^9}, {
  3.822585385059001*^9, 3.822585391944804*^9}, {3.8262831962913857`*^9, 
  3.8262831969991693`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"45522dc4-0069-4474-92c2-b8c5b95fb3f2"],

Cell[TextData[{
 "The next thing we need to do is build up the matrix A representing our \
model evaluated for each value of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "i"], TraditionalForm]],ExpressionUUID->
  "4c8e07e9-45e7-48bb-b777-441947dee26a"]
}], "Text",
 CellChangeTimes->{{3.822585408581045*^9, 3.822585436026154*^9}, {
  3.822585768720145*^9, 
  3.8225857703018513`*^9}},ExpressionUUID->"da747775-bf1c-47c6-ad5c-\
1b6a1d42e777"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "x"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "xi"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 CellChangeTimes->{{3.822585438589381*^9, 3.8225854734740353`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"01446fc9-10f7-4d49-b024-dbcd6598ad38"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0.`"},
     {"1", "0.5`"},
     {"1", "1.`"},
     {"1", "1.5`"},
     {"1", "2.`"},
     {"1", "2.5`"},
     {"1", "3.`"},
     {"1", "3.5`"},
     {"1", "4.`"},
     {"1", "4.5`"},
     {"1", "5.`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8546985601694555`*^9},
 CellLabel->
  "Out[25]//MatrixForm=",ExpressionUUID->"1d7cdd6a-4795-4b54-94b5-\
4204d3944425"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  FormBox[
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}],
   TraditionalForm], "]"}]], "Input",
 CellChangeTimes->{{3.8225859711011467`*^9, 3.822585980713464*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"b2524a57-857e-4838-b754-950d041a9e4a"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"\[Alpha]"},
      {"\[Beta]"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8546985636497135`*^9},
 CellLabel->
  "Out[26]//MatrixForm=",ExpressionUUID->"1a82ca75-a817-4a87-b763-\
6958d04e148d"]
}, Open  ]],

Cell[TextData[{
 "Our model is then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"A", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"\[Alpha]"},
          {"\[Beta]"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "=", 
    RowBox[{"f", "(", 
     SubscriptBox["x", "i"], ")"}]}], TraditionalForm]],ExpressionUUID->
  "3717de18-5994-4546-a4cd-e3b20cb4513c"],
 ". The matrix A is an example where we have many rows but only two columns, \
so this is an ",
 StyleBox["over-constrained",
  FontWeight->"Bold"],
 " problem. As such we won\[CloseCurlyQuote]t be able to find a perfect \
solution (",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", 
    SubscriptBox["x", "i"], ")"}], TraditionalForm]],ExpressionUUID->
  "f0e621b5-30d9-4c13-9147-3f0c73cfd627"],
 " is not in the column space of A!), so we will look for a solutions that \
minimises ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"||", 
     RowBox[{"A", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"\[Alpha]"},
           {"\[Beta]"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}]}], "=", 
    RowBox[{
     RowBox[{"f", "(", 
      SubscriptBox["x", "i"], ")"}], "||"}]}], TraditionalForm]],
  ExpressionUUID->"d3f40769-84d6-4c86-a2e1-d17d9c114ca5"],
 ". We saw how to do this in our linear algebra examples, where we had three \
ways to find the best fit solution:"
}], "Text",
 CellChangeTimes->{{3.8211881537497272`*^9, 3.821188159829069*^9}, {
   3.822568112921253*^9, 3.8225681317175913`*^9}, {3.822571453315569*^9, 
   3.822571468051446*^9}, {3.822585789418632*^9, 3.822585793671241*^9}, {
   3.822585914111702*^9, 3.822585949120154*^9}, {3.822585985358556*^9, 
   3.822585996047901*^9}, 3.8225869601059017`*^9, {3.822587034622078*^9, 
   3.822587191882251*^9}},ExpressionUUID->"d898eb7f-6472-4e15-b527-\
217ed67630b7"],

Cell[CellGroupData[{

Cell[TextData[{
 "Method 1: Directly minimise ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"||", 
     RowBox[{"A", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"\[Alpha]"},
           {"\[Beta]"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}]}], "=", 
    RowBox[{
     RowBox[{"f", "(", 
      SubscriptBox["x", "i"], ")"}], "||"}]}], TraditionalForm]],
  ExpressionUUID->"bd35a385-7a78-4622-ae90-fc23faf8d4b4"]
}], "Subsubsection",
 CellChangeTimes->{{3.822587214859889*^9, 3.82258723729637*^9}, {
  3.822588531561314*^9, 
  3.8225885340705442`*^9}},ExpressionUUID->"b5a120ec-cccc-4363-aaaf-\
50e46849ff34"],

Cell["\<\
We can numerically search for the minimum over the parameters \[Alpha] and \
\[Beta]. This is an example of an unconstrained convex optimisation problem\
\>", "Text",
 CellChangeTimes->{{3.8225872637470427`*^9, 3.822587310437245*^9}, {
  3.822588404277261*^9, 
  3.822588419223712*^9}},ExpressionUUID->"53a91ac4-6adc-4bf4-8e5a-\
a08d2d0e525b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"min", ",", "sol"}], "}"}], "=", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"Norm", "[", 
      RowBox[{
       RowBox[{"A", ".", 
        RowBox[{"{", 
         RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}]}], "-", "fxi"}], "]"}], 
     "2"], ",", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.821342089807597*^9, 3.821342106117825*^9}, 
   3.8225872538482237`*^9, {3.8225873121300898`*^9, 3.822587361021097*^9}, {
   3.822587686437066*^9, 3.8225877362872953`*^9}, {3.822587785780044*^9, 
   3.822587844804411*^9}, {3.822588259056389*^9, 3.822588259287643*^9}, {
   3.822588323029271*^9, 3.822588346492022*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"6c075980-8ec4-45ce-add6-53266360a6f2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.35094549891423865`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]", "\[Rule]", "2.873013970846303`"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", "2.071234808730549`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.854698675916798*^9, 3.8546987605782523`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"9d6948a7-3d3a-4749-a6b9-fc24f25831e5"]
}, Open  ]],

Cell["We now check visually that we have indeed found the minimum:", "Text",
 CellChangeTimes->{{3.822585547666477*^9, 3.822585549298252*^9}, {
  3.8225884303819857`*^9, 
  3.822588444458708*^9}},ExpressionUUID->"3d02e62f-26cd-40f4-950f-\
85a9f6023c71"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{"A", ".", 
         RowBox[{"{", 
          RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}]}], "-", "fxi"}], "]"}], 
      "2"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"Point", "[", 
     RowBox[{"{", 
      RowBox[{"3.23", ",", "1.93", ",", 
       SuperscriptBox[
        RowBox[{"Norm", "[", 
         RowBox[{
          RowBox[{"A", ".", 
           RowBox[{"{", 
            RowBox[{"3.23", ",", "1.93"}], "}"}]}], "-", "fxi"}], "]"}], 
        "2"]}], "}"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.82134187246229*^9, 3.8213419328380623`*^9}, {
   3.821341983532834*^9, 3.8213420682166557`*^9}, {3.82134214564252*^9, 
   3.821342169802205*^9}, {3.8225869897941437`*^9, 3.8225870256159782`*^9}, 
   3.822588312604906*^9, {3.8225883790814133`*^9, 3.8225883949558897`*^9}, {
   3.822588449887177*^9, 3.822588459314289*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"ccc99c11-7eb6-4ba6-b042-e04e84939ef3"],

Cell[BoxData[
 Graphics3DBox[{{GraphicsComplex3DBox[CompressedData["
1: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
Alu6in9o4TgLPIOcCwftDbhXmSJH5kZbbG/ARQRlDovEOZJzcPjo9W8f10fb
9riRcUqA5k9r7rlHepP5ghBytrljs/Nn+mM7xHPGznvIDEQZUky4v5jwrqTO
pZ2mphgPAP8Q5qF45JUVfm/C9Wmp2gpats74fQ14nnnGW7Vb0/E7Gn6v3DFT
bm22D35HA960/YtctHUA+S4phNxK+lOKQUAImcfR68HGjTxEej6FU/2k/UPe
ZpPq1VORDBOqjLR/4Fm58ddNhk2x/QO3snsr/OSOJbZ/4OnyfKdVAuyoBSSO
Aq4jvcZF4Z0DOXeGXsfVUtk4kzfVFb/rAQ/VyTe9d9SXgvkv8PZjBy7wugXi
/BT4xzO86xwiZ+I8FLiNY2dR4tcIcu4evV5r1Lhg250Fs8g5cfR6LRG+1V3O
U2dTy+DeIuLHlpPzym6QdoL7HaIFUxWOS1HHSVyB80RynlgNeV/wD8KbFn1P
kVIn5+zQ60/OkvUnemRejOvMyfld8pPy/FtInh/eC+yfP2TmSLWr/E+e35jk
+eF9wV6oYFPK8T49jDfA3oisP4F6BPtd1a0/r0gbUd8mratZS9bVHCf6g9/b
35T0/ba1Ps4vkA+VtR1ysqBqYD8vrPMk52DsmpSXMCR5iUfEHvzVWnJegfT/
19W5R9WUhmFcbjktSmaKUWpyS1kapZuKIuqUKV10TzeniwY5xCiUMslkJoWU
klHTGLqNaeIUlikjJA1NuQxZYzKIpeQ2U3KZf97n/dba//7WWXu/+917v/s7
3/e9z0N1DHHKusOflhwacLxO+9nAl1I/tfR/Uwf9byqTrPtk0roPxtUYF92w
ddowIT6G+zq53/Clda5vr/DjAw/rUrUcLRa+e+ChY3a4ze4LY50T3l/XcNzW
eVD46IGf6XymyAoN4D5xcB2JDjy4Q1vyi7w4D+6fBY9O6XdNH5Bznyn4sQ+H
xt+0Xsx9r+Dqfmsi9326kMer4O/eXnFPXO3IfbXg+v2aF3NeCH8ijPdK7N5l
Lw0Suu7gUbf8/tLYGsr5Ad/9Q9Pd8uJAzg94c6fbJ6kf+3F+wLVSunIz/xZ5
AE+Q6LSD12lPMliXsYDzAG5t2zN6r+U8zgO4+evnbeNUtpwH8LBg+a4Ve6w4
D+CnY/tsMy4IPyaMP4fuu7XKf7M/Xy/42QclKpW6L18vuJbzh5TCjqV8vbwP
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

     "], {{
       {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
         GrayLevel[1], 3], 
        StyleBox[GraphicsGroup3DBox[
          TagBox[{Polygon3DBox[CompressedData["
1:eJw1nHfgT9Ubxz/33nPvrWiHNJRIKVGp0DYyCkVWiNKSaGgolbSkpEHDaGjQ
NisaQlbbiAZNaU/t3e/98j6/P+73PPfcc889n3PPeZ73836e+63d75zOZ6eV
SuWKvFLJVO6v8maVHxSVynGqaCL5fjU4VvJBku+TfEpZqRyh8zlq007lfqqf
qPo2khtJHi/5bLXpqfOFajM2VCqXJ5XKMSrbqm5ftZmgNkdK3kPyGMlnqH1H
nT+v9n9pDPup/ZWST9C1VMeJOq+t85vU/mFdb6K6fyXvprondd+zklOVFwS3
3V9lM53XVv0otW0qeVfJN0j+W/c3VptDdO8/kg+QfKjkHyXvLvlByRsk15F8
meSfJdeTfLDkuernRfVThbHqWCB5M+ZJ11ZKPkdtF+n8FcnbqDxY549JPkv3
fyT5D9Ut1W/dQ+1PVd3pKnfX0U/yPSrr6zhd8hlcT/07R/M+dO9WKmfqdw3R
/aepn9fU5imVz6k+U9lY5y11/XVd/0Hta6ufbqp7XNdmqM2f6ut31e+t+qtU
P1X1s1T/t+qP0n2zJXfR9SdUP1PyX6qfIvlxyT9Lnqv7DlLZS+WBqeVRFct/
q9xVfe4n+QbJO/Je1G5fnXdIXP+X6mup/kWdH6bz02L9/vGenjpvLPlyyc8l
rj9B5UTdM5z5VNkodZ+/6/zQ1P2MY41q/Jnafsfc6zd8obqvVd6kuo6p3+Uo
zcs4Xf9I/Xyn68eqvr/K0brWQfIOKj/T0VbydSo3U9lOx8cV93eM5J4q26du
fwzPULujJV+q8nj1fbjqpui8oY4GOn7V+Tg9b5jKLVW+rTGlartn4Xlj/naW
fIOOajqfqrI7ay11uzk6mknunXgtNIvrfoJ+y9N63ndq/6euNVX9P9RHmfZ3
6tibcSZeawfHeX5C976me+fl7n8f1bdXOUX1izOv360L141X2VHHA8xf4T4b
xt/Fuzogvvu28d0h85xD4vjHJ27Du52id9RI5Qkqk9TPZpy1dP6z7lun534h
uYbqrtOzeun8KNVPVdt+kjtJfkpyLR07M8dqN1tjLnXPT/otvdWmtdpM07Wb
dP8OKqexf3V9V7V9XHI3tWmuNo/oWlfJR6JP0C+S20iennod8zsYe1/Vd2Tf
offi2P5T3SAdJ6l+vup3UfsbY/uTVH+s5Fmqf0Nju0zn76BnVK5T/esqT9Zx
nOQn1eYX9bkb609tfpVcV/Kxkufo3k11/gt6WeWnar9c952uo4vkZ3TvAMkn
Sp4reaDkvpLnSd4QPG/f6N6TdX5/4t+/k471qu+q40y1763yeV2fqWfV1/mT
eu4StRmmo736OEbnd0m+V+U0tblGbdZI3lN1X+refjrO5veoXKB+nlSbv3T+
qZ77kNo00PG1rs1Q/Y2qf0/3Tpd8reS1ko/WMVFt7la5o+7fS/JX6Epd76Py
BdX1kdyBPiR3kXyE5Id4R8w7ukD3bJ37XWSl3wVrbbaOLXPPSRXV36vf00R1
NYP3W4+owzaTfKna1M6ts7pFndRa8h2SH0U/8x7UZj37Ilh3rJE8X/1epfJd
tWkT98bVKt9SORX7omOXYFuzrcoLCuuXi1S21TFO8mMqL1EfQ9XnG3ruHjrq
odd07UX1P1rX3lebqjouw95hT9AJOjbovKbOz1C5qdp+FH93z/jb+I2s48HB
OmBPlScUvv8c7JXuvVLXtyusq9qpvl6wfm0U9fbm6vdqtamjtm/quEpydbWf
HGwTN1G5BWtD9XVzzx1ziK7fQe2uV7mn6vsUnpNzVW6vY6Tq66v+JR0Pqn5g
Yd3WJOquE3X+hMrLWZNqc5/kAdgOyfdI7i95leSvscF6fledP6L6oSpXRwxT
R3IN9Vc99R4bo3YPqf1n6DOwhdrkattT10tsXcV6H7lUOU/tL1X7e9TmKNVt
omNT1quOItqII2L9eHBGtBmXqPxCx6aSL0r8bMbQo+KSMX0u+VfV1039Hh/R
s17Ss/7WuB6V/LLkf7Ddkl+V/B82S20fUtsrNeePqf4V1f+L3ZB8j+reZp2r
7kG1+VZtZ6j/OioPZu8Hr8deKuerzFPrrFYqq+h4uOK9mEW7fC9rVvInqr9R
8japdd92esbt6mOqyi11tJJ8M3iDa2rTvWJ9g4zO+UJzV03lDI3zVbUbpvHd
r7ol7B3de6Hqg+RzsO+qf1jyUrX5S/WLdV9QPxN0bWEcG/MMvgMT5qyJKIOR
eqeef+z1u+rnIvVzh/pcJfksPWsble/o6Ct5a5W3qjwDna3yhTgn/VVuFYw/
BwbbmdrMScV4ZveIPSbq2jcq39YzTon2iDYT4j3UT4x45S6V+yTWceg3dBa6
63RsT2J7hi3bK7Y5peJypyjfrT6/5Tdlxg/gHrDiGDBH6rF+EozPF6v+t2Cs
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
gFjY/wDeuTM6
             "]], Polygon3DBox[CompressedData["
1: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
DwV/Cb4B/Dv4DPAdHD+S8ajOev09/ff6LMHDwH+Cn5HbgK8A/y3fBU8Ivgr8
o/zatRB8Pvhz54PcyrUS/Bf4WdcX+q8E/yBHAvfB54Hv4vtHAc9Rh1/sVsLv
duf4AeAh4JnAZ1WJx4eXzIUzqvDRXUr4mfd7AvA3cmZwl/OdDf6ql3fvH/rP
9H6UxKoV+N5bwdf7POlbupP17WvG39HpjLipZ9H/HfgeYAGf6/sDfh48AHw1
+EaOMb+avs73/0P/C+CJwNeAh/J9O4GfcI10/QbvAH4MPB/45HZ9eBQ8r/yg
JDd4Cvwm+HLwUeA3qvCH9fi+od2s/5PQPqnkfTaezW38acL//uT7b3G9bNeP
16vwh1PBO4IfN+aDzwPvD36+yvo0DLwP+FnwYs5fzsdP6sxch1/9F/CA8QN8
Afh3OT94bPCl4D/AT4PHA18O/knODh4NPBx8RMm7f2aV/ONWzs+uzkx1+Npv
jH8CPBb4EvAtTfLWGevMh1/pfxw8Jvhi8C/gx8BjgC8C/9xLbB0dfCH42ybv
y+Z17o/Py/dzOvBN4I8ZPxz8Bddzor+Pi5ma+3tpmy+c1SR/mNIc1nygylrt
mr0z5/i5pD1qG09/LXk279J3V7t+GitnZ8zYjHnYeUv7C/btQt/a7Du5m5z4
cH+o6yPtMWjfzfHr8nlKN5znMtr/yOfAo/F5J/13y2PBn3DoNnU4qdx0b9r3
0X8leE3GXM74e8Eb8XkW49+TczThSfKlnznmY44ZT/7fzdy6h/HTN+HC5tTG
J3mUfOoXxv+H8buDb+uGw04jn3H9AO9P3/0cv3BJvDm3zv1dqCQ+nQM+Qf5V
Ei/OBh8PXrEknlxVJ34tXxKPrqgTv+YAXwA+sU7+/m2d9XldtpPN3eh/y/eJ
/Ze5fvI5jhy2xVvT/yb9D7fzdQvwa+AH2vmzFfgN8EPt/Jubc27KuYewvW3M
LZkvJ9XRC77hs0vfGvId84iSeHE5+091PtXJJbdm24dzLVASj89i/3H0LwO+
C3xJHb5wBPdv1Cq5xkngpUvi2cV1+MHXBnv5KttL8hbwn+xaEvyCMbIJ/3fN
fRm8E/hG2u+wTUt7NrZ15PquQbQnl/fSvoHtQ841JnjGbubkWk3eW9/fPbvh
K75Xvl/7eIyclOu7CXwt7Q24vlXAN8sfwBsaL6us7aN2w3/mof908Gm016B/
PvAw47ncCDwn+FTwKeBVwXOBh4JPBa/W3i/X3kvB6/WTnw8Ez1tnvf3T9RS8
fR0++E0TPrhpHT75VRO+uHEdPvl1E/65SR0+9QN4DfBWdfiPfGlT8E51+OLf
4E1cz+vwy9/AG4C3rcMv/wBvCN6uDj/9C7wxeIc6/HZurv808FDw6uDNwa+C
72/jleuU69Xeck75EP0Xg8+nvQ79mzXhLhPSvzntH9kmpd31PTT+l+Rrf7Xx
/51e5ue8TfiQ+Z7cfzz2/U377V7mk/PqBtdj83jff+cs+9bnuNNoT2k+b07R
i7Y2ZxM+Jf85j/5F6V+Y9ny+g+AH2L7j+EXAu3WTQ6unyDfUs2albxPX4zr5
7iKMeZoxi3D9F4HPMzYaz/kczXgiR+PYpdn2pb2f+TntB5rol/PU4Ve39DL+
5za+D+JzYJ04YEzYWI7P+Htt078Y+BLwBeB1wVuCXwc/2K4vm4JfAd/Xrl/b
gt92/W7Xt+NLcqexuPYj+e6G7Y1u7pn58E5sr3bDkdX71uslV1YjVSs1//JZ
mkOZS6l3mnurYallqV+tXEVDUt96B7yUuQFjZjPWlnBP9w3vhY8v1I3GqNb4
O/0v0L6mzbdf5pp3bcI3dzVXZ1uL9tP0b0v7o17i6+dV4rP6rVqfGqJa4tq9
aK/Pgrc3t2KbqBvNWO1YvVUtzRzQXHBctve7WXPUUzbpRftVw1TLlI+7tqqh
qqWaY5lrqcmpzc3C9il9R7Et1oueZm6t5ndpm4+bm5uDm4u/zvHnN9FITgWf
3YuWqoaolji2+ZBcsBt9VT1lPtqD2/Gb9RILjYkTlqyxo7U5+i/g9cE1z/5u
fsOyJRxBruAz8lnJAUZtY4axw/OpVQw0v6O9LFvVjYaqlvp4iXashqOWM7xE
61STUpuSA8oF1VjUWs40x+5kTXdtP4Ft4ir8oinRGM3X3af+sL75Uieai9rL
gyXa/rjgY3rRMIwHagLqG0+W5MITgY/vRf9Xq1DTUduRT5k/b1Yn3/J8Y9I3
js+c9pyMuaKTNcy1bP0S/n9Hm0+sXcIXb275+QYl+cSdbT6wYQm/vqvNJ9Yt
4ZO3gc/pZ/09BXwyeBX5cEl+cnvLz9VAL6iSQ6mNqpGeXEWDVDtdq4Rf3tTy
+5VK+OzVdfKhNUv45Y118oX7S/QxY+W1/dwz790/4OvA29P/Lv1PtPnNduB3
5NdtvrQj+H3wU22+sAP4PfCTbf60UUm+cHfLp1coyY+urJM/7QT+wPezzSfU
P3eookGpN11Y8i7rGegd3Mi2XRVNRz1GzXO/KhqpWqj5vtqdHopeyiv98E75
p96MmpHakZrXde38UktX07q+fR936raeCO292b7u5vl/zPf9G/xFN++sfsmr
nG9IE49Gr+Yjxoxe5Zh9esnHtq1yzV67mpza3J5850i0l2IbKIdn/CW+K64x
nRxzg7HLHMO1hX3zl+TM11TJmc2l1QDluOZgo/WjAcphdwY3/Xgkt1fJofRO
lgYP5nNxcwDOtyh4fHNy8LklGqFa4R6M78nvmuSO5pA39bIGuxa7fn5jLkB7
dfq35PntLT8o8W6OaOJv+VvVI/2+QU30kt8ZfxDjn6Z/3l70kqFN9LiLm+gb
ag6XyMV70UfUSR7vR5+Zw+cBfrK9VvVN798UtGfuRX9Qh3i0H33H3zYe+Cnw
TL3oHeoej/Sjd6hnqcmozbhm6Gfpa7mWOEeMHS/WmTvmGcam3xlzLO1uP/fm
hiZ6veuVes9hTfw1Y5pr5V51Yt2V8qcqMeU02lfIV33fWn4vh5XL3tyNn2YO
Yy5zUzf+2UlNuK3HeKz8+IBOOK/cd+8m3ORDttlpH8j2Ju3TXR/lFt4Hnz3b
Vk34+6PdcBi5zM5Nvss148kq/Ejv0zX+ANqlydp4UTf6+f5sL3aTw61D+/06
Wplr8n7gpsnaO7wbPf1L+m+n/QHbweC/5QXdvHPqY6s1yUXMSdSPjmc7RP4K
PkEu3IuepPf5IPdzlib5/Vrsm5X2DL3wM3naw/Rvwucw1w71Sue5fBXc60bv
0pPSmxrUifdlvnOM8aAbTvluL9dinqR/65rt+TZuspaP1EQ7dH10nXT+LlJF
w/u45YxyR/c5n41B18otmsQmfeCf2vV4sibX6LX6TMynvqXdq8JB1d+MMebX
5tnGHu/n3514pHql+rr6ux7jscObrP3mSDs2mRPODZ+Bfup58kvXYvAbdfT5
f1XZZ99KTbwO96nXqxcMqKKBrthER1dPd047t103XD8u6Ia/95qstR6jvqA/
MBntydnObbLZvoLxr9E3VhMu4Rj9g4ma6A3ynQuacJjB7e+SCx3N52/d8Ad5
xOrgI7vRMNVXzZ99t+RbF7Xz6e9uPLAXq3hyenN6cHq1anR6gXp+and6onq1
AzvJxfTU9Nb0DPU69ez07vTc9Jad085tNYMv6nh8en16Lnqn+m1yBz1YvVj1
Ob2nHdoYoseo16jHqBepJqRWqGeqVqQGpxaoxqPWY55ivvJ3+358Wic2rco2
Y/s+W6ugB68Xb45jruN6ZT2DPp1+3dLgqZpoYHqNeoxqY2querVqkGqxalh6
j2qYaltqqnqh5jzmPjM08Yp9Jse08cD5bgwyFq1W4g/oEzzLsUuW+Af6CM/0
oxGqFW7HOUZp16OP6tRn6GXpGb5SxRPTS3T9fLWKhzZ6P5qj2qOa40glGqBa
oJrkaCX5ydXd5DDmMmqWapdqhmOUrJ/v8H3fdeKtya9nrMKp5daun69V8ajG
6EdzVHsc0omXuS/HPgfeFzxFieao9rhfJ16ZHrFe8ZSd1CaoQapF6qFO2q7H
z1TxREfpZ98kapZ1xm7Zy9pgzmHuoUflM1TfGqvlF+M2WSP1AuUHEzpPuvEO
9Rz1xvUk9SJ9f9RjV26f1wjdEjxmN37E8038n6Xr1IO82MQfWqZOPY16rPxg
wzp+zuNN6kMWBm8O/qKJn7VRHb/m+ZJ7+zb4KPD/Sq5tAt9b8Lcl+bl5+iHg
70r0v22a+BXWW0xjPl2nXuS1Jv7RSuCtfRZN/KKV69SnvNvET1qjjn/1dhO/
bfU6ftEInd1n2U2NwHtN/Lk16/hf+t2Lur7U8cs+AS8F3qCOH/VREz9pPfBO
/fjR+lur1Kkf+hi8JHj9Ov7WCJ3fZ9WNPzTife0kp5VP6GHqzenR6WUvW8eL
855779VI/qyiSamdmNP/VUWTMtdXQ/qqisagtqSGVNXR4NSW1Jy+pP/CTrQo
PeX3quQces3mHGrFwzvJRfSk36+iWelV67lbS2RNkV68GsYfri+daBvD6ngv
aqJqo2pAX1fReNSG9NflApOz1U18KP0oOYRc4o1ecml13Of60YNcS+Qschf9
e7mH/F0e/6Y5Pnhm2g/0o7l9U0XzUItTc/tvFU1NLc6aDGszBndSa6PH/EEV
DU7vWQ/fWhI9Zb19PemPqmh6etUz8n3bdlNzpf87QzuH9HytJVLzP7OdU9Yi
WZOg1+mcGDE3+vEyzDHNNWdq54TvnN68NTDWwjjHnet6yHrJeszWFlmDYe2K
HsiI2ox+vGdrIKxNMkcxV3FN/rDEQ9NLcw47l/XY9NoW66Q24ZY63oY5q7nr
9L1ouda0WU81rfl9NzVQr5dooKMw/sFOtNFr6nglD3SSa6qJjlpHg1Ir1dPR
2zmyk1qRe+p4R+aE5oZqVBODX+xEu9Lj/7CKhqj3r0egV6Cf8EyJn2ktiDV+
1vqN10vs8h3SfzWnUBdWHzbXuKHVX+UEi/ay5izeRLN1LZqdfbd2wkEXp31O
Sew9vI2fO4OP60aTm7vVN87t5p54b6xRkZ/oWS3R6hdy7QXZSi8x2dh8Rjf1
N65xP9XREFz7rNmzdk9OaX3WC/3wIPnQGr14tnq3F3dT/6KeYnsA25clNYfW
HnpN1qupd3nszGxViZ4lt5vV961EL1Ers6Zx/JKcyLoHPXBzpRf74YEes06r
13jty7KN2Us+rrZkjmSu5D77XCOtX7PGyjhqPH2/5P6XbnKumdp82tg3djf5
8dkla/ui4JHBx5Uca85n7ncT1zZ6N5rne/RdX1J7IceX699YwuXN+cz91A/V
4s3B1AuvAP+vk5zB3GE28NGdaMb66+qbrnXmoPO2+W2njfFqz8+W6OWuSa5N
o/fCleRM1jN9XZILO0ZtXc9V7/WgbvJ39cPzaX/nHKLdUw/oxIOzfuA5Y1Qn
a5xr3adNtGs17k9L9CpztYnZvqJ9QUkt1TK+45zv+X7yOMes0ktOLGe3hsFc
+eA23pj/q9d5Ds9ljaD1IF+U1EZZI2C9rGvuKzy/Lzv5vXoAt7bxSm9Ajd9a
Fj0HtX/noHPRmgPrQ/UIrEVxzdc70COwlkVPQu9Az8JaFj0JvYy92vi0WBsP
9TCubOPVNy0neKCKJyFXOLrNmfQA1RqGgO+v4kGMWeJxWDviGq73Icd4sIpe
KfeQQ7jmfNXJ/ZaTWEsiJ5Cr7Au+oQqnsbBOj8RakSXb5+vz8lg9pK7vestn
5gZrJL9YUqurx6jXOE4vta/WUJ5Le/qSWhE9LNfPA+v4XPpd1ldO0At3/6Pl
t9Z3mPvqYbxqvCjhlq55A3rJgb+qU2/h/D5cnYLzrU3/pOBpS7jnms6h9n1w
rDnwIPBcvXhdcvL/j4d6YY/4HSU59Pd16lV833z/bLsGuhaqofxYJ8b6fqu5
zMN9Oq+T91ENxJz08k60kc/ad+Mj8AMleqpekDmA8VCN5/c6Gpjvv5qQOaYe
xLxtvFA7U/MxHziC/vuqeGKjl+jZozTRpPSS1bjNrc2xraezvlEvRo15aC85
j++z+pn+sO+U75aaymi9+L16j2oMo9Ceukm8U1/TH1Z/8N56j+X53nPvvRqC
9/vKEm4lZ5I7TdSLl2oM8vk5Pw6hfUAdvnN+yXfrdeovq9GZW5hzmHvc6zPp
ZI11rb25hOvJ6eR2N5VwOzmcXG7KJn61+Y950D0la7NruGv5OiVav/XzG3kv
wS91sia7NqtJmuuYY5lrXVOyNsuZ5E76r9Z+79KJviAPc246R82DrB92bvsb
nf+v9eIf+sx8ds5P79VhdfjbVSVcU04qN726hJvJQeWir/biR95rzmesAq8P
vsecUP7fy1wwJhgbPuyl/v6zKv6775/cdUgdP1Dvw3qDzTqpd5BrWJ+gp2D9
gvqOsdqY/QjnqJpwVz0l6xHUQvUnjeH6iaP2E4uMWcYu47n1xs+0+vo4/dSG
qkmr/6i5mvuZ85n7WbOl/2lMN7b3+9FfjOnG9pH7qbdwzXbtvqWEW8v55f7y
pZfrrEfWWtxawoXl4HLxa0u4rBxLrmUNxHt1fr/xypoO6zStAbHWY2DJ3HEO
Of+dD2qtvoNTlnAKuYU1dmu28c9zqVH5fwU5iFxEjr9qLx6OXo7/ebB+3fjp
3LHmwnx73JJY+l0br53/asdyMvPrASVcwf9sWH+7Zx2dcr6Wf8m55F7WMPt+
WxOyYRNOpp/kO+W75Tvtuz1ByXg1Cv+vYU3JCJ+2m1qTqpdYrmbg/z1cf5fq
JmbIBQaVaAfuM16cVhIbrDkx3y79rD3eU+/tWSXaut/hd90FvqWTHM5c7o6S
3M6cytxKzd9YemYdL+D2Ei/AnMbc5u72/TXHM9dbtu2/rI6Xd2dJbmjOaO54
nXyuk5zG3Mb/N6h16tnJ7x8u4T6uga6F1r9YD6vGqJ51cYnWogajFmN9j/NZ
vmA9Rd3PWu2a69r7Z8vvrL14qZ//uFj/K8eUa1r/o1/gmqp+bI2mtZpyYLnw
RaXVeqpw+8l7qQextuO1fvRu/xsix9SPv80500kOaC5oTDA2GDP6JRq9Opt6
281tPqAW5Zo3Ry81NNbS6MlZa6OncW2VHF+vY6kmHv0HnXhXa5TUZ1krsmST
9UuvQk75Qck9fK5O/ZL39umSXMaY4/qkx3Z6Ez9A782agX2r1Cyqp6mh7F9F
X1Nb0XOzVlHPUS/OGh/zt6c6qf3x+ozdxnDzFb/T7zZGyWeN8eO044396krG
NePbZCV8Qm1dTfGVEo/Qmg1rBtds+YDauvf7rZIaAmvV9BytLdDjtPbRGie9
Tz1LawutcdLLlB/ozaipT9mLpq62bg2r/5WSv6jjq+dP0sua4Jri+upaYQ2T
tXCPd1LbZP7q3L+7/T16rt1W7zCf1QO11tEaI71Ra57GavNda6GsSbHmx2do
rYp1FNZTvNneT2sgrPXTg7U2wpqlJZpwFv1fPUxrQa350tvUw9fLV4OftZea
sC9avUU9xJqDz1t9xVoxa76sXbVGzFow1yjXKmsUrB2zZurHVr9QvxnWPjOf
1eQleqN6qXqn+qI1W++2eo76jTVk77R6jbVl1lhZi63nZe2Ves2XrV6kfqOG
NbyKpqa2pWf8e6vvmN/LueXe13fz/yw966ZOTZhetnzS3Nq6KN8HPWNrY/XA
9ZLV6E6pohGq3ZlvqPW5flb91JT9XKWGzFozPeGJWn3A901P2dpcPXS9Zust
vBZjuLHcGGOsscZh816el7Vm1qCP2U9N2qdVOIG1anrWA1o9Qi9bPcPYawxW
35Df6hWaY75dUrP3W6tvWctnjZAavBx9cJu/b9vEgzaWGeO2a1LzYuxTA7TW
XY1SbVAN8aJWH/qk1fv0GwZ1ov+pOQ5r9Sj1GzXWi1v9R+3V37tDkxoGY601
Cuo/5pz+v9H81dgsp5EPqOH6374pOtF2XR/1NNUfx+onH1HDV1NRW5EfWCup
xvFCiebrfykHdqJHWoNkLRK7RvgRxjM9IGt+xuunJksfzTXG2nU1W/0C/Q31
LTmYtVnmRHIz9YNf63Am/7tlzZt+h/7DQy0n2rpJTY1cyZooa8/1Q6yVsibM
2rCl2/tjTZM1fo92Uuskx1ZbNCeTe8vJrH0w55arqfmqt6q/qgVbszByq3ep
V+m56b3JD8ftp4ZjpFb/srZDT0pvSk4zfj961yitHqa+ZU2e//VQk7ZWTw4r
l5UTj1pSQ2JtujUS1paoF+mNqGm8W8J3rJGWk8hNXAP1hK0PdW1U0/a/EGr2
at162HrZegZb9KJJD231QvVINXL/yzlNJ9q5Grn/9VBvVjv/P2AjeiY=
             "]], Polygon3DBox[CompressedData["
1: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
HeV+A2Ma57s=
             "]], 
            Polygon3DBox[{{1525, 1033, 695, 696, 1034, 1526}, {1757, 909, 742,
              741, 1080, 1572}, {1296, 1295, 1803, 1046, 1047, 1804}, {1298, 
             1297, 1795, 987, 988, 1796}, {1306, 1305, 1801, 1044, 1045, 
             1802}}]},
           Annotation[#, "Charting`Private`Tag$16007#1"]& ]],
         Lighting->{{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
       {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0jlPVFEUAODDKjOslgYYFoGRAiOJDQlUNAI2SAcWhE4KhhgzmRFCiDFA
Qg+/AH4AgZoQLKwMYVFZZOuwoSR2fi8UJ985996cu7zXNpV7N1MSEctiuDQi
yWtYK9kqj2hQ77GFB3zJCw7wL9/yHyeYqohIi2l5K4vs5gp7uc6cvuP6b8rv
5K8rI/JMGdsxNmbdN07xiI1lEcds4gmb+ZMZ/mILfyf78ZRtbBdn8uc8Zwcv
2Mk/7OIls7ziC17zjXt8dpb3znKjHuKqOucsh+pJ7nOU2xzkBvu4xlcVj++Y
ZSE5I5vFB3klxzmi54N9RuTf9X4mit7gnv3Gas3fWvtU3aP+YW2Gu6znivk6
LiXfiF9Zwy+s5iLTXGCK86xikQXxRJ6nLeMTbRUfqX3M0lPEDEuT+xucK3n8
L/4Dbk44zg==
         "]]}, 
       {GrayLevel[0.2], 
        Line3DBox[{1202, 1502, 1716, 1970, 1201, 1814, 1392, 1203, 1815, 1393,
          1204, 1816, 1394, 1205, 1817, 1395, 1206, 1818, 1396, 1207, 1819, 
         1717, 1888, 1208, 1820, 1397, 1209, 1821, 1398, 1210, 1822, 1399, 
         1211, 1823, 1400, 1212, 1824, 1401, 1213, 1825, 1402, 1214, 1826, 
         1403, 1215}], 
        Line3DBox[{1217, 1718, 1889, 1216, 1719, 1890, 1218, 1827, 1404, 1219,
          1828, 1405, 1220, 1829, 1406, 1221, 1830, 1407, 1222, 1831, 1720, 
         1891, 1223, 1721, 1892, 1224, 1832, 1408, 1225, 1833, 1409, 1226, 
         1834, 1410, 1227, 1835, 1411, 1228, 1836, 1412, 1229, 1837, 1413, 
         1230}], Line3DBox[{1232, 1722, 1893, 1231, 1723, 1894, 1233, 841, 
         1234, 1838, 1414, 1235, 1839, 1415, 1236, 1840, 1416, 1237, 1841, 
         1724, 1895, 1238, 1725, 1896, 1239, 1726, 1897, 1240, 1842, 1417, 
         1241, 1843, 1418, 1242, 1971, 1503, 1419, 1592, 1991, 1504, 1670, 
         1420, 1593, 1992, 1669, 1505, 1507, 1655, 1656, 1506}], 
        Line3DBox[{1244, 1727, 1898, 1243, 1728, 1899, 1245, 1729, 1900, 1246,
          1730, 1901, 1247, 1844, 1421, 1248, 1845, 1422, 1249, 1846, 1731, 
         1902, 1250, 1732, 1903, 1251, 1733, 1904, 1252, 1734, 1905, 1253, 
         1972, 1509, 1510, 1254, 1965, 1471, 1472, 1255, 1712, 1973, 1511, 
         1713, 1512, 1672, 1671, 1256, 1812, 1966, 1673, 1473, 1508, 1474, 
         1640, 1612, 1657}], 
        Line3DBox[{1258, 1735, 1906, 1257, 1736, 1907, 1259, 1737, 1908, 1260,
          1738, 1909, 1261, 1739, 1910, 1262, 1847, 1423, 1263, 1848, 1740, 
         1911, 1264, 1741, 1912, 1265, 1516, 1517, 1974, 1266, 1475, 1913, 
         1792, 1267, 1714, 1793, 2011, 1715, 1476, 1709, 1708, 1268, 1674, 
         1710, 2010, 1477, 1513, 1478, 1642, 1613, 1269, 1614, 1675, 1479, 
         1514, 1480, 1644, 1615, 1270, 1999, 1616, 1676, 1481, 1515, 1482, 
         1697, 1271}], 
        Line3DBox[{1273, 1742, 1914, 1272, 1743, 1915, 1274, 1744, 1916, 1275,
          1745, 1917, 1276, 1746, 1918, 1277, 1747, 1919, 1278, 1976, 1525, 
         1526, 1977, 1279, 1483, 1484, 1979, 1280, 1485, 1518, 1920, 1794, 
         1281, 1486, 1519, 1921, 1618, 1617, 1282, 1619, 1641, 1620, 2000, 
         1520, 1622, 1658, 1621, 1283, 1623, 1643, 1624, 2001, 1521, 1660, 
         1698, 1659, 1284, 1677, 1711, 1678, 1522, 1700, 1701, 1699, 1285, 
         1975, 1523, 1594, 1524, 1286}], 
        Line3DBox[{1290, 1849, 1424, 1288, 1850, 1425, 1292, 1851, 1426, 1294,
          1852, 1427, 1296, 1804, 1853, 1535, 1428, 1298, 1796, 1854, 1537, 
         1429, 1536, 1813, 2007, 1682, 1681, 1539, 1604, 885, 1538, 1625, 
         1647, 1626, 1540, 1605, 1704, 2009, 1430, 1646, 1630, 1648, 1631, 
         1542, 1808, 1981, 1705, 1431, 1541, 1683, 1684, 1544, 1982, 1432, 
         1543, 1798, 1855, 1597, 1433, 1545, 1800, 1856, 1598, 1434, 1306, 
         1802, 1857, 1435, 1308, 1858, 1436, 1310}], 
        Line3DBox[{1309, 888, 1307, 1533, 1596, 1994, 1801, 1305, 1532, 1595, 
         1993, 1799, 1304, 1664, 1703, 1665, 1531, 2002, 1635, 1680, 1634, 
         1303, 1662, 1702, 1663, 1928, 1530, 1633, 1645, 1632, 1302, 1629, 
         1661, 2004, 1810, 1529, 1628, 1679, 1627, 1301, 1811, 2005, 1666, 
         1528, 1489, 1300, 1980, 1488, 1527, 1978, 1797, 1299, 1487, 1927, 
         1795, 1297, 1534, 1926, 1803, 1295, 1925, 1751, 1293, 1924, 1750, 
         1291, 1923, 1749, 1287, 1922, 1748, 1289}], 
        Line3DBox[{1312, 889, 1311, 1859, 1437, 1313, 1546, 1547, 1983, 1438, 
         1314, 1548, 1550, 1439, 1549, 1685, 1687, 1686, 1860, 1552, 1606, 
         1706, 1440, 1551, 1688, 1690, 1689, 1553, 1607, 1667, 1441, 1649, 
         2003, 1636, 1637, 1555, 1608, 1707, 1752, 1998, 1554, 1691, 1692, 
         1557, 893, 1556, 1490, 1599, 1995, 1442, 1558, 1491, 1861, 1443, 
         1315, 1805, 1862, 1444, 1316, 1806, 1863, 1445, 1317, 1864, 1446, 
         1318, 1865, 1447, 1319}], 
        Line3DBox[{1321, 1560, 1561, 1753, 1984, 1320, 1562, 1564, 899, 1563, 
         561, 1566, 2006, 510, 1565, 565, 1568, 409, 1567, 439, 1152, 482, 
         410, 612, 567, 1570, 1448, 1569, 1985, 1492, 1600, 1754, 1967, 1571, 
         1493, 1755, 1968, 1322, 1559, 1866, 1449, 1323, 1867, 1450, 1324, 
         1868, 1451, 1325, 1869, 1452, 1326, 1870, 1453, 1327, 1871, 1454, 
         1328}], Line3DBox[{1329, 1494, 1574, 1756, 1969, 1573, 1694, 1495, 
         1576, 1609, 1693, 1610, 1575, 1638, 1650, 1496, 1578, 1809, 2008, 
         1695, 1611, 1577, 1639, 1651, 1497, 1580, 1455, 1579, 1987, 1498, 
         1601, 1456, 1581, 1988, 1499, 1457, 1582, 1989, 1572, 1757, 1986, 
         1330, 1758, 1929, 1331, 1759, 1930, 1332, 1872, 1458, 1333, 1873, 
         1459, 1334, 1874, 1460, 1335, 1875, 1461, 1336, 1876, 1462, 1337}], 
        Line3DBox[{1347, 1466, 1881, 1346, 1465, 1880, 1345, 1464, 1879, 1344,
          924, 1343, 1934, 1763, 1342, 1933, 1762, 1341, 1932, 1761, 1340, 
         1931, 1760, 1878, 1339, 1463, 1877, 1338, 363, 1089, 371, 266, 370, 
         1088, 265, 581, 368, 613, 264, 485, 365, 1087, 577, 263, 578, 367}], 
        Line3DBox[{1361, 1469, 1885, 1360, 1468, 1884, 1359, 940, 1358, 1942, 
         1770, 1357, 1941, 1769, 1356, 1940, 1768, 1355, 1939, 1767, 1354, 
         1938, 1766, 1883, 1353, 1467, 1882, 1352, 1937, 1765, 1351, 1936, 
         1764, 1350, 1807, 1935, 1668, 1589, 1349, 1996, 1501, 1585, 1500, 
         1696, 1348, 1990, 1653, 1584, 1602, 1583, 1654, 1652, 1588}], 
        Line3DBox[{1363, 1586, 1603, 1587, 1997, 1362, 1590, 1093, 1364, 1771,
          1943, 1365, 1772, 1944, 1366, 1773, 1945, 1367, 948, 1368, 1886, 
         1774, 1946, 1369, 1775, 1947, 1370, 1776, 1948, 1371, 1777, 1949, 
         1372, 1778, 1950, 1373, 1779, 1951, 1374, 956, 1375, 1887, 1470, 
         1376}], Line3DBox[{1378, 1780, 1952, 1377, 1781, 1953, 1379, 1782, 
         1954, 1380, 1783, 1955, 1381, 1784, 1956, 1382, 1785, 1957, 1383, 
         964, 1958, 1384, 1786, 1959, 1385, 1787, 1960, 1386, 1788, 1961, 
         1387, 1789, 1962, 1388, 1790, 1963, 1389, 1791, 1964, 1390, 1094, 
         1591, 1391}]}, 
       {GrayLevel[0.2], 
        Line3DBox[{622, 810, 1814, 623, 1890, 825, 651, 1894, 840, 666, 1899, 
         852, 679, 1907, 863, 690, 1915, 874, 701, 1923, 882, 1850, 710, 890, 
         1859, 719, 1071, 1072, 899, 730, 570, 571, 1693, 411, 515, 451, 613, 
         579, 751, 1012, 1996, 1108, 929, 766, 1093, 944, 781, 1953, 959, 
         796}], Line3DBox[{624, 811, 1815, 625, 826, 1827, 652, 841, 667, 
         1900, 853, 680, 1908, 864, 691, 1916, 875, 702, 1924, 883, 1851, 711,
          1060, 891, 1983, 720, 1000, 1073, 1166, 2006, 1167, 1192, 1168, 
         1006, 1186, 2008, 1119, 1120, 1169, 1144, 1011, 1088, 1196, 1198, 
         1197, 752, 1935, 1092, 930, 767, 1943, 945, 782, 1954, 960, 797}], 
        Line3DBox[{626, 812, 1816, 627, 827, 1828, 653, 842, 1838, 668, 1901, 
         854, 681, 1909, 865, 692, 1917, 876, 703, 1925, 884, 1852, 712, 326, 
         1550, 328, 252, 1568, 347, 260, 1580, 361, 266, 753, 1936, 931, 768, 
         1944, 946, 783, 1955, 961, 798}], 
        Line3DBox[{628, 813, 1817, 629, 828, 1829, 654, 843, 1839, 669, 855, 
         1844, 682, 1910, 866, 693, 1918, 877, 704, 1926, 1046, 1047, 1853, 
         1048, 995, 1061, 996, 1860, 1185, 1063, 1139, 1001, 1151, 1002, 1152,
          1140, 1074, 1143, 1007, 1082, 1987, 1008, 1107, 1084, 1089, 1085, 
         754, 1937, 932, 769, 1945, 947, 784, 1956, 962, 799}], 
        Line3DBox[{630, 814, 1818, 631, 829, 1830, 655, 844, 1840, 670, 856, 
         1845, 683, 867, 1847, 694, 1919, 878, 705, 1927, 987, 988, 1854, 
         1050, 997, 1062, 556, 1690, 557, 440, 569, 567, 1076, 1009, 1083, 
         1988, 1010, 740, 918, 1877, 755, 933, 1882, 770, 948, 785, 1957, 963,
          800}], Line3DBox[{632, 815, 1819, 634, 830, 1831, 656, 845, 1841, 
         671, 857, 1846, 684, 868, 1848, 695, 1033, 1976, 1035, 1037, 1978, 
         989, 1049, 1183, 1182, 2007, 1184, 1133, 1134, 1064, 1138, 1150, 
         2003, 1137, 1066, 1141, 1142, 1075, 1985, 1003, 1106, 1078, 1086, 
         1989, 1080, 741, 919, 1878, 756, 934, 1883, 771, 949, 1886, 786, 964,
          801}], Line3DBox[{636, 817, 1820, 637, 1892, 832, 658, 1896, 847, 
         673, 1903, 859, 686, 1912, 870, 697, 979, 1979, 1038, 880, 707, 2005,
          1157, 1159, 1158, 1052, 1115, 1148, 886, 2009, 714, 1160, 1161, 
         1067, 893, 722, 1004, 1968, 901, 732, 1929, 910, 743, 1932, 921, 758,
          1939, 936, 773, 1947, 951, 788, 1959, 966, 803}], 
        Line3DBox[{638, 818, 1821, 639, 833, 1832, 659, 1897, 848, 674, 1904, 
         860, 687, 1024, 1974, 1025, 871, 698, 1920, 980, 1039, 1110, 1111, 
         1155, 2004, 1131, 1146, 991, 1149, 1116, 1117, 1981, 1191, 1162, 998,
          1068, 894, 1995, 723, 1069, 902, 1866, 733, 1930, 911, 744, 1933, 
         922, 759, 1940, 937, 774, 1948, 952, 789, 1960, 967, 804}], 
        Line3DBox[{640, 819, 1822, 641, 834, 1833, 660, 849, 1842, 675, 1905, 
         861, 688, 1913, 974, 1026, 872, 699, 1128, 1921, 981, 1147, 1112, 
         1113, 1190, 1156, 1928, 992, 1053, 887, 1982, 715, 999, 895, 1861, 
         724, 903, 1867, 734, 912, 1872, 745, 1934, 923, 760, 1941, 938, 775, 
         1949, 953, 790, 1961, 968, 805}], 
        Line3DBox[{642, 820, 1823, 643, 835, 1834, 661, 850, 1843, 676, 1019, 
         1972, 1020, 1194, 1199, 1200, 2011, 975, 1027, 976, 1124, 1028, 1129,
          2000, 982, 1179, 983, 1178, 1040, 1132, 2002, 993, 1054, 994, 1855, 
         1104, 1056, 1057, 1862, 725, 904, 1868, 735, 913, 1873, 746, 924, 
         761, 1942, 939, 776, 1950, 954, 791, 1962, 969, 806}], 
        Line3DBox[{644, 821, 1824, 645, 836, 1835, 662, 1014, 1971, 1015, 677,
          972, 1965, 1021, 973, 1022, 1175, 977, 2010, 1195, 978, 1125, 1029, 
         1130, 2001, 984, 1181, 985, 1180, 1102, 1993, 1042, 1055, 1043, 1856,
          1105, 1058, 1059, 1863, 726, 905, 1869, 736, 914, 1874, 747, 925, 
         1879, 762, 940, 777, 1951, 955, 792, 1963, 970, 807}], 
        Line3DBox[{646, 822, 1825, 647, 837, 1836, 663, 1016, 1098, 1991, 
         1017, 1174, 617, 1973, 1100, 454, 455, 419, 1675, 535, 534, 610, 
         1711, 538, 1041, 986, 1103, 1994, 1044, 1045, 1857, 716, 896, 1864, 
         727, 906, 1870, 737, 915, 1875, 748, 926, 1880, 763, 941, 1884, 778, 
         956, 793, 1964, 971, 808}], 
        Line3DBox[{648, 823, 1826, 649, 838, 1837, 664, 1018, 1099, 1171, 
         1992, 1170, 1193, 1172, 1173, 1966, 1023, 1123, 1122, 1145, 1126, 
         1999, 1127, 1030, 1177, 1176, 1101, 1031, 1975, 1189, 1032, 708, 888,
          1858, 717, 897, 1865, 728, 907, 1871, 738, 916, 1876, 749, 927, 
         1881, 764, 942, 1885, 779, 957, 1887, 794, 1094, 1095, 1096}], 
        Line3DBox[{795, 958, 1952, 780, 943, 1109, 1997, 1091, 765, 928, 1090,
          1154, 1990, 1153, 750, 917, 1121, 1087, 1188, 1187, 739, 908, 1969, 
         1081, 1005, 729, 898, 1984, 1070, 718, 889, 709, 1849, 881, 1922, 
         700, 873, 1914, 689, 862, 1906, 678, 851, 1898, 665, 839, 1893, 650, 
         824, 1889, 621, 809, 1970, 1013, 1097}], 
        Line3DBox[{802, 965, 1958, 787, 950, 1946, 772, 935, 1938, 757, 920, 
         1931, 742, 909, 1986, 1079, 731, 900, 1967, 1077, 1165, 1164, 721, 
         892, 1998, 1118, 1065, 1136, 1163, 1135, 713, 885, 1114, 1051, 1980, 
         990, 706, 879, 1036, 1977, 1034, 696, 869, 1911, 685, 858, 1902, 672,
          846, 1895, 657, 831, 1891, 635, 816, 1888, 633}]}, {}, {}}},
     VertexNormals->CompressedData["
1:eJxku2VQle/3PYyICCKgiIIKAgagoqKChMhGAUHEwEDAAPlQ0g3SSnd3d4N0
c5HSdQ4t3XXuWzAolec8M99Xv/+rM7PnzJwz69pr7bVeLC51o2ealBQUFN8O
UlDsJ3/20/78/r2UCHoiNMnRJhgM1mexMgl8ACHBUGZpeyJQ5H4OnLbBQPDw
VER4qC60+94+OyBGhDaWZLVTrhiwM7lW7XLow27IJaN3PwlQQjGloR+Agck+
nbWaUQP4wl1E/yCJAIFuNpeoYzGofvCo5EmPEdyQM8Y8pQhgt0UXx5mNQXrj
ePwUlQlcvLbmYDXcB2UDUUP7qjDw+BMVNCZvCuw+Tg0eKn3gxXmxiqILA7WD
b7fW28xA80dE1EZzLyQcCf/gOY0Ba9Kh20e8LOA9x4I1HXMvxPD7mZ7dxmDG
ZPmFWYIVfPYVSQm37Ia7tRtJJsw4WGm42Wnw2kApw0LL9dedkH3hXreYAA75
OuwTEw/s4d53tX3aWW2wnb0vUEUZB/OF06nTCU4gbO4sUMH+FWSUS4UMXHAY
Vz01FiLsDIttSufSbtcDk07HyaViHGbLf6VgNW5AXU3cL7tKBHXz52PHPmBA
c19tkz1JD3REq2+v5xGBcUKaf9YUg/neVzGmjwxg199Usl6XCF89ORX77DFA
+zPGQq4ZQaSx2MkT7ESQobd+cNQLg17bnenJTGN4JD1e2tdIgJNr3roz4Rj0
aVRK354zAZXr3pK8bwjw5mDzs5B0DM5bH72h/dQMRiryp17M9EFc7ieSdwUG
bWbqy9d2zcHiuePUOYU+eM5acF+uGwOGcu7WC78t4Zm++rubib2gqVStZrGA
QSOF3Vk6lY8wGX7Z9Z1/DzjpWyXMUOLgcZX92rycHQS4yUSe1emC78nIPv48
DudYznFx7DmC9OPm3IbwdvAq0Ztekcfhc3x4o4bWZ/jatsXP1/QVpsrP0K/a
4TAw+DVrI9EV5pDh/iWZetCUNk1+RsaTfpoi0uqmF5AuyUYsphXAaeaI04ar
ZJxL1xOO+ASA5El2sdJL/ZA19zQz+h0GR2psx1tDDEEl/0nGNzL+pIsZ5b91
MMj99MZvWMEYVhyf/OtPJgLT91qZDHMMfslkCN92NIFTiuYGH58S4cgPmrVf
nzCYEso6qvLNFAgvwh/MYQRYZzGeEg7E4HvLEbqfJuZwqUmx/IwtAWS9xA7O
J2HwMPKXP+NzS6j2S80IxvugglHhcHAZBhFJkM0Wag0tg5zfuKX64ONTJUeG
XgzaaQ33HJVsYYK7mzVKvxf0SJ8lPpAw2HH5zFXd5QDdXXFeXNndIKbwpoPp
KA5jL7tp/0v4BM8lKhWu1HTAmc+XtBbEyPuZLSiUHu4C7+4lE7miWmDJFZTW
THHYrKI/faPaA55X0wl4KdWD9Ef/IPsiHK4ObebkLPjB9F+sbzYsG0qIvgYW
Gzj07sv8ess6BHbvJHa8L6hERAoT9skeHBhjeakza2Lh6KuhyMsf+4HVLeyy
hQIGf9TPXUbsJnBE2+iKgnA/5Dj+zVR4gwGvivn5VF1TKD+7Vp6/RoQfNy68
7yDj38RuC3yYGTxKFhV4HUwEh+UdPikrDCSyXjqul1qAYuLbbXFeIriF7KSJ
e2Awp8GhfH/ECtKu8DnYphKAOTdWRz8Gg6UmnXJJUxuQOn4wS56SADMDzgON
xWR++V26xZxrD0oXFyuorvfB2GaNdSIBA6/Kq0GyC07wk3CXifl0L7zG7lzc
3sTgc3bM1d9xzlBAtV7HcL0LJKUjuwN5cKD0ujR4QM0dfns4HZcta4XBlqq/
exo4DAWy1k9O+oADQ8SGlnE9eN5NEBYqxOGWjPnmEjEIUgedm30vxIEIhblV
8jYOboHFm529URCndUzUMbMTpTLtzh3hxeHw5TlDxVtpQNzWFtH7vIrW0mRO
fLg8BestHGzZIkVQpFWSXTzWDx2i+mLmEhi4Og89SDUyg8s+r05zRfeDbb0a
S9ZDDD5md8u6c1nAws/g4gX5fqg5HKQxoITBwQqG8svcVrD68qbsDokI+HS6
tAsZ/+wNdceC8I9wKtfznoY1EToMp7YcbDG4IJB92zrGDppPxZr8miHAOXbU
tRiEwaFYFs04ISe4MkAr33qGjP912psmXzCAEPzao7LP8ESzXeogUx8c9x7I
qhzE4MTNsaagM27AderqTzuWHjAOP5S2QotDcdSde/4HvEGpVJmb/X47HFzW
ufT2KXkPVzwfnlUMBL2YkUPOofXgt82zfOgLDoHjokDDGgGJ5xuNE5UD0Y2z
pVTrWzgsULSybWomg8eYmmoz7TSi9mygWNtcgQdNm7lx4sUwaTT3KbSOhGLj
fxz7zD6EPDBrcz3ZQigVPRiq3DyPHrfsWn3XX0RvpaM/qNAlgVhYX+Jp1QH4
z5/PP/EiBlSzuxW6tpYwzL10v55jADb5U13qBDAwsqKmg1Zr0GHYYhzs64eJ
g08PiN7DoPV4pSVntC1cn3mXmm/UD4Uxzj+mn2EQkhrAkMTjCLu348ekvhPh
IfHAxV1tDNIyCkR6Jz9BkcHSQZAigo7Zmy4PZwyKJttk4367QECxQqvSEwL4
t1+wxDPIfPGY0XFQ9ISpjq/KQkO9kBRRZyI1gUG/rfu2O0UAKFT2Xjgf3Qln
n53gX72KA7X2k5r4/FD4mnu2h3OoHu6qKkgkZOPgfS6KRboiAUZYAx1WP9Wj
HdKfc/sScJA49FjSW6kAmP3PSVy3w1Hb1L7S3+z1iGOQIaf9RS2Zh4x0D7E5
5FduuZd3cQmZbfrRnvqZBm+iaKJfSE2jXFp92j7SCpLAr48QrKLg6/In/pPv
JxE7CC2JzqyiojuXpejtgsA2/ejxZ0cHweV0TIsBLQaz2YnVwhk2INJB+HTs
2wDoNNMyyB3DwFfc+LXdT3swTszr0QkdABru3+/aODC4IyvuasfyCUzaSIKZ
wgNA0MxOP8uPQaaz3o7NgjMIf629fKqsHwzGqe3072NQ6syyPdzjDjqm5m/M
fxHhzNN/On5aGGgPNQWdT/KFT8gnoaWYAD9YbNsLIzBY5BKzyYkKhh2JOZpU
MbIO08bqRH7HQIvKLHVtLQYuLz1gsdNtgOETF3S34nAIvfchvOB5Nlw997pY
IXUJlVOVu6UKz8L8gSej9RYdkBe3XjOuNYsyj+CaJ1SXkaawntOGYT48p2Nf
ijGdRP6xbDU2o6vouvJHgctn42Gr2kf3/sIYytpPeqjlvYZYlxTD3kWGgIik
oDl33Df0/TDv9+2xNXRh+s+FIw1+cM0tVvfP8ChSY9q5WkJHQnZOtHHuHh4Q
6f+iXuPYEOTp9TsWDpMg9A31Grx1Av22KwSPzUHQk3Vn2R4ngQP9ibMP1z7D
yNl6sUd9g2BffWLs/DwJuBlVxk4buoHUCX++kMhBsKSbGzHDSfB0Oj/ziQeZ
vy+ervdIDIJJxCvktkeCLreHNkV9gRC9WKkrFTsAcu/C+2jYMJj45P5aUiIS
zg/BwyuH+yGkv/EtJfku6L3JVxhLSYXbxlgpw2QTSHPwXvEVxeHvhZNuOQEN
wKQVI/mtchL5DAU158atIi07zobNsHLIszd8GzE3iuxD/EdD95MQZ4wJr2pH
Enx9LVSuUzKCsOR6y9KHJCR5tSxY4kY4JOwaxffzjaD3ro0MWrokdIyGyVG4
OQCuHtzgvjg5jKoX5fje2JJQlvE7OkNJL5Dk/7ZFnzuMHmVhRexuJLSwqlEZ
HeIKzcZl7+i9htHEduYNb18SSvsBof5PPwMXzYLXbuYweJafTfnqRoIEP+Qa
fcUVZpm/hj4dHYZ7J2YZde1IcP0OrZ1TtifsdLCK2JwfgeRfY+4S+iTQV7y1
ziYXAEx1wt+KU0bAczv2oc8TEnTTd0m8eRAGi79MHAfLRqE7tE8llYEE9lOD
T/kSE0HiyWcfv9QJCF6vlri7tQpiuRVX6faKQfmTcgCJoxTV2diNP7+Po2tP
KPf8qlvhxBl1idxSIlKbfTKbo4MhFoGXKnr66bDGQktzw2kAsYVls/zhxJDG
xYkvhfpRIKXvXbR5fRA528Xc4KfEEL4Y8l1NMwho+kd4DAMGUS/LZ/lz6yS0
OdGW+krIBwal3EupOgZR+v7HHM8WSKj1GaVQw7QbnMys813cGEQM9U+DRiZI
yDm4SlpF3Bkq1r3f9jAOoZP1vSnvR0iIGE3dZBPlRPY3JurlF4aQ3UnXQoEB
EqLjD0hWumkPOlRLsXJu3+BHQGd4xcwaXG+z7R/a8AXdA8UEv6oxcP+ZVykf
tgaHOP6C/nQwbLqrxqocm4QjfBF/wn+tgvv0dNVN91i4M7m55VM5A/Rw1LNv
ZhmSZu4RDTVzoNPe2XnmMgZiJBNp9rUepPVlNNBEthNGGLy1+D/UovFXY8MF
ZTiSbZRNVODKA5bBzhqh+B408zqKSvEfhkrrlqM9LOPg/J9ZS0VnAorfOaV2
MgFDdgbsHC8fhUDFMTrnmyNERJvjqMOlhyFN032u3/TJ/JX4GYdS+tHNnOxr
Hg8wlC5mEXfpmQf85As7W3l5AEmcPbJP4waGhD4xhYjcdYEtqbbQJu8B1Pdi
N9OJC0MOZocS76t8ghtmNGphxAGkU2hom8KMIfX1V7dmVRyggI3LU4FuEF2f
u13kdghDff+EFAW3baAh7dtFgtAg0hzpDX9Dft8bUxsylNLW8Mwh/3Qh3TT0
vTs2z8y0CpneLufnH0eCU3ior+yrOdgIFtfsylqC2W7vHCmFVGC4rBK+qYbB
48eBj8a+E8DysMp9AcYqSKM+uCXL3A4uswz9omI4EkjV8FNTLoJbg/TfXQYQ
Ku6fobaswtHjxa/Nh6oTQVuX3iyhrwMZfxsr4BHFUdEFU/pNjzAQUtb22Ujo
RfMqR6n95zGEGZde+mAZAI1BFzDjKwQknzLuv5GLodD0FJ6OZU84r2JfTXWF
iAgbn1L53DGUHcnLevO1K5zgeSryYpKIGE2lmWt1MTQ613G1k/czMKiohDeo
9yM9v1Orh19iKHfxMuPLMEdo2yf5IrGlH3GYZJdvS2KIFLgi+H3dFnqEZkxt
WAaQTJdJzfVbGJoXlIFzDB8hOuUCv4TSABJt9o4buoQh53PsKbPFlhBT6O45
7DuAOO7Hzb4gv9frsM8oocEcHl2c8B/LWINpJqvAHd4xoGVR2Myo+QKrnVQm
1bJzcDv8l97xyCVkItmG3VkoAfcsKvf8e+lQa249OvQdR3wpJZTlX1Jg5LJg
x5ZgHRpQTR73IeN5W7LVVoAzEtwV2ttOBbehs990v3gr44gynlfNeTIQGDtF
TpZkdyP3gdd2IUdw1DoimvUhxxvG9y3JM2K9qKPnn2DWNwxdbpSzkfRzg+Ol
k3EMBwjo7cNIBaFisj70nrh/5aAzHJw5F5fQQ0DCIh2aU6EYUrE+99jdzAlm
ebMEFT4Q0WmPR11z9hjiy2fWiN+2g+VRecnpaSLqqXc96kDGX2gw+MHlmY8Q
syEasHmvH5X+2XC2VyHrjHWz4JH/rEABnF70BfWjwIsXDh57hKH9Fx0yxF5Y
AKrZNksZ6EcJV2UVsu9i6GiKFq9blBmcrB0OUGcYQEc/vDD4JoShnsnL3GNn
TWGwX+XOF/k+yLi32LrWTP4+nm4JxemgPan08xGLJ7p08JH+kz84Kj/KpxtK
HwNpeoMTB1XrULQTMU2UjKcg0Nsis2DgMHbP1WBtRVsmWQo5+jhKlKsPpYj1
BcpMG9vMtk6kUZFR7ncFR8VKvSr8Y+4wlBS5G0bqQaMK0tnpf8i8OxEgY/Pb
GYKi/Bm4T/Sh3wxTIq8HMcTvQXH0Bs8nuB3nwRNO6kP8ND9q28owFCLk8Yrz
qAPIyb3KPxBKQFsa1oTVOAz9tbq9nl9vA6xpUZ2Dp8j7/GhD/5UXhr5rvy8Z
OGkNHzzCwoU8iEjp8I/j9B8xpHRtacRkzQJywu6dk5klopLDE3QvyfjTq239
EzltDl57w5r3+PvR7Zv6ZhlvMbR64BHlqUBTUIjTZuQ37Uchc//0k55hiMtN
/OpPcRNgLeBakMnuR/qzcXy/ZTEk4HZ6KPOkMfT7dFlL/JeKXkQY7LFs4khz
FQJK+EMhj9/IZM66Dr26cYZnrhJHPHub9wuq/UEvohdjOtyCCgJ5/G0+4ojA
BGfu3PeEWbrnFg9fd6CgS/qMMvfIOnCHoB6xSc6zPaVNOf91I+yglo3ZcRzp
nZ2ObFr4BOlm2riaQi+aXYqN27eOIUJGydI9EUcQb65gKLvah27o6LIcJmIo
h6G8TSLXFtqyln0kJvrQYxtxWdZKDBmFUtVEjliDDP8RXoI+AWlQtLnQpWLo
yeOcFU9vSzjVcJNvZoaALLdf1h8LxpDaC/bUp4nmMGqTO37nPhHdNDfMDnYm
6/+WzpWk/WZwYYOaZl80EemlDf86ZomhNLfve4uJJrCf2YDx4hwR+fR7k4TJ
+EtGTbnvMzaGYf6zO/i5fnSV2pa7ShVDPCls9yrbDCGE78A/6jf9yGY49b66
IvmOXExJ5vyhD1acE79yvOpQcWX5XgQZTz3zUJaSTi9oCsY/MUp9RcRxw/L4
zzjiftyeeorODVKybu943G5HWG7etyYFHG393JKuKPwMyarXJlLPdqHLV1Wf
FfLiyFHnBPs7ESegO7hznEe5B/07sfn3KTWOHhZih9+n2kHkVlGahXcv0pQe
FlZdxtD4+ai+qqSPoPRvYugJ9KGqDyi0rZeshzUrjzuuWwH3DMV9E2IfqokS
OlZShaGJQ/az//gsoOxyAYPHEwIiWopdssrEECffOjHGxgxMyxY4tssJ6FLu
g+fekRjSOi6SakZjCjbxnkJZx4jot/LWnqc3WZfYSDVybcYgaKM7ZK9ORIZa
6qFcjhgS1qPbjtAygqCQPq6kdCLCfnHwHDXHUDzv5/X9Dgag8Co+q4mMv2yq
n/d5Mv65fhOMj7v0wO3B2hPB0/1I9su65fX3GNqHncZ1H+oCM6Wcce1HV+C5
ZHMlbhcHKZasveDyeKDeWXJb6sORtvjOoNV/BUDYmnsn0FMMvHUR1LQF9dA3
aJEqk4eDeOXNpFrKGNh5aUyVX5WHBl10jjku4iBm/aj8JSkDVthjvnwaW0G5
okcOyB+YhvGQlO6GkGowvuco9uXgMtI7gn/pHp1FWu1bF8Ypc0ERfzf1H8yi
wv9Cw4e8l5Gj57yqbUYcfBG+pfpOqhvOF/b8FjyOA21YN5NrewR8kOx6qsDY
AFaCJ30k0nH4oWvmdawuBQg1JziNyfpwUkajnJqcj24JXLqmPVYFFRZ78zmi
yyhZ/x3Vut0salTV674oUApf+8g3cGUaqUcyHNCyX0HHh1oCn6Qkwbz4dGOT
9iSaCKutsp5cRcz9z/1syH674GPxg4RdInhPlw8Za2CQkkGkYGUOA1oNs6j4
5j5YVmPeWCvHYNTZ32q/ciI8EXbdN8bSCJxXefnovHEw2/iXrvyvCAjXWGIZ
vyyjjyW3cm/yziCPN+LaL2xbwLyuy+mW+yRK27rv9KN7FeUkYGeUM9Lhr/ZM
fcr1MVQ1VapzrWwNHT3nynInLgpOKj65x9w0BH4WFaphhSQIImi6KprHQtfv
/sD82iGQC37jZZVJgjCl1wMXc3OgNm1D7BJLLzSOtfWcHpsFPK/37pOmRehp
Ax35kiFU8k4cMWaQUJManBCby4dSeYFOsbohRNC1ptsoJCGpyl6n+CPxkMlx
7aVRwxCSuT8o3lFMQhEejT/53UMgVKKmvJNyDCb+2/ux2LAGK78TlX8YRIKo
osnVP1sTkPYy4IQU2c/zCYnHqo2mAvNsyX8OdItgGelAdKmcB90Wo3xZ8Qag
2sWuprlVI+SrsA+ycdT0vGmJ7lwZGZ/egIDXfejAXapfui0YenqD6QSDdRJ8
EY8V5+8joteGFILCZP8Zw5U6cWorDJwU/2oLck5CVajSWMGPVdBlzd0VfxgG
ZSWFIxtB0zDPeVvocfkKGPg9fcDjkgibPyadAgYW4aXLVJf+rXmQfvrBM8O1
CK5QXu7TujkGZ/O+R6gar6H8hkvp5jfrIHxpv/rpJwg5bDZbpZH1ij7S0PzG
izR4yBB+0NW4C915qhD5hQtHMy3BN+uXIqHGWGL/A5YlKLr3uvXs3hyYzj6c
pY3LgjMPWyiWa0kgOojlhpsNIsHmX+sctDVwV+b2yon+CuhxLuwtasfRi5ts
DLN02VDe6pQ9eKIOlVCVfIwj3/Gnq15OErqxMJIrIV6Z6gYjs0FqnLs4cnvd
tT1QkQB6oofOiRcRIcjBTPSmKdnP9jEtyJ/Ug+yhkyIrPUQo6Jps9zHAQFxF
72vnG114tZtx79F/9SD4sOcDqRCH9wa1VIe2A6C2fO/4A740WCTCgMBvHP68
uVr0UygcMuyj07+7NqIjcWWU7NE4NDrX+1YNJ8IlOsfVSRpynrpe4EdJiYH1
A+XzB0zTodtH4TprzCQKUqNz0m5YBYovNyXdzPJgU+o+R6FTPXwzMXwkV4AD
ORARHpwLhaitW8OhHKXAvJzi1zeBw+v0XHsFvUhgdT6f1Rw9gDJ6zz9bPoKB
WlRD3OWjuSB4qTroyMtW1G7u37jyDgfV2L08RbZsEAic2MbpF9GDClXlbboF
ODsQdJVfrhjY26YV7qRg6BMs0Iyr9kG5z3DKc0I58DB/Um1kICFDcffOPc9R
VMLD090glgfVawZV0ltLaPAsSeH3j1mErdmyapVngPX8XmX2kw7g1F5mmriL
w3MvuxI66WBIxJZb7+m0wJ/AkPNtZjiMrIhL3RoJA7YgkfgUjVbgqi0NPq2N
Az2/7qGVl1FAtSLXkClQAEdFT4HGEg5zZ+5pvKNKgthD9feOhGfC8gvoSiPh
EJbNE3SzMQ10mjx1Vhb7kc6lO/EG3Bjsu7ZP9QlbEQj5BJi1vZpFE7t1/axC
yyCgXXJta6cGmHxS1WaiMWS+ts/PuoHMJ4sTx5o2S6HfiR0y2ZYRx0Wdx29L
Z9EHmriv1T4FkJscdDdUex5V/0t1+le3iIpZbbmeCaaAXZauxO+0GSRw+3rO
gd1l1JKSe1exPwHyuZKfBr4aR4YscR+ZjMh6pc6+YtgZAH3ned69zesDwnq0
+jLC4GXQRI1NfCD8nhiifZDQC/YJoo3U8xjohunw0EeHQLP8oNar0j54mX+N
q7sGgyY47DGsGg4/PRJfXaxqAxU2L9nVFzjsNu/3ET8WDyq3i1QV0zpgWsXn
1bAwDjo1Spm660lAMaKZtbEQAi8mDLbe4ziwydlY1k7mwXv9mBRd1VQk5JY6
yziAg4/hgXSF+TLof/f63XmyP1svbtBQCayHc0qsMmeom4GjWDjhrc4yUnvf
PRp0fBYZmRdPGfLXwiPF1py4h3OIJqLlgGL+EgqKf3U33DsLVqVdvs/sTKGP
mfEZfiyryOUck9TriRTgEK4ttQ+YQvtZN9pevF1FO/W9uGt8DPREhFXfHhtF
tyiftnEdIqELnIl1nx2DYPaJnFPH+VE0b98+ZS1AQn5CDNRar3yg8sn43eP7
BoBBs+kZnwgGf8oWPn69GgBhPD6nJf8OgFIspeZHOgz2lmOl1+dCgHGSyeQN
JxEmMxxaUtww4BwRkXz9Nwoa5bbETh8aAJG/cudtBDDwinG0fbUQD4Kxv+S+
JXTDnZCz/r40OCiP+dVdgAxo0C2VM8P6YPMwVdTHVAwuWLV94+r5Auf+03jC
bdCDmF+v5c+/xiA2RPPZffs26LTz7vqXtIz+3TzXfzp7DIVlSBnqaI1A7Hm6
fSuMM8gp5PaC+OMVpL6m8eGHUBEYh1pJH5QcQzS29dHHMtdQr/6N0AmRbHAL
8Fp5rTOOfkXS8Y5rrSF9oSLBuUOJkFCLZ0ZcHEVJFCI+VfwkJEIbX9X/JQZc
WdkfVOh8Q5bBv+YyltZQE9f3/UL9oXBVtJ1NtnEISd+LqdYpISFjKrhxIMMP
GlXeXi8lz/meDeXnkedULM4TTRYe4Fd9PYa1eQiu3qz9zVpCAu/trPnWEV+o
c6ZrKFEZAcLq6VVRNRLwn03YsyQEgVthHf0c+S6H3VuJ1S8mQVFIjuZcTzAc
jJ89lkiejzAYyTQVkcAw90583JdwUHGOPZ3JOAp98hRvx26RQPU5NdPGk2jI
GXsZWd8wBJ+3XilwfiHB8vCDcgnLZPB1IiQGLHyD6Fa6c0P1a3BinOvPmdEM
8HWU6RrNGIL4g7f+dniS4OSbmBy+a1XgOKdA8clhHr5+SQt5+HwBCBz96vvn
e2CpWi/LyGMIcab9ePLPgoQcDphFOrTWwabzrg8Vax/Sm0pMHajFUMLyMGMR
XRE0MgdPK9YMISYX3yKxLyT02N3e2m+OrAO62b82v/Wj16OaL3/dJn+/i765
ZD4B3snKSSfXDyFqrbVsHrJPWJHPO+hVHgF0DfJ551b6Uecz4YXjdzDU7KZ5
li0jAL5mfY6tZhmFP+HMhYZCJMg8PnV9Ns0b/kRo2QTSjcHHRoqRJ2RfQdr2
+y59PBAsOaQY0ptHIY4yQtCIkQR3T1LxP10JhL7hbnG+B9+AeP+kitT3NXg5
oP6p8kAovKifYvDLG4fA5Ze0wq/WQEn2fLxzUziwH8r1V2QbB2HGmZxtmzWw
HP55lcScAMUrhyvvZExBuU4CX9nDVeh+QdtTZpEMyUyOGaH/TQNvf/yUWcsK
fIwwSnu6/QUKf6b7VgctQtUzM4ca7Xk4prsxIGdWAVfEahj/CE6BT9lW7GeJ
FcQhnc+Rt90L3fqrNdlhCB4dG+9x8cfRx5lzglwnq0HVkoUzd7MTpcV2qwhy
4qjm4bTtkE0WvJ3wNFO72I74W863O8njqEJiLkHyfgpcloqg754iINvCTl+R
AAxt3on/XvEiBnTfdP+w+diH3H6FvFYn+6UBNydm1mtBECvT//3U6ymwWLQ9
Wma/CpYOHPdZpKJhTnKb6+/jGfhuHiY5LbICdgyPqGYJ8VBnN7w7lTELwQ2Y
wcLNZWjxt51xe5sBrSaCshf/LkKe3c0RihPzcP34IdVnGfkg08/qgGuSfcOt
SArPfAQ+Jxv3Zf1qgKup5q6EP4swdOjT3umWOaRKzFI5Y1QHx1am+jnvhEOE
cK+x+SqOzpmbh6VeLIDC/MttTFRhqOrOzeLEnzgS1d1/Ti82A7TtqX7Uf2hF
T3W5Kp9r4sjhpn2HvV4CyGhl/vsc2I6U0pl29h7iyCWGky8GDwbGkWz/3Fe9
6KjLmlgwhiElCVUvarVQGHlxj+inTQLJwocWvSXDcFjA0vgCKoY790KfP9gd
AZLYmaKqKyS0XiXXla+WDyMUHzqOjs0Bmxq+PSe2BDv/Hu7heBIceyu4fLZi
FGp5MyqGf66hoc5k3kqeEvBvVXJgUu+BucKq6L1NDFW0zesL6eUCV2Dc4bHE
dMSkZXDNdR1Htt40TtilZPDZ2boap/IVSVxaWxhzxFEB59Xne63hwMb+VO/g
60YIxqmu70TiiIbL4brAnTQ4xGrWdr05FtGOGF25t4OjQmrCtu6FCJDN0fUo
nFuGTx9XnV7HkvOF5+awnmAJtJ9uMOV6VIc+qre1aJF949zDVa1AUihgd5q+
yhjUIT667WcM5HmVKE+fs00gbMXztohy9KMw0anrrmoYWldX0pd/qw/SF1x5
6inI2amu/JyfJoZsv3rM/qPWA7pmeZqZKCJ0WO29O2uJATNj2RmuqQ9AozcW
I99ZDo/uFtn+HsIh0EKwLzgxGHqYZPiq9RMRX4dkONcWDgfVaTQPScXA7Mb1
8YQbNciiWTOtvBEHazNRwRpCCqThs8fllabQrSTmoWinVXRB4gxv9ddQIJxv
C9+3No5cq+gOEO+vIcWnh30HOiNAYjvFY/LSGJpmLHgbUrmGOF7293rHBMLz
m7pdYlojaJutNTjpLQkVNx0jBlgFwz49h6OP9o2g3N3LWRtmJMTUqojiLHwh
d9nc5uzyADow3cNGyUjO3bJlHCcKQkF5fEOxxagPydUXVHwh8+u5Xd7hM6oR
cNed+/BD4Rb0kqqyiMECR5PSoUW/wqJBQPOHYnwuDi84fBuxU1WIK68zYGR/
OTgdbvi7tlsGFYNE5b1BHN2yCrI37EgEDVFzvbDYQnR5VfCfzyKOHnw3dtL3
jYLKr7Syw4Kl6HOWlaPDJI4oHQhXAx6FQKZkkByTaD8i8tmUHHmDoTdjond/
+unBFTpqg/q7q2i0nrFFxmUKWGR5PcL+lcJb3MMokHIV0fh/HP7NNI0MHng1
HdDJhrqNG38//VtFqYu5dilhE4gt5q/j+3vFsMdH8XkJm0V3mS8WN+5bRgdr
ka+PRhKY745vMz0zRu/MtdZnl3EwneT7Fd5UCDVGnRIb1BhKGvTGbP4RUcbg
vGvDegPwvDWwYLaZQRYXE9m/H19BI8FarPy66aD0bKdaVrcXbnWLnmCbxuD+
606rZ1dzIHAiznGhehbJ93pR+B1dAF24yL8jMwzmPdE8t6Mm0fOEDxLi9auo
85THxZqf+bBr0HbsdcQIWHhXFojIk+B7gOD+nqFUsP7bcurIj3GweppSYjO2
CsS7f2BBoxFSlQtdXlsQ0dM8OfFbLzF0fYXIfk6pHC6+kCi/RD0HiSdqJ5n6
l8DG4GtXhXsxCGcZ+Yi0d4P5KLNKOjk3cC26UmY+bIK//tpGXUnzYOH5+KW7
8yLE5mtn/UvPhoiF9KsDv0ngMov4R+X7kaMez/Z+sUYQe+1yo9AYh4G+k84x
M00gMZg6lrlTCpdeuvTpqWPIxKHPR+YDEXYzyh0yyb/7NOoqQcEKR5plJ45/
O9SMkg5c+Ev3vQiyZDQygiPLkJ/K46PTPTj8J3f9jwhNLqhbLE4vx80jEl9p
4xXNRbDfDuH5LV0OgxY+DUw/McT+XoYv2LQTtL2vTZbLI9A+3/c+ehhHAp9S
eXyP+yIDhbVky55y8P3HKcmvv4oqD3vJ2b+dQk0cVDsBr7/A3WDd4pDji8hT
gGKK4swC4s31d/zyJA2sHp0scJ9qQ7RLf1S0RHCIsiCtc1mWgHj4rWPvGyeQ
Dk1SCn/qKnyKOOz3QbwRDlK5y3hfXEFH6a6sm/dOA6fKiqHMUANIvpByvkFY
QzwEccRD+Q2l0b8MqfxcCQPTZ05gjgsohcvw2decBTRTYj2Tqp0HWHTh8mpF
IxApnjfeIecs2stG1Ib7KqHhsHhgn2MVYpQ71fXTBwemn3qqh9/VQRrHJycl
Khypvgl5RnsvCTFQnqbV5O6BJ3lzhhJZs8gFJWe3LS6h5p4XUV0OdcDwmKje
fG0eiVDx/93pWEQ3zb/su9ZWBp3PZF/T2E6iuGpCx5nBVbSQo+d1pyUJpM16
jZUv9MOJHe+PVJIYvNUfvNHWWQxCUy6bja4tsFiit/lDB4OYlMi4LuZeeNNv
VHmDEI5mXUlBostrKEV+NCtT4xvIvjttNTE7iRoHlE9j6ysobpT7aZdpO1j9
m5PYKx9B/UW8rpmS5FzwtcKMPTMdmM/acvaPT4BuhVCn+/YqLAscOqlWlwMa
Fe3Hem6T4OoIp2Fo9yCcLJFJ/MXSBjY5Aw0Kj0hAKzyUeH8gF934YTK0bToC
bigXjbpUIiqZP4NHQnEk+WO/i0ogAoqFpHc4ew+SyPj13GkHQ3Le89SsEvnA
d7nU//CBGfC0M3zSqbMCzFqLUu9yUiHr/ocQt8urkNdIk5CXPgX587JcU9fK
oIoZqPl/rMIe91uzH5wToPKdMtF8HMF//W7et0vmYT/rlab3AwvovPuttrQP
X+FqIOEJPkqAOy4t3E8NMOQq3Dpqo1cOjvV5/qO38qF0PMzzRj+Oymeld7YV
S+BwxQ1jD8dZSOb+fKZGeRk4bvQ7lz5NhGu+v4V1c1bAcOG/08c8pmHu79FN
F/5C8KkUvT/WggOfwLmW78qBqOmf8Y93UTUw79V1jv/KMlDgxf9F2s2iRe4/
Rsd7KyAr6VYLxesGKNR4QykVjSOWmNxuqZl86I7ScZrcHkWN75le1ZL9Z4R9
qco2VQE8q+jYla9fQpZvcPtChjk47y73+9BIGUwFnTag3FhCOIGpnfB3Fl11
/BtsT5UO8v5XC5cu4Aiypa2NVzqQuMxl/5P0hTB8vplR7eYqksyJeJtaN4We
zI6KPOzPhWabY2Mbyv2oQzZFvo+c40a9am1Gc0qhvuRJBksujvgMWUasH5ZB
SLejUtZUFdzjnjbjeLeGzrzaFs6kH0fWZ2RDvpL1R0BcbidkawFd1T6631J0
AfUX6198tpgOZ2/8+C12qhnh22dETpD9ne8h25qKXxVw6vl+z5L2KfTuSr3b
wMsViB3b3Kc62gGklroGHY15lP2NK+OT3CIwf/vRyubXCHmPFCTlyjB019L8
BT7ejugaiut7ulrgEWm20e/+AlI/NpdGmlpAAvt2ff6VfgHxxO6MEj4C/KwP
/+VkgEH6fa9z38h7SK3vpD88uIzYS3X6LjFOo/Lhd79nL/ZCdbPoc4YDJFRx
72fbvYd90FV17bdYYT9I6Jz5QnOoEQFrfvR8JwkERpaNdB8MAPbc6ce1485o
LfGDnIobDiWuYcfq1pshfs6OJsl/DjFYfU/+eH8JnY4zVbXJqIKNF71nzFzG
kb1rlt/e4zVkcSND9a4n+X1vH7tqNjsDFAkcTF2JC8D9BGvOXxiGUz6qu8xq
Q9DWZD+qzUPOiZZX6KVsWkHt2oJR0k4z7BsnvWiPxdA9uWW2V/TdoBOgFKJe
OIgyvZAzq/UaSmQWyS3UIcAbRnutjwa9aNai6NlVZwydptmIsBdsAjflJLno
p7PwH9SNpSotQ+aDfy98npeB1LksciQZh/3st3DvvlVUdMPjAKL4CpnL/+xW
XJfhEU/tFX+TaZTxJ+kru3svcO4vCOdRngdGj8AC68ZFcq6Bc/848oDTn9fW
YnkF/AuaD9/5OIVa9Spv7z5qBl2r202HynH4rPzwbkRJCUiOeuxs7FSAWWmT
c24wCTRsTUuwiiHUtfhZ9O+DMgg6Zf1s5soUlNy/EnzSeRXdzNwoYjQtBM9b
cWG8LAOQf2GKRfoShppoL0D4sWzIl1l/1zRN3rPTzy5H2Hki0ycBSV9rSuBj
otWNFI5ZyKndPbHPdxmVSt6Qa84qhPnjsRW8JUToNjtUOmeCgUx0aOEcuy78
lnQN+PVgFF089froBCcJWiTdvkJoFlzqoJg4VDSPJtpNKhx0F4GjIGEVCy6A
v/etPQcqcJS2deKuBnUFShiLtDzIVwoI1NQGl3DUf+2d78mnbuiOpAfU0BRB
RMz9JBu+MSR22MXaL2QNkjtf2WKJZSBcGmY7J01CiRzhDQVKwzBels7GolEP
j16b4vPys4gyP7901X4ZySvQ5crHpICFDS01hyABGVkGr1xSwiD6MjxhOdQA
Dz/oFI+8nUYBD2SiKIkr6MovU2FpxmwIontyp7R4HCFzG3bLF2uo61qGKUNp
DFxXDYi4U9AA4yPxsZ/DcdAw3lSlEfsCl37ybRH/5sPm8Z/eu304OCSGUFNO
lsC9GXdTRWwUMQX0ppiR1lBr+MGXFJpFUH0Rz3G9OoJarH0Un2iRkHBCqUD1
/kSwcxT18n09A84KeavX/y1D69bODr5ZCaQ6MRsNzll4SSWx2H5zFm0qOP18
s38aaFl/TOuYz6GJiA2dM97V6Nyrj+ZKykvQqpu1T02LgHz83sVeicdQP8Fo
QjIjBZQucmss0UzCvnjt/MHfq3D2s4CMQXwieNt8Sl/cm4PmJ4ZKsQxL8Di1
9ccBzy9kP1y7f7/LGoT9ojjgpfwNFGh1bB54NsLMK0sFY5cFiBXQ9pfZnYeG
4dwvodAC6RsbP21ItYi0fyUkifzOWR1WP83TMsG+PfKWxfwK8L19vnGZexp8
zM/m9/1XDPp+bUz9T78BfY1g3UrDGjp08NXBC9EVcLRvRW4isA9S7117Y+uB
IefzHL5zLrWwc34voKduFRxF/Vev3Z1E8OrrL/vycijonyyyJusjOtjN4Xp8
BsICY56dW8oF8aVrvyYXp4HtDF8ii8IKOnv9v9y9R5XQfuzX43rpSdDk/qZE
MbKK9OdUx+lovkDsq9aw8+z9KOHMufgJci6Lol2RfS6nB/TV1QwG2flIuVU1
2WINR0l7Z4dD1OLBWiqMjbuRCEHsbl4JRhhIHgy+c6r5A9QaCHy6KTWDwiw/
nzgjsAJPCwQ15/ryYIKT00g8pgUllN4rvm6AQ1aFe9leVzLU/5xlpWSbRe6z
pik9QcvQm5GyNETmi7rOW1Z2ygJEfNNbbEb2/3fG34+ujCSA1v5aUqRzH4pY
/DW6Xo3BMXm2qjaRTKDSSx0cUpxCFCk0GvEGq5B09D5HinoBHDBNYv15moQ4
Qlbure8fhWyD88G5QyUwp7K6TfRZRLqjmbfFlObBbcaHXaasBn4rRKiJZPUg
MrEp6Ncx4KmmXtrtzIfvjXkWU4MLaETIxOPw6wUUyKpY9bwmE0LjJB5R5a+i
937BqsUtkyhNXZ1Ydop8T1v/aAXfmEGB2wF0kY9X0GXjA+1/DGLgRnHCx883
5tD7j9fitjqWEOXY+1U5s0Sw/ZMz6+M5jdo8P1ZXoRW0yehJfeh3HIg1CA43
3iL71hK7/JFkHNrMr/OPhaXDVMO33LyEIsjgoRyp7yfPabc+2FgUwPNXtxj9
9+bRpU2H89Eci6iw7OClJb9C8BvzO/pKlYQWPynoOV0aRncoV7nrJBC8POmY
uVs1hfiU2rIekPPcvg8hjEM7CXCfvZu6f2UGmUlFOnxvXkYmYZudp0ipQHjz
8jtsTqM97l9fuY1WEHWW07AVWyaE8VaN5bQRoFlx6hRFIAYpn3oFxSSTgYc+
T3u/CBG+7j839d6GPP9okjaomAXazdTHZ9qTIWH1qZR4Ew7BZ2f/8YrVQFC6
TDav4hhq6bsZEUO+U0Efo35IWlSDyLLAuzNbY2hbni/44Kc1NNFVdYh6MwWK
rvwtnkifQuftH97gkiT7F3kSPZtCLlQdLZ8+dWYERv57JPlGlwRJ7Q/Z0+kT
4G/4Yvme4De4NjYqp4ivQUy1muFUQgrwD5zuoEwbgAaJX5/+MmGwoP5p5Ule
Bnj+E7kxWz4EnW5XnxYnkKAwKrbcp6UQdqTWpI9EjEIEYwmT8EESZOTMs19n
KgCOK0KD1/ZNA7vvm3rx3hXYPxl323gaAa2/9lGG9G/wZrrnYHnxGjx7v9nq
Vl0GrcyyZZO6A8gu79ozv9MYSjYVAXXqbLgkle+zP2sI7Uv+yTsfTULKWm1v
mhNLQOOA2WCQMfn+3g0J8Ndag7cqlwP2KUYDm+VOEB/1FFTNfa3uyyXrm72V
0OmOBBDmdrORTh4DzRWDc2bhaxAkLHrIyD0ZGs47/vh9ZwrsB+/SO7iuQrn5
rr5mdBYEswOfPGkKFgTbmTvZVuGJOX3e/doMOMq2mJcUOAd0vr0xDDpL8NJc
bef+s0LI1laZGMmuQcwm33q6inBU9NRohEuiEPbamq6c3iKB5D9DtY3mTrA4
XK3hLtQHmnPTHJU6GfD389+f31NwlD57aW2ZugFSrpyS3m87BR9e3Ap7+WEV
eGKt3+TTJECrXYI8q+UM9Aez+8udXgEu7wy3Us0UUOUcFf4wMgNq9FnZvf3L
sH7va9WNe8mgcPxCXuDUPJhcNOBwkl+E867WHrN+mRCnbnXqjvMq6B6Lx3z/
TEJDskzeyW+VcPjpfUPL1zgkPJ+GH6ca0bNg0rwyqQ4i5/82nDi+AIuKsJnN
tggiG6+GftSlw2VNfYsr9ivQLKn/iXpwGnrph0Qu6H4BU4uO9fv3FmD1S8Vo
1cYC+Y7uZXteS4Mv6+9UluX7wV4mrwqTwpCLnOY1TL8AHnm4pfi2F0DJAWbL
oFkcFVqWK6iapwP+U6M64mQXcAxl8nmw4KhToJu5qOwL2HG7qw/5t0L/fn6C
y1scMYBb3c7rTGiXkh7vW5iCbs7tqHe0q0iVajdlrrAEAmy4N6SZcRhtMVly
KOkE0+TON4OfiqEw4nStzKV+5LR1wqbgHYbyXmpFayzrwsDPODiZSYR5b6Xr
w2YY8KYhmy2PD5Al5hXnPjaNLpjL0Up7raAQxbh3FFERsDV0+cs+ozl0K6dL
vitqCTknakydjUyAo38/mLVfXURF0MK+TrWAGi9JEAkrKRD+QcNNNH8BZbfC
7UqnBRQRMd/IOZ0Nesp+K+W3JtC+/z7y79xcQ8dXfUek7INhP370ZZLxFOIe
amWxNFlF7ocCiTzVEUAXlPX6wMw0krdd5JV1XUE3AE9rT4kF6cDX911S59EN
UWF+Sf1F1H5dzU5/tBjiDpweI0pOodRT56XYPFdRmfsqLjCYCEOkTXPfBzNI
VU64tKthGbFekxPjUGuCv5+CvA3NvyFXjpMt7yfXEPWXu7nWd9IgV/L43n58
DOwmGGWxj2swbpHCPSKWDy9FT51tKSegHGbC7xlvDNVZe/1xpsoF6eDK/946
T4PYbPCKTO0KHLC1aQtiS4eXnq7GEVmJKF/Z6Wf+DI5S90Us2dcVQfGby3RS
XEvw0GXN78jvOdj9mTqok54BlGeoNSYsV8l3sZZGdGESzdB8+Vv+BAFDRqnE
JYZ+5JXxeETpPwxl2tnHr6brAn+/XpDM8AASnqnKINBgYMsuzVv0MxP+a97R
5mYpBjaJRiWJWRyYJvnut/TEggf7ZV7hl0kIv/aRRf4HDoGCjmw1hFSYTlKq
qlNqRv8J3n8V5IDDWYOT7/NM84A7r+gJ/mca0diYsPfJrUDU8UcjujfKIem0
zupS0iwqOq45TRRbRj70OaRc42TAuQTsfj1eRmYSF7UHFWYR7e8v08bhFXAx
Mo0lV9gS3bUR3b85iKP7Q+x3qnwr4JftyTfpQ/PA5PAqjYZnEanLvlvZUauE
zfhd2XT5UdBLGnnEcoKETBdFKMKoCuHYTea4MPocZPmfbDINjiOi/1LVs7uJ
kKiw/aP82XuE06wqt2zjqN1n4W3lajIcXNMK87YqRZRT753XR3EoH31cw5aU
BMT/TGsHjJpR1PHJnQ0XHB76+f19654Km8Vdy/OthUBheTG7dh4HSzcRq5Cn
CfArTFVzUTkaCtJl7sRs4vDdTdVsujAJvvPXnrcvJQIPNrScRc4LlyR5I2lZ
DWCltuL8D3kixK76qPp/xkDxkXC0Zo0e+Go7+PTYEuHepQ31k7YY+FavLDOW
GUL43VhWP0YizP52yL/hg8F9FXdShYABXO4tXBcRJQJLNRW7oysGld3t2ClJ
YzhLJ7b7qoMAz+LvXqkLw0DnjG0T/YAhSLrmblp/J0CpOu0BSvJd/pXXdZ1J
xgQoLjBYcTsS4BOe4aSUhMG/q80Jic+MgXf2kdFWDAFYzZyMemIxKJscWO/T
NwVhnqRor4sESH2nNsqVjwHn8LOMOUUTsI2YuVx5hwDTriMh7DkYcHzmy+Os
MoNqe6nqmtY+uEbF2SBbg4GCka29s93/20tV/V8vNTftK79Abx9EqUafukL2
dXdGpThDRS3+n34l/f/6lQalNZVew70gIOhynnISg24bZtFjzyxg5wppWris
F85ML9Tbz2JQt/E1MZL+I6yVUMwESvTCxEKI2IsfGOxmCX9eO2UFIatH8qT/
9AAucP7e6i4GxG+HU7r9bGHt+yXS85M9sDMspq12CIfx+ZaLfoIfQdzYbvyM
UDfUtvs5SLDiIK9bfqo32gHuTtg3XfzQBWy3ZZUSzuNQYfG9Wb3CFgwxdlVt
ik7Q6VhSlhHBwVtOeeLuzU9wnS+bQUa5A/5U+90Mv4fD4XqGw/daHACP22E8
c7ENMo5sXepQJedU2kO892OdIXVZmqWkpRVoGOVvVmjgcDr2A/85mU9A947y
4TGtZnizWNt6wweHA9+8D79pcQOdqD18+VMzCB9g/HDBm/x/OK88z8x0BmeL
u0EqonUQd0dzhq8Gh1NM4ckVR72BuyWau/wHWf/TkjlytTEgfS/9u8JvDB7U
uXdHyPk39fnKAiLv837PN4S5myYgHYLT1hkRQYi2+vOeHQamIWyeBCVTkBg1
3i3mIEJ83/criZ4YpGp8Vs5NM4MvDv6snxsJ4N898nghHINrrnqS2twWUHqY
c0ZKiQAu3GDOkYHBT6eindhZS3i22p95ZbQPZtbGA/MrMcjmeFgcTLKG1v/1
QG3+Tw/0SEgyCnPvhZLt3VDCMgYF2ewYr6oDMNV7Fkzf6oF/wrd8/6PBye8m
8uIs0ydAqQsVs4OdwDJ5kbDLh4NPrFychK0z7Lvq/cA3pw3GpfJG9injoFS7
37osyw1cZdjRKclmeJphR2vli4OUwNhTDgZvoJTje2tqVwNaiwmv3rficHJP
31OyLABOf9+RHbRPhOn2c3rq2/9/z5ey0jkjFGIK0+sMJPrh+EtFyi0VDOw7
B7xo75qCVbvfvug9IvRJ+P5XoImBZZfX80e+ZkCopVmYLCaCmRBr1AQZf96/
HyZy6CyA/szpiP63RHAarL7d5YiBNtubuvOtlvDmTsYsbBKghnFSZsofg+rr
mjWFBGuYdbLhrLYjANfDy2VhZL6LTKnRHrprCz4q9YzXlvqA8Pksc3A5Bss1
uwdZrjuA8v96oOP/pwd6cKlAaO5OLxS1N8cbk3n048Ha2i8ZZ5B5cOR1w0YX
CHdLn2Nnw4E4pthyzNgNRkVvKm1qtkPB4b3vl5/gkJj1bO13rxfMv/1nynqi
GaxvZh7Z9cOhNHY0vyg5ANKNIv0DM8qB8w5plGYYB/tkwwsKo6FwRslw9kVy
P6zcPfBMWg6DmyHJ/8mvmsNmpIeztVo/PHD/9sr/JQbbO0t81KmWcHKLVBVx
tB9yjGots9UxcBC7bc6daw0UjwM8hYuI4ND7fp3RFAMlbdpYrlO2YJQzq6gj
QQSTxMMLr10wGCxeFQ6ncwB1VQa5PwUEuP3584B2FAZPvbwNooacoDVG+5Tk
3z6glLIrVinBILNDhUbuvPP/0+tk/l+vU+uYzq0XH3tAvVS6uHU/Ds7ijqnL
Ol5w6wH1VTPbDnj1aMFkGnA4V/zoxOz7ALC4MUJfPdoETItWB4oCcKD6JZSk
FxQKL1NVJ3J5BkBF+6jTu5sY9IoZ7EtzsIYK8cgrL+b7wZfT0HhKHIMTpi9V
9Rds4Ks8k6NLSD8o2h+0ypHH4MCDN507BHsYCoz1P8DfD+HvhAMc32JQStn4
b6TCCWS4v2gO5BMh6+Gx2wZkfLzS/kUY0ThDl9td/7MHiTDN1ct31JfM69ge
2nIGNzAKZHlgw0mAK36yUyPkuyBWx0F5kM8Lpv9P75Lwv94lD29JCoh3QXxu
9ZmQCzgcb3oUKrYTAv8fXV8dFVXbvU2JSCmgooASIgaoiBiAshERCxEQBQQp
pUTp7u4O6Q5BAWkk5BYkpGGCBgmRnDMiYmDwzbue+d61Xp/1+3evWXPO7HPf
+97XnnNd18juiNYG/lbIyHGfFaTUsc9dvw6NfEyDc8j2yAE2c3B1GJjzXyeD
eciDsFpCIQzcM703Pk2ESCZ/0nYKXpt7HnZtPcQdSrS9NQYpOA4TbvEt5sMg
UqZj/4koLzieYnbFUZsIq3o5X7YdxYBh6zmW6WEfCFHzU8e+ESDg7fdOLRkM
7pywEjk75g8X1c0T4y0IMPlBTDJDDYPTNCNzxD/B0J8aHeeRh4dQhwbFR5Q+
Wcz22P1c+ij4+Rf/0YDKf/yYYtoFDS1g9bFeqCKYDMpnMCxIthAIlrjkWP8x
lOVrUfhhZgWZSFQJrm2EA6tvWTXDz0FQMSd1qEyQoHPcmP1RMuU+LXCPJkYH
4WVaf6L2LAk+j7fNFoT7Q23qxKpbySC83W9TnLxMgq88r1i80oMhjv3uNpkn
gzBQ0H4j+BsJCunFv8zHR8K1v/iD61T+oJ7c1KlCnmmk8JVt+XP9Ejobwh5V
qPMGhCc3OVJYR9Fyq7F5yFkSOmTq3SGrmgL31BiHc3HDKOdKpM92DxK6s5q3
Uc8dDC8O/UwsKRhGuc3x0qyBJMR7tb2PR8wfmIpLla4QhqEv7I5MjTsJ9i0b
SbXyBgOjgJPaOscIFIb1GqhakSjnn5wK52gE3A2uOSTzZAS4dss37dIhgcVe
u+eSpbGwi8rLM6Dy8oSovLz959I/ntMgoiXpwYzhQxjq8faUcVdIBfOuyz9i
2AZRhOgu0SwmDN22lpiWY4kDY15GaZYng8h4Jm8g7hsJ+e0o6CiyiISJ7s8P
XxcPIsb7xmS0TEKBM44Po8OC4YDUc7+fI4PI9yXTycBZEtr16st7Nz9/aJG6
Jyu0MYiY7h0Mc5sgoU9WM78N432g/1XL6zDOIXQC3685PkxC/Q4EIYN7XvDL
4z3v88hxiFtlkTDNWgE3Rolwu+Ox4CJPkxRvMAkdGketf4usALPxQyGz/OT/
8uMyqfw4byo/Tu7r0tWUEjzqDz4k+s0aQwssv/V7yyMhdXzt9Jo1AekyhzDt
UMMQTdQfy7XhYDBtCWU58oOAnnLI7BWWwVCcyIBKVrs/GJ9Kd2zTJqLuDTa9
X0cwhF7e12nr8YFr27xZa/KJ6MBUt24FH4ZiagxznYO94KSNPUPgNBHxnqGN
5+fEUMrjtgsuPu7w/rH/rZkd/+E/+hn6bMMQR1tB18tsF0jcvq9OZXgWNH4a
9npwLoKdlrmc1UYOXDRybGE/0YP867NOO4iQ0T3zJc5bW+Jhw9RBuBDXj/qr
EwtmJjFUqRNRdJ8xCpr/4q8lUvlrx8IvNwqz4ZHMeOCWA2EY2uH3XI+X5A/q
xclW/eV4NEJYjf9MyY+lxa+H9us+IHRZ1cXvJAFdIrgoy93HUGysi4NKiRcc
VU8/KxVPQHqrRTQRShhKKAbBYy3uYP/7+p6EOQLq16xjIMpiaFYkiBw07gIS
zbtOlxwioq4P3wModRhxdgQzDTo6gff1P6JfdIkoUmkiuYCSz4pMX4VUBwfo
kckTbX2yADuicoqa7T4gO+ayvQpVNWCdJLmLqbwZhOejdwmkk5E6W3PNiROF
cDE29pPq7wrEDRlGXrNk9Jjta2woPg26dyn3wkILCvpk6S4SRUYLgoZBxb7x
MGD20LDGvQtx3Nc73Qxk5CyYzD6iEwXLr9vaVJz6kF9rjtYIPRnt2aESo2QU
AoK7NcPpOAaQ7X3/zslBDCko32t23vdv/poxlb92welRnlY1DsUw1Fe+TsLQ
xRPHjjC2eYGzk2DSJ3k8stC/u7Hui6EuJ5sDbOvuIE/rpFdZiUdiV0jlOEr+
vz5i0aZncYW4l4JTNpwEFCm0NzbQEEPHFkVK8rKdoIOT24SkT0BvS5u6Xe9g
SLPQ1Nc/zQEYb3K6B+UQUJk8Y8L56xh6utBrNTBnB/Wk3TKvxwmotXx3j40c
hsr9SkeizSm4o3/6+PXj4dD1cVtZwU8yeqsRX8n0PQ0eJ0yaeuvVopcON0rw
RDLiy/0hL5UVD58bDthePt2KVjqKEl+Gk9H+r0fM7kREQffeoMFzNp0If03B
OVCZjJR0Dub2vA6BuqmP+6q/9SBSlJ3CAC8Z7bC+ZehiHACqv60l38r2owQj
1ejbaxhKp+G36pP3heXs3Fb+kwNI4Y1bdxoOQ1j791Nms17/4q89pfLXTsYE
2vB74RB7TgTfzmwMmZs+5i8UdQXto9t2mf/AIU1xK5WQSAyJ7/9lNfTWCbR8
7mVJ6+HRLfatvnGeGOL/lbzg+doBHniNzrdU4dHrElxGLSX/kcvvCGP09nBQ
ZKvwERoCqrscwZFshCGtTYky60BbsNuyjeONHAE9ilJTW7qHoZuHC+NiztvA
Fhp6ZnVnAjo/WKpnoYoh0lba2hs81vBe4ELTb7FGdLZP40Z/KxlxRdj/MQ2J
gm+6l/YVmbaiPYkna2ZCySj2ANOT5LkQ0C9ou+DV2IEkuHOBW5OMIlk7LGbj
A+CLyxV/pqluRPv90aidGBnVHbhJE27pC8Lj6ak5Mn3oYSfhFDcTGakYc3oI
sXiDWHa7VWdQP5qWOBhfuIghu8QHW03uekCeeu3aS4UBRAAz3Z99GBJ9qMMz
rPZv/poVlb9WlWv+cIs2Do3ohp6sfoYhuCZdoEZ0gGXa1w0PW3FI5n2jcWoC
hsYUfbU+8tpDxESjBa0gHnUfWjj1JBhDTmfYqzrSbeEXXudIrtV/eCK9kmNu
GLqsPhPYoWYDRsM/HthSzqmojeA/+ZT8974W8ZA8YQ3VGqJjfF/w6OfB9axU
EwyJHNnDK33MChL9fLrXjhIQWw9yiNbFkFxnv9tChAWYe+dXeIe3IgdL79GA
EDJ6corf8UtOANQqNXlclu1AHOJ72Bp0KetT+Z7btWBfyBXQDrdk7Ua+N4y+
J58jo4HzX8MPHfKG9I45ntOyvchks8kDx01Gbo2x23XDPICdzFYsR9OPfE+G
OuT9xNCj69lrYX6usP/hrRDnV/1IffC4vdos5T6ZMgtiGZ0hLbjMf0R1AF0I
Gu4R78XQQ5k8ZqlVBzhE5a81UvlrU1T+2kotg9I2ORw6Wv65tfUFhoh2yx6k
UlswGiUyZ6fj0NT03b6INAy9Ut2zg97IBs7rna4sWsWh/NvNRrgoDJX0a4f8
kaOst1f6rHtk8CicJktUx59yDjJep7slawVb70cbWbjhkVz3yFYaV8o5aPql
1uilBVw+H5+9Qsl/6C3Z2URK/m10m6RHOJ7AqduHXBhK8aBstixVQ+lvs4xd
T5u9eQwtfhqPDSl41ua2d80udwycFRgmdm2zgGhODpM/h/FgkfKu6XQQBktn
MQ0NfUsYfkHM2TtOwa0fn64eiaPgU5Uql15TKyCz7a/YDMRB6ffguzRZGNB4
v7/z+bg1uCydE6QVw4H0Lb+N5hIMxAUvTzrR2cCXS0H46PYByH9gfdT2NQaX
N8p7mGds/jX3YKXOPfiy7hgbv+oHnyc3zt+dxaAgVVBlZ4ET9H5ur9ba2g8n
/XcOvt7AYFojynE02QXCt14vjbbqhawXZzzadpJhMvKXKOu4GyyE20VtD+oG
LhqJzryTFNxq9pgQ5eoJ5SGnXwopdEKyTcMzXVUyWB2TSh5R8IZtns47rse1
wz57x1/WtpS+cZf4QjjlXNC7dCLwqWMLJBJ1zhx5SgbmN0n8b775wUPFZOmO
ZTyg87EmG6YY/HoQZIBorWBv7wWx1Hw8iHbLnzxrR8kP26Fhng4r+LrdY1r9
Hh56+YLozbwoOK7bvYgh2xoIezZL/mzBwyujPudnFNzx9mb5o+VwG8jJXhqM
LsCBqNnDWqZUDAT2fb/aS8HLN6Etn+kiDugMk26lvcAgKXcDl5xlBzROhVXx
vQNgJn8rzaQBg8+4tB/Tbfb/mie8o84Tssx1Vs4G94MvHe9q6iJGwTeVHFMU
3PQy9hTdVdU+OPeBfQAxksGHd+3CqwdeMPP43SJBrAcWJC8kMx0mg6cN7xXN
Yz7gs4TVfPfphHlig+vqTTIcOWBmeF3PD3QHrZv7DrSDZxkFTziRYb/qrKUc
TyCo0n99mYtvBq5xpfXT+WTwjpiICfYMAYEGi8eWv+sAqW+MWwyQofLDI18G
+wgYWVNeSDtDgE8LvttTdDDgr+AQTmO0gdCWMz0uK3hg5b2jM0jJP1db6CPu
rbZQsb/xVHASHpbeH5K67oDB9YAhFzYhO9jBpuBy/zwefEJ5VPj8MfBrP5ep
es8efOXonPXxOEhxOTBuHY+BI8bJv7vcASwM5i6s6uDgF7u7s+kzDExrXX8m
HXECi/Uxh64hCv7NVvfZUk+Jz8cf29vg/K95QjB1nrBF+or1Dbl+eBdaNHFg
jYLrq4IINVM+sNw5Jl3P2wt7nxYdLt1Lhrh6usYThv6gXyqmF/+lE/z2MvG9
vEIG63OXL7cUBoHIV5PaopQ2GFw3XNTxIIPIj6vrTCLhcAIWhmaeEmBn4qe9
Dyn4N7pqezk7ZT0k23pWNV0hwImU3G1VWhhs4+TwuP7NHnrFstI8SHiQ+ZZv
mEHJ27k18nt+J0fwdlQonPLHA/0VOcYHzhhspvHuqD7iDOHZ4QuK7Hjgb5Kp
uhSGQXeJHArkcIX3JPPpIV8cbLz80uNGqQPROfqTJifdwcrIr+z2hwHY46H/
bF8tBk33C7dIeHr+a27ARZ0bXETRHILefeDz+XCLGj0Z8vfGLi02BYNLrfDu
orddIMCQPUl7ngwPuBoPP1+KAOIr/YyQ9VZwI/r/YvEnQ3i5hi2XQyzY1bPI
GXATYd4x65TUGcpzrJNNPLbPCaqffa4/2kKA7hOtuEQFDDi+aEc2/HKG6o+/
i/MMCSDkQq/MfwcDfK9iIvchNzjDZR4nQMaDu9tHuYuU/LQqaAc8f+EBNb8d
A0Ye4kHcU6I+0AMDwzz32gc9XhDjuL2RpxEHbZLeOzwSKevzBE+FoacPBLy4
lf1lfQA6yt+W6FVjcMLn164Cfb9/zQ0GqHOD75Z7b+y72QPxR7W7eoXJoG36
ofKYThyIJySdS09oAxX3m9cz3cjw2TRntEY/GWCjfIC0WAbkc1oPOT9S8hDw
pg9Uc6D/2y9iUhcRlmybb/PtxqBlXkvaYIs7qEZMXtvqRIQYuvo5zoMYsDXe
+nSX6Al48ZxMIU4i3OcbafxGyduoR6bQ0TRv+NCBkzKPJcC+y2r+pZR1pRkr
wTpW5gvkq0GNMp/xcJE5gNfFhHK+kCT8q64GQHvA2Zt2Ani4ftkLv0o5R0qI
952MA4L/NTfQoc4N8Ke8LqwatcK9xcuf3vuSIXT2Y+nTtGdQsCjOQRwdBPa+
/blesyRwCRHwUZfygRDuVL0PsRS8P1S78f4TCXwMfxQqRvvB6VMdqlLnBqFz
sYxlnBaDl9/D5aTSA6H1s/Sznw1EmHK/yii2B4PT21nDLraGgupf84El6nzA
/Ci3wRsBEiIZ5fi+PNqMNMovdTLPDUOTyXJaBc8k6h0/PhZ3egXt3TTk/lOY
C76fAg9Xnx9DFk+45MW/rCAlmuYuxtPhEGo3e7IlaxgaOp7eVQ8iQfMu2LPN
Jwh2DswY7UgeBskEXcsXwSQY1CjuOSsaDrdpPs2kXRiGhbuaOxxTSdBmrTpo
2RL1L32eS9Q5gLBVV/8y+yBSMR0/WMeAoZzayS2bM1nA0CQ4V/NjEPWf6f15
f4yEPF/IkgrrE2GckN533GEI6Y+Likq0kJCWoT2f70oMzGHcuGnzYeTTaTUR
EktCj9cT/jSMBIK+y74QXbdhJCJ6UOhqFAkJCNKQLKv8YD3VKIVp5zhsjehU
Y32zAu/xtxQmdGOgVpmcs7A6DmNGOolDgSuAxSpOi79O+BeuD6Pi+umMLzVS
Q3jkpiQ3ddIcQ1X3Znjfi0SDu8FWA6d2Arpn4jykeYmCQ8+rtEkPhEExj/IR
pQgi4hcbW8sWoODiPCmmXfYh8KUtyk2NkocF27stGRQ8HpX7Upi5IwDE6Tti
HlkMojsyg/s+fSOh1Wc/div/8YVtFv30B2oH0UitstynRRKSeptxiqHXGzZj
1x2mvgyiQ3uu9D6dJKFE8qpCIIsXFGTu/oOXnIXZ9UAhm+hFOFvzeIcxMftf
OD2ditOVHa99H+fGIxujvgL9EAwZaP22OPU2EB4yM1v3T+BRoId87sQjDB3g
zasmSPkDn580R6ArAfnV4x+9VaE83xv0qO+3D9DCSnj1DwLaP/IzVkYGQ3dG
zzAL7PMGUX9V+lP6RJT/U8xLlYK7RYKuGkju9gTJ7ZGEjkoianrJ/+YCD4Z0
xQL2WVq7waGSAdyzn0T0sjvsvQkbhj5bZp0xk3ABZ0HC/f39JLBePTF76u4g
eq4kGPFnohYa9nEqbN7pQfMnxYUfCJORsWWnU0ltLLy9e9UxoacfmZu1WWe9
x1BA5JVqbfFI2PkXjn5ExdFM+0LgQT0OmfxIr/iUiKGyHfj3Gtne8Lp2/8mL
9/CodeFevowXhmiFzwibS3qBpdQZXdIUHvFaSSYmUPLDutpVst7lDisPF60n
1Qjo5nOQb9eg5Flu07XSzRV+6RYnECsIaD3PxN/4CoZ0LO0K+xycgeT83G/r
ViK6U2aD55LCEN8ro0nZMkdwo7l1m/EWERl/talwEaPkTfpVWq6QA6j43E7g
Yn0FhPSLFjcGyaiCoS/VpDQbPC4p3hT6VYzso0q3i5PJyAanL3/bLxme7d2+
mXWxGZ0wVWfOe05GZe2BbwsPxcGhHXf59we2IU+htNfNHmT0XtzO/Eh4DFg5
n/4l/60LHThy8bCEFBm9Kv7Uc3IwHDbPM8+4hPWhz0wGTjl0ZBRsXtmbzBIM
7/b1H+SgtFyhX+rylYYo+Wl+ZpWd5v8vHJ1MxdF7vldNsVL2F1fvXpWMLAzJ
/7D3VRZ1g6VQHXdWJjz6EvZ9XDYcQ7t2LpkcvukCV812SmdTcET4FtOn710w
FLIZJfUw2gk2xiMC4mbwyGw3F/sjSv7jdWIZKv44gJ2dLMcXGQJyjxa5UqKN
oQ9HZ+6px9kD6wnd8sIQAlrVp511VMaQ0frOs8vKdnB4hs5Tq5+Avk6kRsXL
Y8jEI+G4+VFbiElvst6ZWIfSSeyyZjgyemticsnmSzR8WPLb+bjxLZqLUajf
nkZGv2QV6ZUEIiAx1I+JRb4dcUqb3J10IKN5BYZbWE0ouPB0nLos14VIJJqX
mZfI6Ni16EEiZX8pVOh+/iLTizJeToU3U3Df0Ezu+a8tfrCdiWE3ptCPOC9c
VQr7jCH8D7nOUgsfyHRaTDt1YgBd/BRzYQ6HIfWVSzfIkV7/wtG2VBz9/je9
KlkHh6KEj08+ouBoZ6mj/vJujrBlh8QRiz4cWr17lcD+FEPfqs4KPT7iAGKB
d+O+n8YjGrMMWf4ADHnlhv36umwHT2nPvkqNxqOgLNvD0Y4YijGzuXus3RaG
WlV+psziEcudgtLrlPxf2PmdzFBvA+XKq6vHjhFQ5ubyvWMUvHw2/f4Kc5s1
0Gcy85lbEtCFS8+LeW5jiIQZj1z5aAXhO2I2ikRbEJ8Az33WJDLST2D8wZAa
BF7JEKbS2448ddN7EqzISHoxgOPhd3/YRNLJe8c7kWB9gaDUNTLKqnx+NzHD
F6rX7sdIaPegzks//NUPktGUzwm1ujxvOGp2lUHTpA/R+owo6G6hxDkSRD7/
9gQTC1XOL2H9iEG7X51/kZK3E5Z3Is66g8EVSbhzaQAJyFmFH+vH0LuSCuVL
Ey7/wtEzVBwtbvsj0/AiDsmZB56KpuBoC78RFS8RO6A3pJH6nIdDroWC26xS
MfRpNkfw/BFbeODJhfRp8ShNZ0BYPwJD2+POWilL20DKUJCzrjoexUurpmh7
Y8hNo37WUdsapi15019n4NHLh3LHbttj6LxT+cxAmBW0sl2mU/mAR+I8jvOn
KPlvnVyeuZNiCUfElYv9PPMg5cDl7QnrZCjCXB49CkmFVJEtKSF1T6DMmEs4
6icZVEqz0raiTFDqZT915HkT/BpYtasvIcMbGvcELqYUYKHqvQxR9V74qXov
knf/VwfmOjW+oxDJDFfMoBr8sb2/Oxch6UDTq/blGrB39L5kr0ZCITQjgTEu
w3Bx5LBgpW4jnI/1E4jb0gNsJ4Vbsii47MoOuVUbh6dQtrc4S36tCcL5T1/x
LiSDhYuAcnVDNszs+ybzXL4f6S3/CHvRhUFZVUjEWPkr+E7Ve7lF1Xs5rv+P
3stLaryMGq+h6sDskHKK/nXjA5pP/2PNULaArrIfHBzKKoCRxHgfQfVpZHp4
PJ9+egn5a/8aL+nPgkz1P3js8CTSeM18VursCmUf8Uzfmo8H7tB9T2O+4yE/
OvBUmBEGsdIDbak2MdDPMcf4qZsAeo0d6WtyFFyc/aCo4XkCMGfjzog742Dt
ROWZXRTcYTg1s++tfsK/+kxzap+ZS+UrHdX/h6+0hcpXav66ZB8fM4XumA8q
MasvIzVepmv5uoXAZPqPbswrqm7MOapuzA+qnkwDNc5CjXemFVSUPxiC9Bhr
S/02Egwr7tAQC0sGnTKPbm/rYbh0qa/tRwQJxmsOH9J8lw613zxpcl4OQp1z
ufSnDyT4aFqNDhfkQg31vfF31PfGT1HfG68mhRgPwDDaZ8W/ejOF0p/OcG74
SsRDWWNDkv7jMXhxCeOWnl8BgYpXHzrzEkHb7OSGivsspPR28Q+JLcJ1h7EP
/G9rodnb5npHxhL8vnW0Nfb9FFQ8PqPDyNkGu511Msck+lFtKq8lzyqGeM/9
efmKOROy8l/fGdpJRL3pGh/5JDFEXFffxxSVBEczfgT+ujMBW7vYeKYsVuBc
XTe8dYsDAbXe9iMOH8Hqp93Z7SUfYdv5knNBO8rh24mxqtWQDASVrOMWy2TU
a+X5dU2tFJoPrB5os0KoiBg9tVRHRiW4mshTx/Mg4ldMgb1OG8rNoFnNciEj
A9WBKJO4PKjerbxxPqsb3eFvPshznIycvm+Mb55LhJkl4bYNRQQqqvSyq5Vk
VCnPjM05FYN7OW2hAikVENEp++I3Mvo5Uh20pTobhIcfvmsJwcOg0KTUKycM
Kna7zgZUP4Knxomw/3MzfG/Nk2nPJcPB+zdf2+dHQvqubWxxxk3wbtIh+E05
GaK30Ak0W0YDS/y16E+L1XBCbdv5/AkyXBKR3PLnXiz82Lpd5llGNvQmjLz7
Dz9332713hCGJMhjFVXZ2m4IDvFuagW/yYBXopEt10sEhsv/6LeMUvVbTlH1
W/7WdVGgxmvq9rnanUwHsQ9KxGnK93cdrnJxPpIOEWrJctbDzcg3+syb3FQy
iDVuH71xsRCk0jT4Eh2XkEldzI9LHdNQLR9jn6pfBf6PZG5/6eyE5l+iouLX
KPVNMXQ062YMREYc6WrW6YB07oVLfdpk+HUih65zezw8/zQmGDzaCAVvhp80
vCGDVSCb4vrWdPD/q76dpNYxXqqOyjpVR0WAqqOiEfHpze2JJfRH3HcHy6lp
tOHLbrCuXQmB6VwRr3o/oJ+vDUctry6g91JFcThKv+12PDLyddYUsrLchPXb
y0jGwm+elzMRmvM4svaxjSOk+8FZoHkFPalI2WvrFAmS2odOHD6Eg0mJiG1t
JRg86Xy8pbw/9F+4m0jF3Ud37D960xYHKt6nGquyMditNXSdli8Wvv2lr2JC
1VeZIxzvuG6PAyGRSxbHKJ+/fO34BZ6wOKhZk+G/O9kJ1c/Z+OkUyfCOPqhg
i08aBFwYCjtcXQkKXL+fPhslg96t9ESd8ULAqDonjlSdk1iqzsnUNrtflUJT
yKR64s71jGUk+X7jNXExCSLQOdwtxnE0IFD4Y4Dye1XTcsxyX8TDCQtv90Wr
UVTDvvXUOyESajcv6VbiiIHsr/H8cYFj6KfCXeedMytI13/uMv5BNNTuj3ut
4zOC6G4xvNbWJKFgyct6+JuhsJDBUpqCEYBH6/WU73kMtuyWcDokHQHOPI2Z
51WJkCcYKsolikFr3MRYcUIUlE+rCB5lHwT+yztJ3kwYMIuX3jwoQMlDritu
uQMHXgtzxamxGEzFCvl+XEoF/Rn64bbbRKg52MhoeBgD8ZSr8o9jUynr83/1
Um5T9VK+PHi3fam9DrmwZLd+f0QGLaUWH52rLYACT1wvp3mPtjtHXKX7uoxW
JmfNiLT5sEmtz3XU+ryfWp+dQX7YfHMU9bnpBBJpSShG2byzXj0WJP7SMwmn
6pkco8YVqfEn1Pjhkd3n7uwfRit/dn25kkNC7oQHnSr1IVD55sLNUv8h9O5M
kRRTMwmNffwZs7wjCPJo6c9augzBa/oC1a9vSfDTW4St9HI4BN89vOd8yxAE
ZNHkzJeToOTnAVoL+lQo4ep48+3NEFxQ/zTMU0yCThmTa+scBTDwQPWVU8QY
fI5oD+wYXgEaTr+WZ6/zIW6vTBdzyBCojRc7ReiRYH3Ia78V29v/6pPwU/VJ
sqn6JMebUz/zL79B1q5bmUeukNHwfq8tRYyt4LA+Up9QP4QkO8uH/UtIqCol
ivt17jOgG5PzodwPmv90W/JpBQlp/T4ZmvYhBZjiM7bqUvD4Yd1valwUPC5p
pj6+GRANHRyp9Z+OjED80R9sbuYkMJctZs86GgI7G4/rVK+PAO+X7ZExsiSo
Uq1+k8MTDfdZM464bx0DocGdNdjmCgzvyjHmcoqFes6yR47XxoEnTOfZ6bIV
MIgU0pTYlwId2nYRo3vw4F03v3hRgoKPHuusPbrTDNLt5TmKZr2I13Ah9B0L
GdnO3v8d4loAM11JHqcqW9CE32VZlhAyKr1W7nFQuhCO/qX78Yeq+7FtUZto
Jt2PbH1lbC5QzkHRANWfF4xS/jXHcKXOMcpVt5ofHupHL7LSuA9PYmjY4V1t
wYco6DGReldyeArMBor3taYsQ3HsRXVTxmQw++hI952zGp1s5/c0GCIjUTWu
JwcNCgFP5z8bhXUiWwOmx0cvkxFjkQXDE4M0ePtzHz3zSjsqfiR9xuQJGVnf
Km4hERPANY2pc021Eyk8LO61vEXBQeEjP9LMYyEif+sphcx+1C14MZFpDkNb
i/OTv8bGQc71cxUBO1dAabQ8inhnElD9HhntF+UQkWv/1tW2FMIzabvF5sjI
XPsicUygEDpIb+Td/DpQmc4zZ5wWGYX9vn0g8GMcZCVlvJAq64LN9zwfpCTJ
aM+L4h650gIIrnV3PzwahWgUUp4y/iIjSSR3q4ErBZpi7t/SvPIGPfqGKdnU
k9GthbRkmbqnoB/JoXXY+A0KECv3OkiJB1heuyDkGANTuzkrmoUI6MS+j2Uk
PQwF2Z0gph+3AIbKupUHa3gkwnteE5n8531+Uy6VVXPQ3KV/omUZjzhW4sM2
TTFUcdFjoC7FHDj4Nd4U+eGBRo1kXe6MAWvylShp00eg63pOceZzGbiNz8Qy
L5HBLUky/o1FPPQ9Vy1WVS1FPXuEI9uXyUDe5bJeTjlPw/HZsXQ8PUhkNWiH
Bj8ZXhzMPPSarxBysoMkerZNo3v8PW8UuZZR2+moB5eUksC4RGRNSnkSufhk
nlcQW0HanMwvCg2Tgfx9Qqk+aBzxCpr1HMxZQXtG3p3awRsLd6h6GhtUPY16
qp7G/t7tE+KsI4hWbEdTtDWl3zP5kUl0iYDS82p/sLP96Kr9cugZyvo0P/V7
4fhqKjS+M3TJN25FSdKZ/FLBZNSkzqyUF50GxVay3z8kZqB4QfzW2O9kJCXy
dpsm5byW1k//JBFQjtw9ddvfLJDRBbEZzguX48Fg7R89Cj2qHsUdqh5F0u//
jftT4wJaLz6EMK+gL3GF/UGx46Cynt9oebQd1Or7lmHnCgrjfFf11X4C4bad
3jl8oelfdV6fWudHzlZ9qLAdR/7Kc+MXty4Dtv8kTdxuPLRSdSrOU3UqSnn/
0al4RI1rUuONVP2KaWrdE6LWPQdq3aM5JsgiyEXBV1yf75+O7ABD9u/kYPQG
Opu3NPK6LsMYQS28yfs9Sn+73W6baDMcELjzjp2CK2gPnPlxoHwAsso5PFfp
qkH6nrctWyuGCALjdGwL/Yh1+Hnvh9MVcKLHOZqTgud3ddMsOTbj4EeKop+z
SzVso/Y/9L/+6X+2U/ufm5e9r81Q6hQjT8f7LYtdKD7twKvPrPXQ2SMnfPfT
ErqwUhCsLDqNIg+PF71hKAGa+ZP95vIf0f64a+z2ax9RFhzMFVPMA7VsXzWx
3Ar08Q6XQv4gGdJDm2+2RZTCbep1O6h91x3qdZOTserNkXn04OIF3t8ycyiS
n3VE3bQUCqj4SPnOP/joNBUfzVP7Ezdqf+JO7U/mxaMd0F4CbH1GztlUwUDv
A/vWlsyXcHG+f4huiQg0rOLv9ZdI4KrMWnGU9hXIUeftCtR5+y6Rf+bt36jP
i4f6vPqpz0t2F8CpW0Xoesmzkaq7GAqQ207HykIA48jgBBaTaRjA6H5L+WTA
rjuTUZyDSxCnoRNBfDgBB372yMvor4D0nNfDZ33PYb0mdmGn/xLcVr/OfIhv
CpXFBTgkXu0DzPEpV9KpVrQSmeJefp2M9F7yshjrvIHhuX6Z4yy9CC+zyNbI
Rkbz8Ww/8RNF0ECfshmTWgNXFT7jEqop+KWq6Utj/SvI33mt1NN9Esb5tt84
/3kZIdkZ+T3MddB74yUmmLiC6h6rO+o/GUdGa+wbY89L4Rk1zx53/8nzGWqe
pX7f/c304T066dpE1DJbhu9a+KIxoSZIZAoL8+MhoQBRdmOGhFrYSO8+G4Qf
gQoqv37D4R9+vSGVX4/pfGT9OTcNTWuun3Pa3qFUKYeorV2LwBl1++PAxTkQ
CBNsCs+YB6Orkcd/0DfCGadLcnuaMDhyYuZK7YF6FLU/JsFSvR/cZhJUV67N
wCg3seKH0BL6zhX2U/V8JbjJ/2G4YUIE8bjQSIW9GPLj3mNrwVsCF6n8a0cq
/zqIyr/eP3D6kFb9HJoe22+9qTaPsI7yQ1JnqkGG35yOFN4MaRVFbFopZPh2
0ejcz7lioJEwUmjc9hztFDS9dOIFGeIFisJWjjVB/hFxLYEaSl5p3vEbNpBB
/EcWIx9nBcyrsZQMak+g9azLr1lurqAfuWpsj+ir4UdZt66y1gi6f3o315ga
CekzZAvfHyuGdiq+bqHiax0qvt7k/odnLZrwD8/6JJVn/fd7mFzU/1/+7h/Y
Zf/pH8qzrorkBE3A75abi6F6K2CdmnD6klY69GY/t5DhngImMda5ruxlGCLm
RSaEZsOJ77TsE3MzsOWSC9eT1kVQD1nYWaHzHN5NjNZlSc/Cup+T9+zNRdT9
9NqC3ORroIsweSwn3InSb8nnXFUig+1kwY0r9HlwT7lTSYi1AQUnK9UKdlLw
WvWNNzEMWbCxqzvz4ego+txyk0Xq9wqMDq09SlApBvVn+e4Jh+YQh9T1NvMP
88Bzmr6rYbMcPpb5ftv+LQbpLSdJ0v2k4NmM/ZJXb6QD2T29DkfXjeqKHpv6
i5JBXmvMiJaCr5kux6mINEwjy6/GlXIZS6iaR3vwp20KXKM/05Y4NIsM8+2v
cO9aRIdi0xOVIAt+U+vJE2o9aaTWk07qfCmUOl/6QJ0vCReXCJ6rfo9iUzlf
vG1fRu1/3moeN0oDnfn0r3rmM+jFj/baVcr6VHLXSSq/lguhnPr9kuZ4UJvq
alt1wMB+awJewy4XeGbav/Ct4+DGtvLkH6EYbCNrLW8zyITHyUx9zdl44LrD
9dHWHAPJ1sv32f48A9rmr1VhfqNgena0NXAPCd6tXHFOtM8Fkxesoiy9lP00
+/5BXfkMNKiaMrco14BbDi5iQGoOLF692sDPz0N6bZrE97B8+NzBafj9xhI8
TtIQvr9vBgSvNzNGFZbCZEYZB9/mBIoSk6pakl9BVmGETNGBGCAt3CrQyJxH
1tLfNCY05pAcSTTkZ2Yt0Pj8w9fzo/L19lD5eqLBytGGu6dBeusLieUty9At
r7U6eS0PLEwHTOT5ccjSa7rs/DMMGHnWW44IFoDHX/w4Jio/7tHS08NfZz8i
r9ZCtzO8H4GZ7sanBXIdOGbctlIsToA+gssu7q9kVLySUnjgXD7E1FlpR40X
I9oD5YW9JDL6VKP1dNApE45pbK/UO5iGrFLtlBS/kdHFlqiyk4nZoPvXdfmo
101N+F9+2QKVX8Yu2WXZUICH0/Qkng+2GIj8fqDk9PUxPNnw/Wz1AQ+57waL
JB5hkFU0JN6pYg65EfnaDEZ42EF37Um9Bwa7Pg6VZvdYAGfYZNomN6WPyH9v
ORGCgU6z5zEVGyugZ076kolwQJztMAtMxIB9112RwlxriDt3J1dSCwclRQ3C
jAUYzOfhw74y2kL5ra8X904PAOuVr011tRgsSPJHGOXZwTnrj6EqagPAECsh
LtiLwb0XSwYZUQ5QesYjryuvH0aJF2KH5zAw7dJTZ51ygsQRGk2n7D4wsPyo
WkxLhj+euw2SqlwhqKSO40dwD2zwf96SLUSGfWyse1UUPKG+Q59Gob8THu1p
7l6+RgbimsCeS5g3VGRMCwoItsPdr66FVU5keJCP3/aD1h8CtK7F0cw2Qbhe
ruTvEjLUc4h8y1QPhtV9EnlHmysgeu+X1JiPlD6Bw7KutzcSpl4wf8oexwPb
o311dpT1bxA+4S3cawlVXU1onIcAnU+8Bs8bYBCscuWM4PATeFiRXB4djwev
9gPc65T91XFJ1kZ/izWc2z+4kHUJD2dE1If/+FLOE2f31l/KNhDZ7hgt8AEH
g3/6mz7EUPC+ZtNAQK8t5J5fSzGwpeTZk6mUIxeDC/t2bzeOsQeWEG8BhZUB
6A/WCON4hcGg7s7yrBJHMDyzdtP4ygBcVjXrSOvDACfZ3rAILpCdOlbV5NwP
c29oa0qWMSB3GUvgrNxBpS2OT+ZDLxjMtwlGs5GhHbcjsKjJCyZSeY2ZD3eD
kHbx9LczZDC8fv18jbUvuErL6E1pvYOQAAetMTNKfeP2Gd1xKBBmmEUuXq1s
BtHQeA35Z2QoeITFtzwNA9qIorinlHqpI7Q/mXWBDG+vZhs9zYmBkVT677dv
vkQhFbWWKyQynL/+3NnTLxkERJinC3gJwDQrKb+Lkk+ByVd12lnW4Hv5Rcpb
bQJcjNmVaHYXgz0n/hh6WViB4xJ+p8EAHkLpmMwuPcFgJWaUN57BFnzG67Wv
ueBhVS1B9oYrBrNjthUpuf/5f2RxG+LEQ3UNa28Gpb4JFmaRg2Mc4HU8+4ek
eBz4XeFJGkunfI9OwZvoj05w08G7/MrPAQjLN7yAq8Lg6vlTDHtaXKFhbZFF
4twA3H4pe/3FAAY+vjOFLAae8IqeLPJcqh8OOwu7MX/BYO+tDcPVbT5w5Mt4
/bfGHpDySCi5TMFHpx0a/8id84cN2T9dX0Y6YH99k2bAXTI43pPA5FqDYSsI
LLk2vQVTks65tlRKfHswWjaNgrhvsr+RGQF4uNZYmdQp+zo+aZivzRbEIwRE
vz0nwDUNPrrNq5R9lOdr80rRBtS+e2cM8BGAxLqLY1Qfg1zWr8MSIfYwWIXp
lL7Bw1tF+ZkVSwzOFZyR1nzmCAZRDDR3VfDgV3KzYc4bg9+Zl2XnpF3AZuqC
qEwLDhpkT/qUJGCQpzfp3kJZP3i7Rc/QHTh4T5cIqeUYHD/flbDS5gWKPPI2
gYIDQGOmVlxKwOCGH6Zq6eMLDC9/b1nO74PFaIbpbZR93TO9tUldLRDKihsi
9zR0wX6RY09DzpNhrMdnvpgxHDSkXFHa4VZoVOvoIIST4WeQWQatYizk/aXX
fYeq1/32L11HG6qu4xGqLrc6VZd7H1WXu+vtAP1iNwFkfrXWH7hEyeehp7R7
vRwghKg0mc9GhHhL7on1sxhEJCk944mzg5BHx890exBA9QnJ6zGln18/Glm7
C+cE5RoyGoX7CVD/tXKnEyXPqwHP5+uKXUHXJXXKIA8PemJLe8/bYWBhkXS5
+ponbMi1uTtuxYMrFhd8PByD9/Nldgqb3rDJSrhKexIHQjd0ruQVY5AgL7VE
d8ofaux5BP/8pKwrUUXehBEMtC+osAfjg6F4q66X4pFe2MI4Qyu1hwwM8N0I
HxsFQ48COpgF3oFQSaSYpjkZ5hg+19U6xUPM6AmmpcoqUKlM/Hmakrfp3X05
ykGZwHZvTFOXpx9xf9ncukapw1Otcty/lkpBJyDOyoBIRiduBN06nmkKWpsy
eY856mCPz/BZ6415ZCKLTcgLzSFZsb0zu3oKgDPpaOT49AzafP6D/RBuEa0K
XHQzCU6BAW8+jUJlIojUPQjwEMNAUUJQ1pjLBRKPMHPXhxLBNEE4pliQsh/t
PleXBTiCehR/cx8dEa7Rpe9skKLUq2m2sVNy7jBwZu86fTYBNgSrlNWuY3B6
sPJMeIEX+Ki3+28XIkD6T/7iGj0M7tJ8Xvmo7Qs1ymnf06zwINaxd8DIDYNb
x5p64wQDoZKwx6HRFAcq89Mznyh1lZfnaa5CbxhoWlomtdT3w40vfvXF0xhE
vVox6LsZA8rKScElol1QG77bMVCesg4f3N78bJAMqc/P/CK4V0IQ8Z5g9zgZ
uLauua8NPYOcWsqyUviIPkZ+X57w/gjBXbYJXRHNEH1F6mdA3zLqlHG+NsD3
HvWkBZlcNa8B2c+Lt4j9M+hnil2b89giIqxab1WoyAa1oe3M7KemUPE7qUyd
p8uIAdWz8mw+hWiXW8XllyZR0enxPwviK0j/NI6+/FMUlCwQol7/IULGorFO
KysGoa0HhURWPf7lW+dG9a0z2n5Z+MXJQQjLouOxp8dg/8Hi8rRHrv/yv4uj
+t/FL+qMML4mggTR4GjOHkp/qH6sy7zZ+7/+dx5U/7uDVP+732V7aD89JMLs
9e6TVw5jkG93d3Vi1O+/vniOVF88ZaovHm9RnqLfAgEc3NJ2j17AgKR9bCro
ejBo/OWX10n1y7t5evxs0VEC1KUoDCXfp9zPvicTR/ij/uujd4PqozdG9dHb
0nn2was+HJzjZOSSj6Pcz+/994xs48HLr8Own7Yf+FaWubd8wwDTi0qeXMgE
t6fS9bZWdTA+ddD5xhsyBO2pc+19VwbVYv6iac4k5BR4+/kkNwEOLNkstzr1
wOizF9NrV2ZQt+2DrU2SS6jW5Xne6tILsHgRI7dgO4miD0jSeQtS+ljNViSL
S4Vb0zfa1UzG0fkh4TKtFyvo5ALXkaYXsSD+l79eKdVfT4C098FvuTF0L8Zm
/dDaCnKpvQfWaeGg8Jfv3hLVd88ju160InIUISfnoRg+Eiq6nxfJ1hwIbX/5
8RVS/fj6OIbKVdOHQUBPjoEpmNLP68U+/4IPgltHrNdMHIdhb3FFtEo0Cbpz
eBRbY/1gScnxdcboMIga2wjRuZFA+JOnxUGVSLC4oqCpqDACDwzcl/MfkuDi
u12/faXiYcqi+viv9UE0OTF5omiChFJ5pUakPCLAiCs9tI17CN3UzD7sN0RC
ji14X+OzQfDWdI3hnfgQ8jxdbDqGIyFa2V71a/x+0MLar1F1aQj1xSx0XO0j
oaxCjoUVKW9QrPQ8a602hHpmJcNdukloj8+RQzcFPcBhLELpYtsYGM8ESazh
VmDp9cteR4EYaHM3E2ztH4Vurjidx2wkOBPwY8/Bt6Ewjb2T07tEQNsZFjal
tDAUMvxmvx5DDGhxNJw0ZSIinPeNG5LnMJQlwx3bZhUKXXcDT4n7E1GTq4uQ
ixCGqoL4M1ghAK583pHUN0ZEv5ecjzFyYYiDyWqnZoMPdGxJJCbzDqIX98WP
2W7F0PbaL2x9J71gTGbmfaLSICKUK+20/UNCjPSKjzSD3KDiktrJJ7aD6GDs
SSX4RkJXv++Ze+3lDI81jfRFSt5Dm2UQ23TXMjy1ORbQ4hgPFVY83uU3cai9
rEufUIChINnScInHkdCvpGXx4gke1QUnZHa4YWhnd/dpUlMQ9O0+RnI4QkAy
nFbF1roYEn2y8OSRkx8g1vlF6RIC4qwzJp6+iiF936mHgY7eMHpWjuUaBxEN
OpeqSZzFENustiWHqwfUmVfH7dMlomQjwTh0BEOrbsnWzCyuwBF064p7ChF9
OMLVPLwfQ/Eq3C9TlJ3Amy/x5fMeIhL2U99P2IWhU+Ue+5O5HKAm3E1MCnpQ
hYIqWj9IRh4Djz2wEzFw7FNsWWB7P9Ly/MZZOIWhp3r9e56+DoVbl9Wt5Pfi
0Gj6V7u9ZRjaVvzA39MpAGyOqgho/cEhfOK7uagIyv3MaqU/mPeBxi0iDjq5
eCRmUxWmb4ehgO1p2wbVvOBJkmz8fSECCkMEriE9DPlbM/apNLiB0EWxz5r+
BMQl+2Kn8i0MLSnsG4587gzqnn/CJIgENG+Ka628iCHzQzdZZU86Al2Jz+s/
u4koxCNL/vYZSt5SYrWbDtmDpJaf9xFlIsq82b67UAxDa6WWOh02ttDkcKLK
moKbgpXNuwqKMKQrO5ku87AI4ou6b8seyEeZQdtz0RcyurrYsOW1UjqM7zjf
JXbsLXpv/hTXlEVGx0ONXPgU4iHhsHHr/ned6I/KpcsV18ioNWa8P/V6JAzX
OpT6C/eh7+Ejjme3kRFjV9kuxXdBcPrp19i9v/vRaSeR5pcjGGIuVGLPCPQD
L7HFZ/K/BhCBO/dZZBWGOg0TxSoCveG7pvFYQS0OVRaze19NwpDN1zSMPckD
RC4wys/fwKPk+9NMT30wtCvjq2rtQVfYUTTUrfgGj47R3iv4aYkhn5dlAqzG
TnCrje8eLz8BqTc3qzrqY+jiuz9PRA47wGlmdf6ZJwRE2NkQpn4bQxs7U+h3
37AD31kGI71SyucZfDI5KOtw4V6H/ulXNrCo6HocFgno57MoxluyGLpmkNhu
oWcNUacNzdTuFyIWM532/DUyYjdhUSGdTISa+v0FxsPvoF286ZX5fTKKmGXc
UZOeC4mCbqp+LM2oJ8Dm4moRGRkYEsa63kRDXVp5dNDiO+SazdmVaEhGoqJ+
Ubx2oaDW+tH2mngPOsD74HDhITIyUtx/naQbAG1Kmz52bP2I1bnjbOsPDPXh
FPWZpnygcGiTeJ1vABl/lzMKImKouEz4EPttL+gc8OloWhxAWoXEifuvMBR5
LPAgvHUDGSEo+hGCQ2zcy8ftMzFEvKyee6jSGeIV46XGWPEIfyWLJTiMsl/E
NPSqZRwp+DxDu94Rjzhy+cXKXTHU7yp7W07CHm77WimeG8Cj5WLHiatPMKRS
PbFvwc0W+Krr2GAfAfEeYd89QMl/ZytTzCCTDQj03b2Qo0tAVTes9Uh3MOSw
uMpm/c4K9pRs/nZJIKC9zbm77iphKE10x88bDywhw0XFpFuiCV1LvXK7u5KM
nmu7nDcOjADw42bcv/kcnfVLYqOl5F9xwmMxVSoOiPgbMeds2pFkSJdLjx0Z
acnXT22xC4JD21U0bsR1IfXC2x2iQEbLHuHKU3p+YC859NHQpxe9EzI88JSL
jHouNtIq2nnDWfZ681zNfpQWtodh+ycMfTKVKbcN8IAnx4WVOsUHEH21LFML
jlL32uNv4/a5wmYMbe3H8QFU6/58i1IdhmrOW3swPnSCeWv5I0fMcKj8zWXz
pDxKXfoskPyf9xIHHxWF503gkNaV5cDZWAy9dxGKOa1sB+mv+Q+tAB7VDkbk
xPph6AVr6neNBhs4cyYxejUWjwTuV+4/64ih2wwPHu56aA03iaNXksbx6FzA
q3R7cww1tks6z0hZAWfvq2YWPgLqGTomxGyAoXdJVqHHH1mApE/7o5DblPqz
s6S9V4OyTjQlH+xOfgxXpxTHOZ7gob2iLNzWHYPSqdcP7qRagDJh8hq7IB5E
pQWXbYIxkGm9N5tz1wqkD2z8mu3AwbEfp9q+PMWgv7FTU9/fGjT8iHWkhzhI
ZSXjFPIx6FCPyFCZtQFs1+Pd6dgAPN/vt9hcg0ElizHR1M0O9lH5Zb5UftkL
Kr9s7frcaba+PmgU5NQh/KFc1+KM66yNK4x/6im6+6YH3nh+nzOm4Nw5489d
7msesJqoJ/6Hqwtu9KwduKpIhhtzlTs0G7xhnPzS97VjO9QQ2XZV25EBxywj
Od7sB7qPHqvZ3mmG2kN5akvPySBrftgpgS4YbgTz7RD+XUnpKzUz7WbJYH3M
XKdDPxKuZuh1s2jg4UtL3WOSFwYlTy4FOzDbwEiSw5j1Bg5uhui1WUVSfpfW
c75PnrZwxffyduVwHATtyMg5nIlBl8Fh9ftn7SH4paZyIzMO+vv/FKdWYGDz
4Rf310uO/+V5SVF5Xv5UnlfCwNLzB+XdQCiJjuU9QYbE48k7/X/6wFXlcrtf
7B3wR4V4YEOf8nmPc2pCEQGw7CHlJPDiLSgdPWf+OY0MPJJH1Rc7QqHiLV3U
WEsVzPC8XGSZJkOe04P3yTtjwKcoVoyvPx+Vsr+wubJOhnNmd1NWqpJA2OsS
992zeOCu5Lgy54/BZz7Hnds37KF1tEuBsQkH4nsfNsomYsC3QRQ5KuEEaqw9
x3JP4IBcYvt9fwkGLU37ibrLLqBL5U/5U/lTjlT+FAzcefRKtRXosk0bksPI
sL5RWoCuRILdoZ3Yls16mN5LN6/fQwbzepkyTbtY0DZ+0zQqnYhi3t8ddN0g
g3bM6G+5mlQoU2BaS9uCh+OaAtJJFJxrf2GFrCjsBk9Olu49boiDjtaDXL6U
dcjVMKHg+8kTtKXdLz5/gQPWz558CikYcIrWcsvn+P6f+GX0L9whTMUdl//C
Fzf/D9/tzr98t/8/Xhj6P3y3Dam+2ylUf20Dqr92hPs//trVVH9tV6q/9lmq
v3b3X/7aWlR/7dy//LX3Uf21/+7/K6n9/999/gq1z/+7ny+i9vOrvUEsGu+H
QbKxj4bFlQTxNpljve8jYB8ez211bAQuTNBNvTQjgVzZWnO9TRwUragV4X6N
AOahO8coTYLe8ZsX+00y4F5fnr3/oXHINJLk/fp8Bb4xMhm++PISwt+H3tKG
eXhqcvpy4mYHEvH0HJyhnYMTLK9C/sQPonn5M1YbGAl1PqB/8jwqHsSzfh44
NjGI7mznMNOdIaErKkL29k8iwdNc8eCFbUOoIeQ2541REhJmM0t3p+COVIZM
4plDQyi6eYtVOYGEDgrfsLwZ5gfVKfG3WK4PISX3sEzGXhIK997zbazPG5w+
tHwfuzuEbCWejSd1kdDt2jCGB589QGCkLGuSth1VFTM+tjcnI2x5up80WAIe
VB6NNpVHQ6DyaK7yB2Q5PSEibYcjXxNFMJSf1tJKeBAEQsMm+Xsp/aqH+/my
HEq/en4Ps0EVhx9sjSuxTuAYRFsyxi3lt2Ho3PYx2jweb3BVSYjWuDyIBmw2
59o2SejrupbMpVF3aC0azCQ9GUSWTVxql76TkIZJn6mgtwvsylg8HNONh4tD
1qzZ5yl97E3N3e+M66HYgUXCtroZdevcsiRR+j1WHsOYkbgcuGM/cSTNqBf5
OtGmPaacj1WGjUxvwhJgH5Uv40/ly1yg8mU+Xvs9J0EioNjOQs8nFzCELNk0
udW9YJi81V7gEhGZim9rcz9OwS+uuo+SitzAvEyrMjSAiGoz3rPHUXCNvOjF
OydjneHEFhHT1QYiEjBzsB7agyHXd00bwtyOoLXrvtqlkV7k9rrgmAHbf/4n
34n3WoyCY2tCjTLFBPSeu2E+mNK/6SjxGezNcQK75ZbJmK8E1HmowHZNBkPR
b87Yaqo7gFr7geg7p4jo9VMdV72TGEqcqqD7YG4HzScel1f/6kMvi9/H+f7E
UJKd59CO+kAwybOvig8gICN/zR1HKf25uY+iqny3LUxeV2B/20pALmc2b5gp
YCiudKBK8roNKDy8ypv/mIBMh9xHYyh9Zi1uwCkl3ArWqb6lh6m+pdJU39Kz
f8UvUuP0VD/TOvjHz3SY6me6hRrHU31O8dR4VDFzVuTwWzBzrn/7MJkMD5Jt
TZzvJYHyBafrq0EFyJ2zW2wbRgbv3e0nvPWfgQT1/fZ06vvtL6nvt2ukLpaJ
2SygrcIqF37ofwCHHprsiPw64PlGMPSgrL99DGIfXWyJSHTHuKDZ20pgbLTr
qLi6hO5d4BvXEJlBdj/y1fWwEuhJ1bh05vwcuvtks3F6YR4F/TEVrJvOBprj
o4sZw7MIx6CzxL9rEb1neytQRM4APfFvDP+vrvMOp/r9/3gZiULIqoxsPklS
KaoXZUQqyUx7IDRsIXuTmZmylVVWVnKnMjPPMbJ3me+jVEbD73yv7s/3un66
vv/ef3DO+z73+zXu5+v5UFpuAQHxT2OhywR0ytMfYTN5ANbDRSLE7SY4m8tv
qiREgZOOTa57D8WAxFV6NnS2FqZ+BD70sqaA+W77SuPERLih//JFV8MLVC+y
rzyokQIvXymanIktgNdNP17nryODRWRw+bcgAnoHFGMOU/PGWn/iqlhiK8Re
9DoqRc1DKuVSt+VeeAwRi6EWkVJNkB4vQuuxnQJZBmKHZgbSYEUsJmJhUyc6
z8pc7LmOQGB+wiM5+iGo7z/tZRfdiVZOzrDoU2ZRHV/oaVEiAtx/u7DMRbWi
N+5oOmCUQPXze/Voe5IgO65aPFiKmr9JZL7c5ksgFiPjnUypUZDCZkQoDg2C
68nWc4qvpkGWMfNcNXMMLLFc/RQqPwL+8QfWhBybgucuC5oR11JApfA8p0b8
JCjXrGWRohmF1AwVaZ07LyA7tJ7rW3wX1J23OhvnR31PSlrf4/aogKpVeu9i
rPdWVrcqnl7fhPI+aPfPUesOmzrG2slNcbDL2byal6scuOpH7Q2aKYjNIV/J
c3s6eL0W264i+AASMz6aeS5R0EpmVv+W0mRYWKETVO8nQ/88v8AFCwK4YWhk
2s3iL/12MNZvD9yuLl5jkgZjz0+U7F+gwFmWGwMa/LHAtf9iNzm8Gimle/kr
+FDgc1DRWpr2FIgOmlokfPuRqPjR4z36M7Bn+VdrjnE2aAYcTHZqb0Z+NGEL
QQwUaNqqNrFyJB3o8HkRwOeoA5+XlVW6boX/ofc+hNd/e/7hdT7DvM7TmNfJ
jjmeWXj9LF43kg+s5N30CSm1bPqeRhmHKwxx8Q8tywHUQw6cfzODLok6V17K
7UUqPbcYIqMLwGYh5zRX0xiy/CJzMVlzAgW8C9+7qy4Znh1I51Y90giLeYRz
zB4KBGopdY20h8OV7bGMuszvQSAouSpIlQILfn1hRvURIDm8paRDkZpfWS3s
pQRQIDdbJGrlexKMEq73uhJeo6Qtb09EJFPPUQKjdMrXQtBPS3UlzCjoSUJl
c73Ia3gr1LHMcfUNqB05G89YO4526W2b8L7yCWnJaAtekcuGJyKprlx7htEW
Jl2UvzCFhBwv7H7omACtZ2Mlry0NIrX7JrdUi6eR8bmP0clPo0Auijfg4fkB
NFj18FSH5AyKnql+9iMtHILyGNYQv9sgXIIcGlxEwJOXWy980AwBzX+YmMaP
tAF9gVSAWgsBbyTOGm5tDYMf8kvj+8rbILbmvWhuBQET4TI0jnviYfbFj0f3
fevhkGB9A68OBbQmoy4OyT+F4EtudbTvSShD5pRqpRgBcbs6pb2T38EPvgMP
7l78hPiFKywWEsaRpVOUbxhdOXw4e0IjRW0IxWdJ1ef4TiPTR+LbfVdSoPJ9
slHitT4kFeU1+yV7Bvms3TjhyfEAWGk1BhSVqPvnsiFCa34GpQ8ba/WLhwBt
aec7j/3t8IUGim8aE1A6u9Fi3+mQ/3ItjTDX8ifmWgqvygOv4TzwX66lIuZa
emOupcqquekveG56NdeSH3Mt+zG/Mg3zK8swv7IE55MuOJ/cjfNJP8yvpMH8
Stabf/iVDavyzBM4z0zH/MpkzK/UwPzKlFX5Jw/OP9liORW+Nn6A57tvpn9w
nYXhTLlkho+hINY3IYK+fYDxynSLBbtZcLU8R7nSHQ797lN556n5pFodH9mZ
mk/anWOy8cmOAu3Pd57lU/PJvkcW/g0HZkEvYcbzl0wSLCef/jJ7rxu2ET15
xgazkFJ78OjYnThoKRzsPbrYB9fn9jhYWs3AXEoD58G9BdBbxXbKergHFq72
PGleOwv2iIlzg14GzDO3zF2kDINWPuPDzMlJuCZ8MLR1fw2kdw+6fM5rR+KH
BV557iEQkfyIF8nmww7dFIvImlZ0buPOnLVPCVT9VlBf6M0rSPCM0TOixout
Qbtsl+kJdPpg+dwvlccQ/k/S67nIDiQWKWioyksgznxf+smMNGB7IbpJnRpH
6pzT5OWocWTfeqXN3suRIDTyKnDwcjsaPXF73kyXQAqPDvP3DoSClmSLdkBL
D9ScXMuQzjwLkfvWiN5sCga3YVHmdPZeaDATO0b5NQO3f12J7J4MAT+y+HhK
VS+wfTPgmyPPALfNvW/hHyNg7b7LQ067+6E9pSeIyWEGPgc85uHXjAMb/tun
7Q72wU5XwrX0xQzc2u/0Vaz7AeTf3DNzLH8IxkUv7aNRmYaBRJ9Ym5MZoLtP
4GpiwQAwP9xg4MM6A2WH5Dezbk0CPc1Qk1OasxBxicTgLt4FlaSfWjzpNSBr
7hOo0jQKXmYX5JjXT4Jv7C/hbVYF8NOnTcFIqxmdN7Q+tXsTBT3wba3N6U2D
/NDpgheH3qHGAjpzfT8KooydvC+amQeRZwcVtxeQUBeL66JyLIG2+fHSbD0d
C8Zf3eYtj7ahPZmpxWwtBNILk+hdUxUO31KlTy5fHYbAfRz6Eh+moKx8+ISO
dCII+Jp0DhwdAs0nwj7cwdPwVqDnvlZhLDyqVMl5IvgJ3LgyaAXpP8J07qFh
F/s84GT5EPv15ChsHyvkH3GeBJ0djktTsungn9iv+JuOAqPHxnaXddUipyJG
b2+3dxB+OOWDP/0sXOh0drvA3AP0UX0xi/UvwUeqvplnMBit+V1ZMDxHQQHB
+3OXDz2DJI7XTyXUOkAnocJi0/IsklxuvK/7+yVwfOb0UlSpR5Ms+5YkjSmo
lDlgCxf1d5XwJEWF1rwVbcs/En12hkAufp+y00QfwFePO59uffsIcqy0Ja+F
PqJWiuaTWvoX0Jb23N1evh/cFRlraK/NoPjl6jAZnnyIP6BlPTaRD4M1VtJP
xymI19TT23BtGsQMuJFrDyIQ6CChpFcUdCYztLWZJwU+iOoUx0tEIR/G+++i
f1CQxjta2ireeBhjn6nSVydgcgNKfTZLRgyhwh1nPItB/2zuffaHLxDLhwWR
z4MU9GOE8oV9IB5sRjTOP1pXgF7L0ikmT1JQmfHPX7TN0TBoS9/dodWOFjuY
+2YNCcQgC8efNVmCokW3VNe9IjDN2PtscpQCF8MXK6puR8GA209uwbkiNDKW
x3d7iAICRbQTbnuTQHLL1tFMhkGUlmEvzf5jGmnsmepvOR4J16Xmx7ik+pHc
AXX55LszaLmchoNfMQZe2kQy7cjqRSlX635/6p5BH5sNXNtfh4HBKg7jv7px
2lUcRh7MYVx+6xrjcLETiQ8yML2i1mWlF/c8DGeMhUtJ/ClV19vQpfQfu4tq
CRS09aD22yeP4UrJXITx/SpEe7w3dEcOBXkrihUMy6VBgpSKv3PkKJxcaxcW
LDuJApG0HXNBIXBdCFspjEiC2Ilv43sWKagj8BR92cwjeI3jwiKOC9txXBjC
cSEZx4V8HBcmLU3MPrzugbXKNjIB62dhr4Of046zT2BSWzP+t8UIyDtKb5s0
mgTDyKD5mxP1sEtyNKhDnYQe79MwmQui1gdF3z3UC1+AuP8Oq4TsUXDIuxFj
LDcJK1nC1WczM4ApTolQzBqDj9scSsYvTYDcJYOk4+uzQJuPLTXXngJhV7bY
hF4tQ+tPPPXwjHoL8phj/g/mmHdijjkLNbRYZRBoB/Pofg3GNuCUaUikLXsJ
54oFWek9KYhW6cxd5s43iMUiPc1nSymcSBuyJeVNoJ9m24d9NcbQ7mdnVPje
ZgEj1nVzYl13DtZ1m2EOIBPmAEZiDqASXt+I1wPx+mfaPxzAPZgDyIs5gL/w
uiBe34rXj2M+ICPmAz7HfMCzeL267c96K16fxdzA+5gbKFz8hxvYi9eT8Po0
5gkq4DxBDecJX3Ge0Iv3PRPveyne9+dv16QMkiPAUJH566k+6j7EhBxJMymB
3ujH4dJbC9EjpKCaW0wBl8no+9V6FZAWdSSc3ncW+dD5dRLSZIAHWxPluFpA
EPev/HH/ys7lT//KZ1VewYnziiU9mf5MYQqyPLlXL3agFFVvLcl5XtEAazLv
Jo/f+IRUJTQ8FILHUYSAWfY5gZfAoOdDr/ZoGBUr1QhcyZ5CYQVfMmelMiGX
NTVS/fwQyqYd4sxwnEZtGcPdW9pToWnzHx37Eaxjf4l17FG6nCOT69+iyaLX
E133CVSxgZ37i0MrhLK3ahQ0fgLHEtUfZNVx6K5UGXqxlA9pDG95rb2m4KYG
kSSwaxgdYJJ9xXL4Hehgzl1r1h/OnRrm3H3D+y6N930L3vdIcxs2Tt8ZxHtC
tCVQog+W+faMs02+hBG8j3F4H9fi/Y25Ufio/PwkUs7nu/XPzVFUkyRZP+OW
A20lpy7nakwjXS3608NMQ6is9FeX97s3cBA/f3f8/PPx818x/cOPU8f8OD7M
j6PT+8ODc8Q8uHDMg/ttuf2fz1WjMOWSR5O0swPdEy1xme34CE5XuPrFvSeg
h0k719RyDO677LpIOlMIRzU/8/5jNgqxCjw59Bsn0ewpFdov41WQwmDQyjE3
DXQiLuqGhQOoznJbju6NYmjAOvbtWMdegnXsTK/He4qOTUJexcvWZMtRhDaf
ttCpewHkXB5GEVkSYuyoYBqlvsfmPI4xRVtkAJeRipqN9Ack/nbf8MXoWWD9
xGDRwpAJsvi9oYrfG3X4vaGLz1cfPl9v8fnSxlyzNZhrpo25ZoZ4fenZn3VT
vL5tE7N87bZJNLNmPuiG+gisU3hi+am+GTJ8o8xXro+gkZ6mbfL8U6j3i+WG
jyq5sAnr8Amsw2/DOnyTw31cCQ8GEHthmKIBzwxSvtwqxjT7CPbJB/je6R1E
FuGhlqYvp1EGp+oP/qRkuO7JHMS0qxYCZFbm525SQGW5/axdWSbEWPkMChlO
weMyps2dVQ1AM9ITGDA6BCUL/KpClhUo5iGN3vr3FCRHUvk1phULj1fp1RlK
/ujVI5VbhllVw2CtKuew0U8KJPT2n7s7EAeCWOd2HuvceLDObdH8Dw9rPeZh
PcQ8rGWrPzys05iHlYl5WGxrDuhkXSGh+wM2D9IiCDCiCbE39smHgkv/3FlT
SSB7yu1XEcOtaIAhLc5GshgSrlzTT342jhY9WCfs3D8h8krzZvnpVPDEHKsa
zLHi2PSHY+W6im/1C/OtaL3VnyemhKLCVp3SnV0UcIw56CIsXwZOU280+QaG
0KRWdFuaxDRyFxfzLf6eDu9W1VM8OG7+y5mqxZypOMyZKsT11D1cT4niemp1
faSN6yPpx94C8dPdwHnm9uS+Q7MAvOcfkbqSYLHqj+7dAuves7DufdcjEeE9
//TA8aflTEI7Z6H5E40Nu2EK7HfqtSpK7YOT2XOXE7xnYIj7lsPghkJ4JxFy
br54GNYiaWWy6BSMdFb+Wop6B9YSX7r2XhkAsXuDLBwr09Bsc+R8dWApXP/Y
IKMX3o6iih+EUY4Q6NeiVjunQiYM+Sc6I+EOtCw0ve/ADgJtYH01cYX6fGaU
f2wV5h6DcF69jal9E5Dk+aImk+MpFJITGFUTh8E9Rp61N28KDB+ZtzfZJwH9
4Ibseh9qPlzYxL45tQyWA6p92yarwEWzJSrzezXc8khY8LhHQa7x4r+mm55A
fa8Mzbodo4hurrl7NH4SSU98no+kJMAZfB5/4fNohM8jHeb4iGKOTyDm+KzH
6yJ4PQavr1u1HobX4SH7sPeDUTRW1KoyLj+JRnQ37EhWzoeNXrmudYKDqLnn
UxT/52mU/LH9zHfeJPiN+T6A+T5WmO9Dh+cFvPC8ADeeF+Db5HyEUOuFyesx
Yt4fZ2Cn3/FKl/tZoKdQNsvBQ0YGRN28hDWBXgwIlBy4VQjKNPd8Yuxq0Z3v
/AciTSjg6skwanHuGegp3f/86mcZighOE/tIPb8+rTIVnrJZcI4rnU/nZA/q
yD26y591Fmi0uFSYzhWBOz4XtfhcrMPnpWuVrtUW61rX4b5WDu5r6eK+Ftu1
n1wtv/Ph+Qfp0/yfKOA2wWvkLpUM4g6kM7Ps4ai3U9/WbIECPyYCae52pP/l
g5qIfVCv2WrTc1xpg5OmvB6T7wkI0DvgTXPZHk7kUhqKp8nQqOLB8duMgDCC
w0Tr6u2//DxXNv7x88yvZbR+ZdEGfGZyFzwaCLBG3cOKVXdhSAPtJ6W3AsvP
wdH6cQL6xs8N/uxyAZPR8GPycu0wLqNXLn2egNqmGpb7h61APRZOX5ohg756
XGsv9f9WfaNZDo60htJtLUUhjm1w8DzRnFhHjTv2lNRPBq4Q3NBb+DSwFewO
nRnVnyRgr0motfA1D6juziubDGuG+Zcc4lHsFIiQtnYRveoNT/lKdcQD2yFs
kzFr+EkCbk5eF00TsIFot2DbhCPt0OoPWg/OEiBS+H3RrM4WulrLtfVmyWCw
tuLEU+rnkTAVPkR5Y/+XP+RP7A9ZQbOkeyKwDcajnb//rCYgJnC9SIGTJxgp
cZa/udAK/rPmdisEAWxkFlG77z4wXJSyWVmpCa6+EXrmIkYB4nHxQLV4EGxf
YlVyuFELhete+frZUqArVDDtxGQ4LCmYF/Z9a4frheZxnAcJyJ5OMR25Ywce
vZuNnjxvhzizdcHCxwgQWFINFg51AO3EEKt5o3ZQczwtlaBPgLZQ8dcyMSf4
Ulsh20WQYXJ2+LgO9XuJ0i8E5Zjc+8vX8SL2dRxzvnBrd1obNAa+E9j0hvq+
VWM5fazQD+K/CpYbMrYCv5afM1oiQF8cpXfzhMBRhrB4IdcOYEt3UuMRIcDs
aFFKmZEj7GjaZy93qAMctE44h8gQsJtNsnRxuzNcnZ0uDJ9uh2vafRsqDxFQ
uTgfnfTEFQqJQJpQj3a4or0h7P0pAi5oa17rSvGAyheUhgefyeAb2y6eYUr9
XRlovr/R6v2X72IG9l1UL3zv98/OTnCaiQAeOurvX+VF3zkWF+B1ert/bqkD
KB7lQSnMBHg94YOoNjfo8ZBuX1fcAcRGVZMhXgL2bF7H+uy6J6T6Lt2uN+oA
ocgcs71SBAzfjvPeP+AD3oYXSkJiyOhxqvJ6vcsEkkVq52LWF0CDovJdf4te
4KZ5rEKemIFZN45zyb1hwF0tE9FEaUNnb/ifOVdEoE9LImePJSaAdlPpIcUO
MlLxUZFStCCQW7vsgBZ3JLyOTgn60TIEtMN8do37pmHLMZ/YqrsPYdPQjElA
Rhs6Up06L1xFoDaGiqyHQ2FQHZYFHrMkxL9mp+uLMAIdaqjdIxUZDDJ3PG2Y
+8mIeb3fq2lzAuXX7Pxi8MYXxLJKyk+eaUPbBGQO3W4iEPNa23rn5QD4qhp9
IMGVhObOJEYxphAoYKXco3KnD5yeauSVOU5GZmxPD4V6Eshq72Em+hkP6M2n
ND0cIqN/wn0LEql/n7la7vYorxvoiejWbPn6DrEFH9YaCqUgves5VmJyD8B8
lS9cDfaFq1p76tW6k23IeiLbwKGZQBfG2K8er/ACx+7U7TyKJMSmJRipnUMg
moHh2g8T7vA0/PbCh2kS2ouO+0WGEyhb0faYQPw9+Bh9O3nCloycd6t6c7oQ
SOdmSvpzXScQDDOuNh0hI5HfbWK3qZ+zbruNRHiJA8z5bvzye/tbJLOX/eH7
FApS7CwNeLw/HDQvMDT05tSjycs3hd8bUlBbbfr1hbxAOFPOJ572uglx5WVl
iwpQUHxm8PqGRh9wvuSqdfhYG1IR+PH7RguB1okFvNf57Aa1OnPhN5lJ6OZl
VhnxQgKNTTrq18i4wHfHux/dnpJQ23qP/uWHBOKgK+VPOHAXtCUyn+SLkpFX
nP7+p/4EKtK4yKbZbg+HIpaVp4LJKKemS/2UI4GOCP0qbOm2he8/XUvcRslo
S0Or1Enq9zqiTb9kscsGgiwe6guO5KKAZ9XPnOYo6BTnZTeauUjoSVQv6Cuo
Qicmw0rN8yiIcJTib+ALgfgZCa+XLbWIR6aZ++YdCir5YJh6QdQfpORZY616
3yM7m2/iBxUp6ErUTYqSsDeUvM/W1CxvRqNlfYZimyjIcUl2Sk7FA0iRr+7s
uN2K7rP382+eJdB7/dmdlvtdgY8r7bPlTBvaOMu9kamUQJzC8ZmV0o7QxCOS
Y2hPQtsyDss/TiUQ+VMUreQPO9ie3TD+Y4KE1DfvKRCOINBi7Po0bTFbiLl2
VahGg4zenrfrpPciUM5sTklMnDWUJC5CVAIZZW/cUUG2I1DVwwrtIFUr0KHt
CTg4RkbzhkyW+6jPp8Xd+VAn/52//MqKsV/ZE+kd3GfMnEEvcqlQeIkC+4X6
Y2ez0iBvlZ/YVewntnByJIB+gQxSNVttNpkQoLDPXqk7+W+9eh/Wn2xY5d+l
h/276lb1+dVwn98mYswUnR5AQ1/uRBBSM2j0UY5f+q+H/+3zX8F9fk7c55+y
NdO1ke9Ddx6otKmWzKAkb+ed878jQGaV/iQH60/u0PfxP65vB2ULx+//mZep
XLCu1pr/W5/fiHU1JOvW6PP9nYiL7zen2wi1zlOTbm8gB8N43en1BoxdqLBy
08azPbNojwnj1Uk1v798MPSwD4Y97kusw32JD5Z/+hKTO/74Fazl/ONXoIT9
CsRiavavCf+IGu9b7NAyGwd74drxHNZmUFg1T92H56mlcd10CtdN/LhuElp1
72OK730+yEZwxdmR4fS13cXcLgR8v6e5kePSLZCguRbvvIcM225GUUx8CZA/
KPdUkP0OXKxz0r88TYKa0pYzjeEE6HQXWXuwWkEJ04bBmlgS6K5V5rd5TED7
WMgakLaGI1FH+GsUSJC+9eezkBwCut3LPZ5b2VDfq/yOi81t8C6D6a1xBQHR
DUWhDWN/6/SysE6vrIFRt5KGGn+VfNJ1fxAA4XRp7ZudwUehZlxVsxksf07H
83BToG7FISh0nSvsPV/2WFeoEQoNaLyuyFNgU1e4xXiHO3i29/G+vVwPViGH
n347R4HgG+cu7Rf1AjmLdBOFt9VgNvCS67A/Bfohf8hT3BeYNDXOPe94Dffp
tfMlSykwdtn38Ua5QIj/gAYcL5PhFp+RqpobATkvq/Z+HbCCfnVllR52MlBa
8+nTg6h5F82pNq0tNlDMIcBcUUqCYaRsGRJHQKNu1sUFT1vgODPl6KtNgv2m
Fd81MgkojyRlfhGyh6PBMy39nW3Q7NDgJ/2SgKLwnu/cDI6Qt0q/5431e4/U
Ypp2bWqCuPboyjxJCjCf+/QmI8ETyHanWhu5G0DSmcba5wwFQnZF0TH6+EDg
Ho9dgbQ1EE6z7v5xap0UreU9F3w3APaSevmkt76GxtFEV8orCnxK83dqEAiF
SIevY7ZENpxSYuE++oUCkmJ6x8faI2GXb1TrSxUypF5QulnvRcANa3nG2hd2
YHl35mn5MAkyBJe+7o8kwDDk7DVKkAO8aGG71mVJgoDkf6rXUOvc1I2tv3Ve
3IU+VR01yeE2EJNfvy2pjADbhVQHnmMu//VF/1fXZ4d1fTtv5HKcU6iBgkl5
k2RP6vfyN9V02RkCqcahuSd5yNDb3JCbF0jAc+O6li+ZzvAksP65QiQJtrPL
PhdKJCC5atb0WZ4rtMqukaOjtMFIa9cRzxJqXp37NX5czgP61L51HGsgwWHH
E0zx0QQ0+Hy9cYzbC2ZEvmVvoyHB0d9+r32KqL/b5sO6Lut9/+Jb1f8PvtUc
5luVruJbfV3FtyJhvtUTzLf613dLEPtuMWDfrX/9tUqxv5Yk9tcyXHVfUIXv
CwRX+cx8xT4zxqu4V0aYe5WzinslgLlXn60Mulg7P8A6dSAx35uFV7VOlUU0
IbCM+wnmuJ9QjPsJ+sYfVhKrO9GFAcXMko+zKCzC+ufe+jDQj/F6fGq+E7nT
m9KaDcyiwvrj0+nkQDCTGjpxgqMLffVJfeH4gfo5708sbrjgC5tjuU6s3d+F
1JuGsp3aZpHxs9qI0/ZeoM67TctarQvNCH/XeNM8i3KDGVTIS+7/9Zf+VxfX
g3VxLvbi/OnnOlBXQ96pEEkCbVTxPLPmoz88zaDfIPqiA4n7Xhaa4yVQotCG
erf33qBpbMpd/L0DybcJWoizUONsNOW6+7QHnIszGPSR7ETj9nHsH+kIVE36
XLMjyA0ULXcliut0opVjzDUWv2aR8EqCdqusy3/9n//VswHWs9GcMa9OGGpH
m9ZxKcQCNU8Of81+JcQdlLP93XfLdKBsRtOCH7IEYoPIXbHX78GwYm2v5q0O
5MRuSzcqRqDIg2/Gimyd4KL51uc7UzqQpnvRhgw+Ak1e6jp/epMjmPh1xV3d
2IykGx+rdvJSkPWv3rudweHAVjqj5zHVihiV16dP9hKIZ+BO2IBWEAi8Lxg/
mtqOtsS67voPn+hVUBlpYcwRyOW+vqPj7cg6yV/1P9yonrPdS++pdeITx4bx
zfwdiM7m3GeuvQRi1Lhi1rBoCyd3S1HyilrQYutXU4E1FOSvsfZ2x2Z/8J/5
6srF04aiF20VF/8zR8Ba+6jvqDfsOJaqcNa1HcUbE/wh1OeTY7VWNuC7DeQ7
7ZhwL2lH4ltU5rrVCFQ+7PcikFovZymwpavubkNmBwlJZxK1Llh/632fqDsY
ed1sSbvejgRDJrRf6xLIUifGeF32nb/m943w/D5JtIhOeowM96repBwwp9aJ
HENZpbH/uw/wv+bTb+ofW2kIbYUP40xqlRME5JJ23rkhcg9Mmfac9RJup77P
j8fUXSTAtZi4aeluBZ39ajSXR8nAz85mpEv9v375e0oUyqz/msv2wHPZ2R7G
WTm6reAQyCbvNkfAEbZ9vnkkD7Dk7iEvUOOgc4jXcDcXBbR3Pji/N8sbIvL1
L/VYtYODyXX+bB0CfNWChNwSbOAa3eF1pTLt4Dsw9rT0PAH+dMwtJyXtwHP7
Di7pETI0aP365UT9PNLmkp5MP//uA/zCfYDV89GaeD6a7HdwJHGmBSr957dE
/yTg+N39W81/+MJLHe4vx10bYaeEYVWm7H/6ORM917iDIXvZmuFmdw3IdA7Q
8DpTIHXqUleKUgSUSkf4b+loh41CdYkvlQmootxO7tWwh9SG/gLDiHZYfsbg
wX+CAN6MqfJJbUeYiqK/f/hIO+i3iB8MP0vAwaUIc+G3TlC4TsZRYoj6nK96
dpRQv9dU36jI8dq/+wCXcB9g9ZyyEZ5TjrVr3qoZ1AxWaa+/qrNTQLZrmDFT
NQwMVuXVuTivbt/G3xOp3wG8ZFkH3n+o+XCfc1xD/V0wYOiKP8bVQf09HXx5
dh81Dl50VHYMcgG+Ayz1zTXtIFTxsodZhYA1v3fXXvnpBk69z2PQ5XawY/Oo
EtKjxq/IrV+H9noCj8ONpG19ZCh8PsUuakGAddatzVpyPn/1B57i/sDbVfm8
Mc7n1W8Enwk7Uo3C7n3jWLSmxv1FgRXOkiLo9PLc6kPfCULy1yBgAwFKV5hU
H/m5AtONizl3mjuA3e10vgcnAbE+zPpbFT1g5HrYxAu/DrjtL8QnJERAccD1
94pNXrBcLjivLtkBFq+uSzzbTYBi68IZkp4f1MM2mRNx7RAr7FqrfZy6/lL2
wYppEIjRCAiztJChWL/lnZclAfwVVSaiiuHAhe81JvG9xgC+15g/GF318wgZ
iYWFHLpHrY8CiIlXLxkCQXN5X1LAdzJ6EazxtM6E+n5eytzGsuIDJ1fN2THj
OTsuC41OqwEScu14/s45kkC3Oh99OnLXC2Qdw7e8dyAjy9HkXe7OBJqSdW+2
FvCAez+H7rJ8JiOFLXRzc6YEmv2hgDw9XaFgVf5/Cef/snaLm10FalDeNfq9
h7woSKonemlAMxJur+oPINwfWD2/1ojn1xL7UqUvJpHQ9R+KttsfUevo/IBD
DIfd4LFM9Lg7tY7WH1LY8ZhaR7fqPlbg3+4Cb789I9giyWjdg3Q6FQcClXGt
oO6Qu/DOIFnzPkFGVccjFG3MCGTxSJ4t39QBunLSWc8z1KCtRfynSN4UxBpl
dyv5awikF4pFHOtuQALKO/YKaFDQ7lzWsh6lAHgodtV5n2gz6uCUXuKjxpcN
1Xd5hLV9/poLi8BzYSNFI+bs1Po34VJRy0Nq/bt22JBPgN8JimK+id+cJiGj
Dy+lS8P/o2Nv/1007gAacZofy0+SkWHWbcE9ntT40tVyWZPWHl716OTnp5JR
HXKvyrAlkIh8jJvPdVs43PSwT3CWjDq73A++pH4vAxh8KrliDW+VU4dCkxHa
tcLFqPCagr6Vn/RpGgyF/TxD2Vwt1Yh7M8tyoB8F9esM6URwBAJXvMyvzIV6
5CkedfUfPQraIY9kVX77QFukCKnjdyNSqtd791yKGk9fc0tsocZxu7DF8L2a
LcjEMeqSDAMFCe23eITy3YGgC1AbDGxF9cxartcmCXRs+9WS5Zp7f81zleF5
rq5TUpznDEjIYsAs8uhTanxk2DO6x8Ye0nQFjMRfk5A69yfCPJZAP1S/X26o
s4UHb455P9tCRtOTFUctAqlxOalQ3dXABqI/HxKOvEFGJ0evET/uEaiuq/De
t83W8P7JlprhZ2QUrK3SP2RNIHHWyFGOpTtQKrUlft8M9byIEb4T1Ocm6yir
M758G8ZW+Q9XY/9hSewz7Ip9hvOxz3DEKn2UGNZH5cprjeltbEdKQvRH1a9Q
8yuBeN+x+xGws3pn7gG5YeDc1MX5YWEKrL81vJWef/RXPz8J9/MzVul7A7C+
l0b1/+tp92M97W3s6yiBfR2Tsa9jRXrt2CJHA1iN3ZlP0aGAclw4e+OzSGjw
TUuf4x5CchvUyUYZ0yiNRuwgjW40lNYs8PfLkcBvLe3hBmo9ez280fph8H0w
WuW3cB/7Laz2LTfEfY8thyP9tp5shI/TJO/y3RSg62HtHW6JBY9V8/sTeH6f
Ad/veOL7HUl8vyOJObZTmGMrjzm2tb8Psuus74ZXB3NFxqxmYeq90JV/SiKg
vffddiK2F57cZLCZ6Z8BKaXjn1hdw8F8gFXjRUULOtNbIma3TCDt9baJar0p
f81fe+P5a3es687Fuu5GrOt+nyASylX3Hq2ol7R2Ud9jalb/XL3WFA+nDFi1
IgtaUfyxTcZvRwg0g1jaAo0ioRDfy4vie/lsfC9fNPMgoORoNhTymbKrUOtN
64+tch4KMeCz6h6ZDt8j36zmkPwW3I/o6u5ve3dxBklcdll3ty0WKvPCnG+t
70ODa+3Q+JsZpLqS2pwIEfA9/zV0eHUi+Mm3A77MIu/CG/NpV6PByWvC5PZF
PfTMldYt6AcFrb8mMvZmIAnex31pElpKRmHRD285LVLQDSGWCTexOHiM9ZkS
WJ/Zj/WZW7HOhw7rfEhY53Ma6593P/qjf27E+ucZGT+nfSIfUdvWNbHm6z+h
ueM7GTNbcqB7lU74JtYJczP/0ZkIYp1JifIfnYkw1gkMYZ0AK9YJ6OB+UQLu
F9XgfhFf7wJ7S/8AuKBBn/20MyDL7WVp2J8EFqt80iSwT9os7lPlb/7TpzqG
+1SPMWeZG3OWKzFnWRDPfeTguY90PPfhbv//7+++4vu7/wOreuRE
      "]], {}}, Point3DBox[{3.23, 1.93, 0.899662681164032}]},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{1, 5}, {1, 3}, {0., 259.74605584091245`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8546988785676994`*^9},
 CellLabel->"Out[29]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
3hjRqEK3OjwRnNxvpp9eWG679nQQix4brv4RuqLp51fh7+jurGStY0eb0VgX
iFanjubUS5WO+hN0e3FeuEeSbLne44ZwjznuMYvvkdHWw5S7+H3+HoklHeq+
sWc53atjW1Ce7nXyQ01Nmau3FBlZ9l5v5avupN3mxdCjo/pEDSUd45RTn26B
km23SmzKN2dvN625W4c1ESX+RtdddlZ5+IFlmcDznX1L/P026H7d14NOex4c
Lk/sHSrXrCxU6swPTOyDAv/S3Pokfds9pXR1h3s9dD25hfX3moklcnSL1wtJ
VlGvzod7ZEnEtULRQm4UsgY36sSsQLTpb1Qfx56dVw72kpEod5urNlZq2Yzm
FzrTGod0Tc29wonBveY190oagsjqfu3v9Qun4U7zcKcsdS678P10l+BhR07c
zKtgbmJYXAi0Iv8kX8O90k/4+tZdA7hfElFs2DfrbsYHMOzN30DfdvRf8DPe
q47gZDFdR+Zc/SEUcggwPc1BZNb6PLp1cUTujVecUR59YnEL56D3DHPm8LaP
0k9pzTkUcg57r+7zUTTO2vboGUTcm8T55yiJfF1ghjozos43EottTc3ZlOXe
ed2PhwBAjLLYMAr7DO54LI/gf/zaoaEHx5PTURR0PD+z5RMEDXochGTkI1m7
mqw+8vlE/YDUZJQSMPi5KAL3C+Y4mO4dTRCTOwDHqKrnMhHyTN6qnAgI2OVM
glGbivdqD2Z6+0L8LwZIRsziUENnRUfCoi8n5+HQY5/S42jhNNwbvj4MY/jF
oXL1klyjzSbChxMggNgTuIpPoJOp0gqHirsn/jJhj7ert5/NfPvEEhxuaNBt
KzZIHDIDkE9Mt0ya3HmXD19Wh4qCbtqZb1sHKyIxjhT+M3PHnxN+7mDFXC8I
SYyDsnJBq3zfyqXlwZtPJfo2Zr7BVG7wzbtjKSi0JvlAUkDVt7vDcvfGz9G9
QbkNN+XeDk32+wyG3FtUfvL/mnvTyGGHXBjfW090bwbK5eF7WU/vvnGFEXtF
Da5J6iW95fFdYyTf8FdKP8g8eNv4X2439bfbI7cL9t2+4ZpAyh653anLe72U
qzAvuQD2di8L0qyOlCz840DYmuV5YFRWcOXRxxbqbac1d92sSLOCgBopcQfa
Qh1UB1g8B3UX3TGYF3LM3TXfca9BrBFkctORd3DY3PQl9G13A8bc+dv2zt+6
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
9fqymd7e3hKhQmgW9Mmtv/T08sVrJ8pfunu0/MZjc9PZAgvlAaqlEKz4LQey
GYH1nXZTMKzew8Y0rOogI4u3xCYVTCXUQsqrYqmpTtGVSQ8dGqZ1gC+VESA8
tHWs8GqpI6pMUIKnv1RHwR/duqhhC2hQOKZ2oCY/K9qpw/D3wnYOGe1ErTi0
eGOYDMFeAwWT1FH41GVxRuVPDjzwsdL0LChc+gJS4vgdw6Tf7z6gBObFHytv
vfXW8pJLLhGdytDg0MqYnY+h5QCogyTl0/RI0UZqlMVQRui2FRQMrSKlYfTO
xPz0UEBK24i8OyKwdJt2uteAxbes4l8Rg0XnFbzJYIlUz0Mfa5THHplb/up9
w+WXblpaPn3lqdpgqrP4gaVbLj6jfOaqU8t/dMti6rRGt13b6CQ0JGmMgjSR
GSXzXvynhgeNTj+VLXCF36sc2jN8D2oW7VhOK+DpoR0KCho4TEcf4TZsq5/S
WSIpN0hCQBwI0go2Z+81ZasNDcpDPbHUDKK+JuyC4+qaBlKiVIJWse4Kuz2E
An+CozTWSHNES1SHibUDpz3wvfGOz5eoHHn72Qn2vQarUbz7Tk06z4ks/GjU
gxs/Tmia3nMG23YNCeX56QQcmwg6pleQg4IYCl68OMY92RXktAQ5e6/oKys6
JhqtF8OmbshYNDpVnB+NiZOaagbYaNgCUQielVpEpZlHbu8r/2wLAgrObnPM
5Sw3GG70+Majc8tf3zBc/rM7Fpb7nO4Bdi7007z6CE/oUEWn6le+sJRgA7io
rvnPjwwpdJL3Ysm1b+m0Jhx2B3+PPKXIJ5KFUJosymTvGAw5E7bLJH2Eghv4
RTq+gHBDFZuzRUztCpJX5je1IP/V+ZWep4I6uqM+p5fIiRZVpCjCLLIod2S2
3DUVRaYULSiiPgGHplNt0EEj4AygvvrM0VMXkE9UHfVB7ztPA3pmBXXaEVBZ
sNCeHOfSAncAsOx8LY77nqN+YamUjDCLNVPLdnc7cMm8q5VJ1hFkyP0Nlyd2
kYpCaG5UjLNzzcybdbU4W21wNpGYgTeCM43mUa6pVY+zfyhPJ6auc915jYyA
lqmDJFVscY1CSyN8pJh+4Y5FBKz7PnM6Ac0BTo/3fvcU6tj+ZOvgD4Ct33+4
sv12y1BHbCV5NL1YgZbKMJDpLXZR6dm6BFeLd5oEOe1zwQPfo7/Qb/vrCLlM
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
nDuMuT2MuRlENWvJyy6dbG+YMU5klJgs9E66kIny2czd2czUn/aOVP+rrw3n
OvOI9pJANjigqVR1cUBxhBmQ1sMSf45xh9Vf9pjLd2W5l049KdVfm41wE/+k
Yux8Lc4lp6NyBWf2WR3norGCZ9F7r+sqnNl+J3P0k0jiXCkY4eXP1jR7Z3aw
PbNSMEJQ+7vNw63ChvQmrcLG1uF8O81JFMC3xuTF5r4Pbcx1o96NTh2OGytR
8eRW7bwAJKcgEiBGyawzRYc44Yk5/xAbJ5dWM0BQNO9LSfjN7Uu2pjJ1zuYs
vuml/ndsrSUiOr3cxTyLK0UZa5aepT6+5gR/iI2OXJ0znNgzbGVtosSXwTH3
1rxEaKpi761GOz/3g15f9tu35oNSPlscNVop78j4wFL3cVOnUeHwlL119nlP
B03V0WTdPR2iQoxpVvqg9Z32+Gbh8U35+PZu6qB3ffTmceb4ZjivMc5rYlJP
ObQxzizSK/2r/o25s0JAoCOMdqledJV/aDPp0khZie6ux4anFJEvPnQWPxxE
vWdXvIOaB7dUvq2WB75SJ0KP8+u3jpRBn74P6ZHCIf0j31Ql8UQTpjDjI8si
fFYjasWYqu4QO4cOE0A4lPmH9iZ9aPewyQUNGMzvFPfNzIoP1D+kqZ31QSKq
w960cD4b/Hkec907ItzKMuIdMnZuDqntXfIhTUMLwIq35OzbmosnGV7qW6wb
KZ1MYjQ8kiBrlfqpt/84uqPq08kntUqntPfO45SxChxZVAJPuJkS1HXrHdpK
SU14pL9ZWaNPNdi/A0MsB18334nLJPozu6bVYNo1N110QlajCa5vrZKRevtZ
mpKpXZ90Ma7RzUnVpqmT5LaKkVU6lSbvxKmk3ktsSrl/okO6T7/2v/v0++nj
qd9v/bkN1kuQb6uBuHhwQu34Kt1HJ4cnU8ZazXql0w1HsPu5WY10MpM+y7jB
vPlqrgxhLCGYNy9Wcfs6lUYTRG6bOhWloYTE6cIl/n3T7IXEdXUJdB6h/314
QzPOYyS/Z5xNrDrrm2bU92GMMmusLlHugVnjTOslCHMLh5EyTyifFhad8W+Y
b+pA103t3MBO0Q+MKD2OlG5GobW6vnkGQz8c5aZucxKd0PHkfR5OH9gzaO6n
SeG8sFcnLYJwadYxwxxAOaPekB2GfR4aVSN6/ECrSWm9Wm1KN0nc6AN5xsze
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
FA/mP9sDinfTf3F2hOs0FLeWQXdfVAkpntsp1t8t0hRFtS5Onj9Z0aI+t/R9
avOCy2V8/7ZFF6j9y0+m5qjMyLy2oj9tHuPTPz+rrSa2TYO0HDRIH/NEl5+t
GBjlk1okhDw0jvCc+mH0jCfYPgWVvnXqT3xmR0aBSXwFJopz/hF+wX5kI74P
bupvxJekeuYy4PWxGwe68ly/PHbTwMjFbuUq9Jgpja6ozVa8amxqKU2aONx2
Ng0lfzjpU6JEP3xDK0Wy0Cwlia+DiMt2fOaacVFaEL6VhjiG1KNLcJ/GJKLs
aVUHbxhuN8Ew/nLs3hbT/SxbYaXshJUGmn7xM8QhbEAgkSwtXYqbMry1gNQN
XhmeJzV6n0fvGRrF/Hma2DT9Amhn3lQl90rN2yDWt5Sdp3/qD1QWgRs3kmY/
fithdoPbyFJEVDmuJPrdUZC/qHmODunBbe20YJYRwAnZJMmQaLQCE6NV05ep
rd1LLmbRy+3axLldZU7JhdmzqdT/957Q2PmNLfj7qc5/+Z+9qdPLeeNPGBLB
X0798034kmtkAATai1efuz5oqmbrwnqWflRpLzVju1IvDXfmuSfG774ar5qK
SXiK8pZpZujlR6vxp5KiPKManAb2qSJHZf6T9e1plXkzRixhKGQIXltqyQpq
cCa5/qp/sQ49sWEmBMbHNohuhyxDogcmcGbXjCZr7NjjF69sEKrHoZSuea6p
rl5ZajqgUNKhqIPrn9U8v3HhJJFawPPnNM/9oRfh+rd5kB4OQPrXSajAFM08
iuyCl8YGqK9knfcw82jq8JeXuwz0z84eLrtcUZLT0otInhHJf+ZX3qSTiRdQ
71i+f0E71dxWMDf2cPVYntGko1FaTiL9HEtbqXXlT51S3gd55VRwSwFOOedz
R6sDa9vt22SOsTckz4ooTnrx4Jj994FxUVl0sV0JQR4RLqmnCF77KgjY7Tsz
S26KDC8OK0B61guk00oXEV10cjQ8zTOMNEOOBPKSizdPrcqCjEUBeWZBHjO2
UWrTXwTUkwDbmXVmRtmNjzu8E2uy0hGlGZeEcQ3lnJMW8ffDuM7CcC7w0Pjy
U+FdUtVhLYmjd0X/PNjoKfrx9s1m32rlpAmisSShvJLW9ZCAnKJf/81WM9V1
Nwzk6oW2QGJxVbitxBNPTvnSYlOwvtA1LA/sYucIx+yIam847tMzfH3psP9L
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\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"e8967a5a-ba24-45c3-a620-5b7050efcd84"]
}, Open  ]],

Cell[TextData[{
 "This is equivalent to solving ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["A", "T"], "A", " ", 
     OverscriptBox["x", "^"]}], "=", 
    RowBox[{
     SuperscriptBox["A", "T"], 
     RowBox[{"f", "(", 
      SubscriptBox["x", "i"], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "139ae6a3-3f8f-47cc-807c-c8bb6a36e18c"],
 ", i.e. using using ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["A", "T"], TraditionalForm]],ExpressionUUID->
  "d20f1a06-2ea2-4085-9482-aee6c3399abe"],
 "to project onto the column space of A . Note that ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["A", "T"], "A"}], ")"}], 
    RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
  "ab90bb78-0f5d-4d77-9514-0b65fca32dc7"],
 " exists when A has independent columns [N(A) = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"N", "(", 
    RowBox[{
     SuperscriptBox["A", "T"], "A"}], ")"}], TraditionalForm]],ExpressionUUID->
  "3353025d-bbe1-4c7a-89eb-bf66e52c42f8"],
 "]."
}], "Text",
 CellChangeTimes->{{3.822588475434029*^9, 3.8225885162689657`*^9}, {
  3.822588842146174*^9, 
  3.822588936476303*^9}},ExpressionUUID->"e64985fb-d617-40b5-8a0a-\
1a9f24e1e984"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MatrixForm", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "A", "]"}], ".", "A"}], "]"}], ".", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}], "]"}]}], "\[Equal]", 
  RowBox[{"MatrixForm", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", "A", "]"}], ".", "fxi"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.822588629465384*^9, 3.8225886664533377`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"14a19473-c240-4aa9-9ab6-7fa46d3c8319"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"11.`", "27.5`"},
       {"27.5`", "96.25`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ".", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"\[Alpha]"},
        {"\[Beta]"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "\[Equal]", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {"88.56211091975212`"},
       {"278.3642345376694`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}]], "Output",
 CellChangeTimes->{3.854698935562479*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"7e6211e4-5351-4cbe-ad3d-1732e487d1c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Transpose", "[", "A", "]"}], ".", "A"}], ",", 
   RowBox[{
    RowBox[{"Transpose", "[", "A", "]"}], ".", "fxi"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821188612716619*^9, 3.8211886422363567`*^9}, {
  3.822588609371025*^9, 3.822588618545989*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"955ed707-7e0d-45b7-9597-2bbea4998a26"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.87301397104209`", ",", "2.071234808665059`"}], "}"}]], "Output",
 CellChangeTimes->{3.854698937243781*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"e6945cb3-e757-4702-bd71-db9666e6e26c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Inverse", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", "A", "]"}], ".", "A"}], "]"}], ".", 
  RowBox[{"Transpose", "[", "A", "]"}], ".", "fxi"}]], "Input",
 CellChangeTimes->{{3.8212591813559237`*^9, 3.8212591831331253`*^9}, {
  3.8225886874803534`*^9, 3.822588703097578*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"4f8dfab5-f340-41a2-8841-210b20f7cc46"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.8730139710420923`", ",", "2.071234808665058`"}], "}"}]], "Output",
 CellChangeTimes->{3.854698938691724*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"b0577fb2-53ff-4422-bfd6-222c9adddc3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LeastSquares", "[", 
  RowBox[{"A", ",", "fxi"}], "]"}]], "Input",
 CellChangeTimes->{{3.82256857411096*^9, 3.822568577217107*^9}, {
  3.822588589509695*^9, 3.822588595400112*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"230d33e1-bd0e-4642-913e-08b8f72e37e3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.873013971042094`", ",", "2.071234808665057`"}], "}"}]], "Output",
 CellChangeTimes->{3.854698939787346*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"35ea5353-ff45-4dee-bae7-cfc7e1df08dd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Method 2: QR", "Subsubsection",
 CellChangeTimes->{{3.822588731384911*^9, 
  3.822588734012477*^9}},ExpressionUUID->"b3a69c86-b440-488d-acfd-\
da813965d537"],

Cell[TextData[{
 "Recall that we saw that we could solve ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["A", "T"], "A", " ", 
     OverscriptBox["x", "^"]}], "=", 
    RowBox[{
     SuperscriptBox["A", "T"], 
     RowBox[{"f", "(", 
      SubscriptBox["x", "i"], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "2397a100-806c-48a5-95ee-6566ee233a1b"],
 " efficiently if we had the QR decomposition of A. We have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["A", "T"], "A"}], "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Q", " ", "R"}], ")"}], "T"], 
      RowBox[{"(", "QR", ")"}]}], " ", "=", " ", 
     RowBox[{
      RowBox[{
       SuperscriptBox["R", "T"], 
       SuperscriptBox["Q", "T"], "Q", " ", "R"}], "=", 
      RowBox[{
       SuperscriptBox["R", "T"], "R"}]}]}]}], TraditionalForm]],
  ExpressionUUID->"e9b58f8c-5d8d-43ce-a0e6-13c73c7e2628"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["A", "T"], 
     RowBox[{"f", "(", 
      SubscriptBox["x", "i"], ")"}]}], "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Q", " ", "R"}], ")"}], "T"], 
      RowBox[{"f", "(", 
       SubscriptBox["x", "i"], ")"}]}], "=", 
     RowBox[{
      SuperscriptBox["R", "T"], 
      SuperscriptBox["Q", "T"], 
      RowBox[{"f", "(", 
       SubscriptBox["x", "i"], ")"}]}]}]}], TraditionalForm]],ExpressionUUID->
  "1a2a78cb-5dd8-4617-ad81-63be39e1b3aa"],
 " so our problem reduces to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"R", 
     OverscriptBox["x", "^"]}], "=", 
    RowBox[{
     SuperscriptBox["Q", "T"], "b"}]}], TraditionalForm]],ExpressionUUID->
  "42b925bc-567f-4be2-9d23-735aceb3d684"],
 "."
}], "Text",
 CellChangeTimes->{{3.822588962290124*^9, 
  3.822589210371364*^9}},ExpressionUUID->"acd17b2b-82a7-4ca4-95ac-\
a63e22e6c4e7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Q", ",", "R"}], "}"}], "=", 
   RowBox[{"QRDecomposition", "[", "A", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.821251853004607*^9, 3.821251863242508*^9}, 
   3.8212519210322104`*^9, 3.82258921424279*^9},
 CellLabel->"In[34]:=",ExpressionUUID->"64779275-0869-4589-8f08-a826e90e5ef7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MatrixForm", "[", "R", "]"}], ".", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}], "]"}]}], "\[Equal]", 
  RowBox[{"MatrixForm", "[", 
   RowBox[{"Q", ".", "fxi"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.821251974732473*^9, 3.821252019105939*^9}, {
  3.822589220732374*^9, 3.8225892210654097`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"17a18d48-f179-4a84-bc80-c63645af431b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "3.3166247903554003`"}], 
        RowBox[{"-", "8.291561975888499`"}]},
       {"0.`", "5.244044240850758`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ".", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"\[Alpha]"},
        {"\[Beta]"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "\[Equal]", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        RowBox[{"-", "26.7024811420595`"}]},
       {"10.861646969829614`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}]], "Output",
 CellChangeTimes->{3.8546990771046534`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"010e06d3-da0e-47f9-9a6f-4a65e078f627"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearSolve", "[", 
  RowBox[{"R", ",", 
   RowBox[{"Q", ".", "fxi"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821251867910774*^9, 3.821251888617507*^9}, 
   3.821251960354035*^9, {3.8225892481384153`*^9, 3.8225892484831743`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"98156093-6efd-4eb3-b847-1c460ded9854"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.873013971042095`", ",", "2.071234808665057`"}], "}"}]], "Output",
 CellChangeTimes->{3.8546990938007717`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"1254fa01-9ad6-4bdc-a516-4843aba7f2d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Inverse", "[", "R", "]"}], ".", "Q", ".", "fxi"}]], "Input",
 CellChangeTimes->{{3.822589267085862*^9, 3.822589295012629*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"66d8d64d-351c-4dd2-b9a0-4a06d47076bf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.873013971042095`", ",", "2.071234808665057`"}], "}"}]], "Output",
 CellChangeTimes->{3.8546990958135033`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"33720bb7-5517-46e8-988b-9f2bad8e5b67"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Method 3: Pseudoinverse", "Subsubsection",
 CellChangeTimes->{{3.822588749048582*^9, 
  3.822588753882749*^9}},ExpressionUUID->"6b879a35-9c3b-476f-9155-\
9021baae854d"],

Cell["\<\
Our third approach is to use the pseudoinverse to solve the problem directly.\
\>", "Text",
 CellChangeTimes->{{3.8225893229953327`*^9, 
  3.822589345868616*^9}},ExpressionUUID->"0ebaa31d-54ec-42c6-89f1-\
136becb82ecd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PseudoInverse", "[", "A", "]"}], ".", "fxi"}]], "Input",
 CellChangeTimes->{{3.822589304528479*^9, 3.8225893193236723`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"a103eb09-1861-42f6-8052-985bca011a72"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.873013971042093`", ",", "2.0712348086650563`"}], "}"}]], "Output",
 CellChangeTimes->{3.8546991725174885`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"bf91f33d-a0a3-44fd-90e5-27f59b7eb825"]
}, Open  ]],

Cell["We could also this using the singular value decomposition", "Text",
 CellChangeTimes->{{3.822589356196519*^9, 
  3.822589371954811*^9}},ExpressionUUID->"78a124ef-4c65-41ac-ae45-\
c1ed5714053c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"U", ",", "\[CapitalSigma]", ",", "V"}], "}"}], "=", 
   RowBox[{"SingularValueDecomposition", "[", "A", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.821187627527821*^9, 3.8211876560987062`*^9}, 
   3.822589375339679*^9},
 CellLabel->"In[39]:=",ExpressionUUID->"98a7dd01-f16f-40c9-85e9-77458a8bfe36"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalSigma]Plus", "=", 
   RowBox[{"PseudoInverse", "[", "\[CapitalSigma]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[CapitalSigma]Plus", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.8211877105824842`*^9, 3.8211877331161823`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"fe39d6ba-ce4f-4aa2-9c4d-85ae68decab0"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.09789294961627878`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`",
       "0.`", "0.`", "0.`"},
     {"0.`", "0.58733501935512`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8546991873572764`*^9},
 CellLabel->
  "Out[41]//MatrixForm=",ExpressionUUID->"cc4de316-1935-4481-8d0c-\
06effa409771"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"V", ".", "\[CapitalSigma]Plus", ".", 
  RowBox[{"Transpose", "[", "U", "]"}], ".", "fxi"}]], "Input",
 CellChangeTimes->{{3.821187660265027*^9, 3.8211877069453573`*^9}, {
  3.8211877500824413`*^9, 3.821187765445613*^9}, {3.8225893884320908`*^9, 
  3.822589388914528*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"0c2bbb6d-9620-4ee2-b44e-da4eb643cdbc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.873013971042093`", ",", "2.0712348086650563`"}], "}"}]], "Output",
 CellChangeTimes->{3.854699190165501*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"aa517413-7a22-4d8e-9ebf-2980326faaa6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Method 4: Gradient descent", "Subsubsection",
 CellChangeTimes->{{3.825670053195777*^9, 
  3.8256700583086653`*^9}},ExpressionUUID->"18e1d098-169b-4183-835c-\
48a2b09229b0"],

Cell[BoxData["A"], "Input",
 CellChangeTimes->{3.825670947844865*^9},
 CellLabel->
  "In[114]:=",ExpressionUUID->"23f2164e-3e99-4139-8e14-bedc6e9a6bac"],

Cell[BoxData[
 RowBox[{"AT", "=", 
  RowBox[{"Transpose", "[", "A", "]"}]}]], "Input",
 CellChangeTimes->{{3.825670949807362*^9, 3.825670955762776*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"91d69e95-1082-4e4f-ae0d-284368165706"],

Cell[BoxData[
 RowBox[{
  RowBox[{"x0", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.825670934546056*^9, 3.825670941167727*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"b986a4c3-f8b2-45b1-9e6d-782b267203db"],

Cell[BoxData[
 RowBox[{"r0", "=", 
  RowBox[{"AT", ".", 
   RowBox[{"(", 
    RowBox[{"fxi", "-", 
     RowBox[{"A", ".", "x0"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.825670966703183*^9, 3.825670976589018*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"13d9a13f-7bb3-42f9-a8a1-253c628bbda4"],

Cell[BoxData[
 RowBox[{"\[Alpha]0", "=", 
  SuperscriptBox[
   RowBox[{"(", 
    FractionBox[
     RowBox[{"Norm", "[", "r0", "]"}], 
     RowBox[{"Norm", "[", 
      RowBox[{"A", ".", "r0"}], "]"}]], ")"}], "2"]}]], "Input",
 CellChangeTimes->{{3.825670997448703*^9, 3.825671012495179*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"e066d623-ba2c-41d8-95a3-be7886067f3d"],

Cell[BoxData[
 RowBox[{"x1", "=", 
  RowBox[{"x0", "-", 
   RowBox[{"\[Alpha]0", " ", 
    RowBox[{"AT", ".", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A", ".", "x0"}], "-", "fxi"}], ")"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.8256710232106037`*^9, 3.825671041252014*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"5440ff6f-6cbe-40c0-bc9d-6278c2ab66f7"],

Cell[BoxData[
 RowBox[{"r1", "=", 
  RowBox[{"AT", ".", 
   RowBox[{"(", 
    RowBox[{"fxi", "-", 
     RowBox[{"A", ".", "x1"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.825671055188499*^9, 3.825671064695418*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"a708c684-e6d9-42fd-8878-a119b580a814"],

Cell[BoxData[
 RowBox[{"\[Alpha]1", "=", 
  SuperscriptBox[
   RowBox[{"(", 
    FractionBox[
     RowBox[{"Norm", "[", "r1", "]"}], 
     RowBox[{"Norm", "[", 
      RowBox[{"A", ".", "r1"}], "]"}]], ")"}], "2"]}]], "Input",
 CellChangeTimes->{{3.8256710721850233`*^9, 3.825671075197133*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"566350ef-52dd-4a62-8448-c25d646af2f0"],

Cell[BoxData[
 RowBox[{"x2", "=", 
  RowBox[{"x1", "-", 
   RowBox[{"\[Alpha]1", " ", 
    RowBox[{"AT", ".", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A", ".", "x1"}], "-", "fxi"}], ")"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.825671081854994*^9, 3.825671087612112*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"ce434c96-5db0-4e48-8420-7063ce14642a"],

Cell[BoxData[
 RowBox[{"r2", "=", 
  RowBox[{"AT", ".", 
   RowBox[{"(", 
    RowBox[{"fxi", "-", 
     RowBox[{"A", ".", "x2"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.825671055188499*^9, 3.825671064695418*^9}, {
  3.8256711069756413`*^9, 3.825671110547605*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"af5f219a-023a-40b9-898e-bfd7e326e8ee"],

Cell[BoxData[
 RowBox[{"\[Alpha]2", "=", 
  SuperscriptBox[
   RowBox[{"(", 
    FractionBox[
     RowBox[{"Norm", "[", "r2", "]"}], 
     RowBox[{"Norm", "[", 
      RowBox[{"A", ".", "r2"}], "]"}]], ")"}], "2"]}]], "Input",
 CellChangeTimes->{{3.8256710721850233`*^9, 3.825671075197133*^9}, {
  3.82567111303959*^9, 3.8256711173577337`*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"6d075ffd-cd3a-4e90-81cc-8ceefe55f627"],

Cell[BoxData[
 RowBox[{"x3", "=", 
  RowBox[{"x2", "-", 
   RowBox[{"\[Alpha]2", " ", 
    RowBox[{"AT", ".", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A", ".", "x2"}], "-", "fxi"}], ")"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.825671081854994*^9, 3.825671087612112*^9}, {
  3.825671119069015*^9, 3.8256711236029654`*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"1b3db9a2-10fd-4ba5-a9c2-876d5a76a26f"],

Cell[BoxData[
 RowBox[{"r3", "=", 
  RowBox[{"AT", ".", 
   RowBox[{"(", 
    RowBox[{"fxi", "-", 
     RowBox[{"A", ".", "x3"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.825671055188499*^9, 3.825671064695418*^9}, {
  3.8256711069756413`*^9, 3.8256711373469963`*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"21a9df9a-b73c-482d-bec3-9c8defaf70b1"],

Cell[BoxData[
 RowBox[{"\[Alpha]3", "=", 
  SuperscriptBox[
   RowBox[{"(", 
    FractionBox[
     RowBox[{"Norm", "[", "r3", "]"}], 
     RowBox[{"Norm", "[", 
      RowBox[{"A", ".", "r3"}], "]"}]], ")"}], "2"]}]], "Input",
 CellChangeTimes->{{3.8256710721850233`*^9, 3.825671075197133*^9}, {
  3.82567111303959*^9, 3.825671143066711*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"8af54b6d-c65f-40ed-bc79-4f8a9eacb2e7"],

Cell[BoxData[
 RowBox[{"x4", "=", 
  RowBox[{"x3", "-", 
   RowBox[{"\[Alpha]3", " ", 
    RowBox[{"AT", ".", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A", ".", "x3"}], "-", "fxi"}], ")"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.825671081854994*^9, 3.825671087612112*^9}, {
  3.825671119069015*^9, 3.8256711485485573`*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"b95b909d-0999-41e0-942f-7c21f4eb040c"],

Cell[BoxData[
 RowBox[{"x\[Infinity]", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}], "/.", "sol"}]}]], "Input",
 CellChangeTimes->{{3.8256710960396442`*^9, 3.8256710964877663`*^9}, {
  3.8256736800955153`*^9, 3.825673682785673*^9}, {3.82567371348956*^9, 
  3.825673717077664*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"8c55dd4b-7200-49f7-9403-ab272595fd10"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "x0", ",", "x1", ",", "x2", ",", "x3", ",", "x4", ",", "x\[Infinity]"}], 
    "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8256738733570013`*^9, 3.825673876124373*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"70df0d89-a824-4f34-928d-cc996f1a881c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Norm", "[", 
    RowBox[{
     RowBox[{"A", ".", "#"}], "-", "fxi"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
   "x0", ",", "x1", ",", "x2", ",", "x3", ",", "x4", ",", "x\[Infinity]"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.825673904907874*^9, 3.825673910708785*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"99b44eb8-6f22-4c42-a29c-9f33f4df4e86"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     RowBox[{"Norm", "[", 
      RowBox[{
       RowBox[{"A", ".", 
        RowBox[{"{", 
         RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}]}], "-", "fxi"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "0", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", "0", ",", "4"}], "}"}], ",", 
     RowBox[{"Contours", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Norm", "[", 
          RowBox[{
           RowBox[{"A", ".", "#"}], "-", "fxi"}], "]"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{
         "x0", ",", "x1", ",", "x2", ",", "x3", ",", "x4", ",", 
          "x\[Infinity]"}], "}"}]}], ")"}]}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x0", ",", "x1", ",", "x2", ",", "x3", ",", "x4", ",", "x\[Infinity]"}],
       "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8256737322586603`*^9, 3.825673883187468*^9}, {
  3.825673917013565*^9, 3.825673931922473*^9}, {3.825673963540942*^9, 
  3.825674005516593*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"29b08895-1166-4ad7-b51b-bc2401b4a366"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Overfitting and under-fitting", "Subsection",
 CellChangeTimes->{{3.8225682705564013`*^9, 3.822568280964117*^9}, {
  3.822571579951522*^9, 
  3.822571584549178*^9}},ExpressionUUID->"2970e3d7-7a1f-42c8-8ce6-\
71f29c104e7d"],

Cell["\<\
We might think that we could obtain a better fit by introducing more \
parameters into our model. Similarly we might think that we could save some \
time by using fewer parameters. While this might be true in some cases, in \
many cases  it leads to problems of overfitting and under-fitting, \
respectively. Let\[CloseCurlyQuote]s use Mathematica\[CloseCurlyQuote]s Fit \
to fit three models to the data, one with too few parameters, one with two \
many, and one with the correct number\
\>", "Text",
 CellChangeTimes->{{3.82257159762001*^9, 3.822571615384783*^9}, {
  3.822589424009202*^9, 
  3.8225895263138*^9}},ExpressionUUID->"1cfd99a0-c589-47a7-8bca-06b1d74721c7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fit0", "=", 
   RowBox[{"Fit", "[", 
    RowBox[{"data", ",", 
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", "x", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit1", "=", 
   RowBox[{"Fit", "[", 
    RowBox[{"data", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "x"}], "}"}], ",", 
     RowBox[{"{", "x", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit10", "=", 
   RowBox[{"Fit", "[", 
    RowBox[{"data", ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       SuperscriptBox["x", "i"], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "10"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", "x", "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.821183543266592*^9, 3.8211835726448593`*^9}, {
   3.8211836057533484`*^9, 3.821183666059309*^9}, {3.821183932416732*^9, 
   3.821183944451255*^9}, {3.821185018949024*^9, 3.8211850246032753`*^9}, {
   3.821187515609003*^9, 3.821187522442092*^9}, 3.8225716478274813`*^9},
 CellLabel->"In[43]:=",ExpressionUUID->"65af08b8-e8a6-45d7-97e4-8dc55e01d4a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fit0", ",", "fit1", ",", "fit10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", "data", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821183667486266*^9, 3.8211836851076193`*^9}, {
  3.821183902550365*^9, 3.821183922926962*^9}, {3.821183953091913*^9, 
  3.8211839533353252`*^9}, {3.822571619947806*^9, 3.8225716442821903`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"14489321-0be3-4083-a55a-d6fbb8cd48d1"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wpdqu8fWJF5pSCg7stx+pv5VfaQ/jLzw1
v/C1/E44f936zts5eqfg/HT7izPfFF2G8/Oeaj7esu4mnM+l2KJ+3+IBnN8n
cFprYcJjOD/pdsh+5jPP4PzCoy1J+eqv4PyNBTzBEp5vEe6pzn5lEP4Bzm+a
/yfwy5uPcD7D5QcOe6o+w/lqJWkVIVpf4fwnX6eHce/9Bud7Pc2qnVT4A873
ezJBW07uF5z/6nBSw4m1v+F8PcFrss7xfxH+s/+aeOfzPzjf/W3Ud6VQBgcY
/8ahFMYoHUY4f2vHkTiFrwh+Gmvpg3PnmOD85KLqrTyzmOF8/XTtcz6JLHD+
eSEd7lJLVjh/97qm2TrMbHB+NaNWwJm7CD7XnSqPvC3scP7TZYpT5tdwwPlT
NCRZdoZywvkTZqUdT1TggvOjpsSe43mO4P9wWfpz/j5uOP/xU6eKQ+08cP4i
W0Pps4m8cP7a1lLBdF0+OL89NNmb+SuCb3pn4cr2s/xw/gzN2WvPegvA+fUH
emd470TwfaVDl55SEYTzHfOORwt2IvjzZZJUznxF8FUOL5/mFy2E8J/uIa1L
+xD8tM8sF09qCcP5SRs/KXT2I/gTLvH0HjmO4O/7rPbz/38EHwBFgn9f
        "]]},
      Annotation[#, "Charting`Private`Tag$19137#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwVzn841AcAx3HOcdc53Pmui/w6HHe+lWhPPSP5fhaPFPVUkouWHGF+lXJ7
SDYRpWJXJDS7oVppqI3KVkJ+57RcPx8nRlKG/Lryq6z98X7e/74sJfu376Np
aGhs/tz/L/xeouMYkuiqLzNUjc7poEHJ9/bj76I+TVmbHqAxsNBUk8rnf0u9
27V69ziTgcLaTAttfgL1t7VYNbmYgah10ugPFhnU2VuFqumVDCjnwnPGLPIp
Xo+omxbCAKOrTzhicZUyt6de8toZKGqTx/5rUU2tbI/sdf2JifKKjK4o+zaq
0a43KTuQhTDqUf7wQSVFLF0UvUBnI2bArr+y/AVV0c40ERbrgWV5TNjzVS9V
84u1xEdigCzOA7Jobz91PzUhySuFA0nXjnta7a+p3uaY3HchXMQ2HpPsFw5R
NtEPs2LdDHHjANvHaOMI1RjAclgwJFCUGDnk4DdG8bs6zQymCKTI57dNDY9T
z0uklWTTF9BQ9uLO4UmqSpFKCnIWwzYuNH4Hqaa8T1iMyA/x8Ep9fqfu3fcU
Tp8TC92XYNNARNLZ2GlqlJ/PcbQ1wpZXsmXm5rNUPY95xYhujKH7kuSWsjlq
wnfbG12lMey5T83cAj9SKhuR9OgfS8Gi1EGqyU+UFfWilJZmgg0j/h+sfDVg
/XbJCp1wUzyvD9H0X66JTVN1WYMeZqg60bCHr9aEwtMj/zHPHKHa0t6ODhpY
9uIxt2lzBB9MrGIXaOHibvexmjYLrAxb1uEdRMeq94rBU958PDRcrit10kZM
em1Swh0+/ipPubBcSwf+a/lvhgWWSNQkt7Z366D4dlO8Za4lWKrDnjGVDCS9
tppx17bCwGXLHPkRJnSchjePRlkhR2RMr/ZdhBGf+RZxtxVkBaHNQXwWUrIT
jDZ6WMM/55sO9iALpam/+YnKrDHtfmlGXqMLexfbuy2mAvQPrI+vP86GxFjv
w+gxAYrXOZoogvQwUePs91QtQFmalBu2Qh+OGU9OuQXa4LhvsJeWWh80uu11
eZMNVquKrh5XGGDVhruzd9bYIs/uQpnCiwP9ijrjvXJb/FCbmedVzYFnDzuw
gSPEZhPfS20CLni1ejlLkoX4OqY5gJvBhawxsXBsUAi5qUTQruYiPNtBcVIs
guD+r7lbAgwxmrb9UWmdCLIV9WRnjSGYdmRjtcgOoZP0R60kge9zPHsy8uwg
uTHBz/iRwEXBY0WPBomoFJ/5TWcIvGQyKm7QSEh9Kp+xswnwRpxkqXQSJ9TS
LFkugZNV8u1CJolyp5m584UEDnhEPosxIDFTt/D08jUCzuG0fz6akZB1sjMb
mgl0XnOYMllLoqAkOjy9lQBbFvxkxIVESVyHm+cDAh5xuTfvuZK4yZPNPugg
cNtlPj54PQmVPxGufELgZ0Xzx9KNJIT9xm59/QQi3u1hOItJOFQeNr848Nmv
PPNG15+Ec1rXzL7Bz/5bDa3dASS8hYXX3w4R2JpMnj4aSOJgJN98fJzAGu57
TmsoiSMuR2d+n/zsV4smCsJJpOn1PY5TE7jyIkAZFUEir6Lk1PQ0AdPiunOc
GBLFyfSwP2cJ7Eyf+q5vP4lr2/atPzJPICtCKK6MJVFp1WTm+olAyxZ/p/RD
JGombWcWFgjQvsxcKpaS+A/g8BbY
        "]]},
      Annotation[#, "Charting`Private`Tag$19137#2"]& ], 
     TagBox[
      {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$19137#3"]& ]}, {}}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{0., 2.6254710816429205`}, {0.5, 3.770097078696258}, {1., 
      5.0304635059036995`}, {1.5, 5.974313493453903}, {2., 
      7.4522626594547985`}, {2.5, 8.158474753735982}, {3., 9.1338695837616}, {
      3.5, 10.053656798034213`}, {4., 11.092691303313904`}, {4.5, 
      12.255372034894444`}, {5., 13.015438626860393`}}]}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 5}, {0., 13.229187803016888`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8546993767398787`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"70d73014-7038-46b9-adda-68755151bdbd"]
}, Open  ]],

Cell["\<\
The green curve representing a 10th order polynomial certainly fits the blue \
points better (it exactly passes through them all - interpolation!) but it is \
clearly a worse fit than the orange. We have overfit our model. We could \
check for this by adding another point (which was not used in the training) \
and checking if it fits the model.\
\>", "Text",
 CellChangeTimes->{{3.822571662802144*^9, 3.822571703661213*^9}, {
  3.8225896233111763`*^9, 
  3.822589731997772*^9}},ExpressionUUID->"889f3b84-bbde-44f0-8abd-\
c24ccfba82e1"],

Cell["\<\
Similarly, the blue line (0th order polynomial) is an underfit and is not a \
good model for the data.\
\>", "Text",
 CellChangeTimes->{{3.822589689894876*^9, 3.822589692343224*^9}, {
  3.822589737383706*^9, 
  3.822589775713043*^9}},ExpressionUUID->"c0880606-215c-447f-9d90-\
157b69d72bb9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Linear Regression for a nonlinear function (but still linear in parameters)\
\>", "Subsection",
 CellChangeTimes->{{3.8225686017147923`*^9, 
  3.822568621523211*^9}},ExpressionUUID->"90c529a4-5521-498c-9c73-\
6a64002a1c44"],

Cell[TextData[{
 "There is nothing in linear regression that assumes our model must be a \
liner function of the ",
 StyleBox["variables",
  FontWeight->"Bold"],
 ". Let\[CloseCurlyQuote]s try it with a nonlinear function"
}], "Text",
 CellChangeTimes->{{3.82258978167929*^9, 3.82258978510462*^9}, {
  3.822589819684963*^9, 
  3.8225898583038073`*^9}},ExpressionUUID->"b62b1b71-9c51-4f82-b9d2-\
f5f115cb0ef7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataSin", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"3", 
         RowBox[{"Sin", "[", "x", "]"}]}], "+", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "0.3"}], "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}], ",", 
       RowBox[{"2", 
        RowBox[{"\[Pi]", "/", "10"}]}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"fitSin", "=", 
   RowBox[{"Fit", "[", 
    RowBox[{"dataSin", ",", 
     RowBox[{"{", 
      RowBox[{"Sin", "[", "x", "]"}], "}"}], ",", 
     RowBox[{"{", "x", "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{"fitSin", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", "dataSin", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.821184066084077*^9, 3.821184169614736*^9}, {
  3.8211842010314913`*^9, 3.821184223656281*^9}, {3.821184273637217*^9, 
  3.821184287747836*^9}, {3.8225898758903027`*^9, 3.822589905303688*^9}},
 CellLabel->
  "In[307]:=",ExpressionUUID->"62c14d69-7494-497d-9fda-3e0fe46614ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Linear Regression in multiple dimensions", "Subsection",
 CellChangeTimes->{{3.8225686017147923`*^9, 
  3.8225686433839083`*^9}},ExpressionUUID->"bae440e7-eac6-40bc-8683-\
2b157c5146ba"],

Cell["\<\
It is straightforward to generalise to data in multiple dimensions:\
\>", "Text",
 CellChangeTimes->{{3.822589951644835*^9, 
  3.8225899643445797`*^9}},ExpressionUUID->"2b821004-930f-47c1-a9bc-\
e0362ee42db2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data2D", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", 
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"], "+", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"0", ",", "0.5"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"fit2D", "=", 
   RowBox[{"Fit", "[", 
    RowBox[{"data2D", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "x", ",", "y", ",", 
       SuperscriptBox["x", "2"], ",", 
       RowBox[{"x", " ", "y"}], ",", " ", 
       SuperscriptBox["y", "2"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{"fit2D", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}], ",", 
   RowBox[{"ListPointPlot3D", "[", "data2D", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.821184066084077*^9, 3.821184169614736*^9}, {
  3.8211842010314913`*^9, 3.821184262084839*^9}, {3.821184307850202*^9, 
  3.821184434055539*^9}},
 CellLabel->
  "In[310]:=",ExpressionUUID->"cfb714b1-ef8f-4444-b0f9-84516cc61b76"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xi", "=", 
   RowBox[{"data2D", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yi", "=", 
   RowBox[{"data2D", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fxi", "=", 
   RowBox[{"data2D", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8225899949499693`*^9, 3.822590044171554*^9}},
 CellLabel->
  "In[314]:=",ExpressionUUID->"516aa8a2-2a68-407b-898a-b65e25ba1cca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ConstantArray", "[", 
       RowBox[{"1", ",", 
        RowBox[{"Length", "[", "xi", "]"}]}], "]"}], ",", "xi", ",", "yi", 
      ",", 
      SuperscriptBox["xi", "2"], ",", 
      RowBox[{"xi", " ", "yi"}], ",", " ", 
      SuperscriptBox["yi", "2"]}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.82259010843539*^9, 3.822590145504477*^9}},
 CellLabel->
  "In[319]:=",ExpressionUUID->"ed24f831-e7ad-41f3-b4ff-0ef4fbc81863"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PseudoInverse", "[", "A", "]"}], ".", "fxi"}]], "Input",
 CellChangeTimes->{{3.82118446206313*^9, 3.821184478472398*^9}, {
  3.822590149430399*^9, 3.8225901524653463`*^9}},
 CellLabel->
  "In[321]:=",ExpressionUUID->"7f5f7ad0-cd77-40a9-973c-b78a92bd4171"],

Cell[BoxData["fit2D"], "Input",
 CellChangeTimes->{{3.821184392044938*^9, 3.821184393027254*^9}},
 CellLabel->
  "In[322]:=",ExpressionUUID->"454aa79a-5478-4a9c-9e6a-b36063c696dc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nonlinear regression", "Section",
 CellChangeTimes->{{3.8225702197129107`*^9, 
  3.822570225698262*^9}},ExpressionUUID->"61354bb9-a0da-4c72-9de9-\
bb9d03cc7d70"],

Cell["\<\
We haven\[CloseCurlyQuote]t covered it in the lectures, but we can also fit a \
non-linear model, where we have a non-linear function of the parameters. To \
start, let\[CloseCurlyQuote]s make up some data to use:\
\>", "Text",
 CellChangeTimes->{{3.822590380658209*^9, 
  3.822590421945737*^9}},ExpressionUUID->"80596a33-288f-4293-975d-\
56e95d708a2c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Sqrt", "[", "x", "]"}], " ", 
       RowBox[{"Cos", "[", "x", "]"}]}], "+", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"0.1", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "100"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.662935549281107*^9, 3.662935551034395*^9}, {
  3.8225699208442*^9, 3.822569921612623*^9}, {3.8225699620640507`*^9, 
  3.822569971161809*^9}},
 CellLabel->"In[324]:=",
 CellID->2100409069,ExpressionUUID->"915712de-6a7e-4e5f-9c7d-127a674e5a51"],

Cell["We can fit a nonlinear model to this data", "Text",
 CellChangeTimes->{{3.8225904621127253`*^9, 
  3.822590469494357*^9}},ExpressionUUID->"e8f83470-48e8-4d23-9548-\
2f9394925bda"],

Cell[BoxData[
 RowBox[{"model", "=", 
  RowBox[{
   RowBox[{"a1", " ", 
    RowBox[{"x", "^", "a2"}], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"a3", " ", "x"}], "]"}]}], "/.", 
   RowBox[{"FindFit", "[", 
    RowBox[{"data", ",", 
     RowBox[{"a1", " ", 
      RowBox[{"x", "^", "a2"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"a3", " ", "x"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"a1", ",", "a2", ",", "a3"}], "}"}], ",", "x"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.662935556538391*^9, 3.662935565816724*^9}, {
  3.820151675395122*^9, 3.820151692728674*^9}},
 CellLabel->"In[325]:=",
 CellID->1239033297,ExpressionUUID->"ba4766db-96c1-42f3-940c-ef2409473932"],

Cell[BoxData[
 RowBox[{"NonlinearModelFit", "[", 
  RowBox[{"data", ",", 
   RowBox[{"a1", " ", 
    RowBox[{"x", "^", "a2"}], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"a3", " ", "x"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a1", ",", "a2", ",", "a3"}], "}"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.822590534723727*^9, 3.822590539371749*^9}},
 CellLabel->
  "In[330]:=",ExpressionUUID->"3963a008-65dd-4076-82c6-14c99c4a92eb"],

Cell["Now we plot the model against the data to check it does fit", "Text",
 CellChangeTimes->{{3.820151699011963*^9, 3.820151714753317*^9}, {
  3.822568203695649*^9, 3.822568203868881*^9}, {3.822590473547371*^9, 
  3.82259047671301*^9}},ExpressionUUID->"69f2904c-3028-4ed5-b30b-\
2098217f41de"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{"model", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1", ",", "100"}], "}"}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"data", ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6629355694544077`*^9, 3.662935612837612*^9}, {
  3.820151718022386*^9, 3.82015172671721*^9}},
 CellLabel->
  "In[326]:=",ExpressionUUID->"0f9daaae-bcbd-4b71-b94c-ac703443a483"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Logistic regression", "Section",
 CellChangeTimes->{{3.822568728819252*^9, 
  3.8225687315689507`*^9}},ExpressionUUID->"13e1676f-6ac7-475b-a6be-\
454999329565"],

Cell["\<\
Finally, let\[CloseCurlyQuote]s look at an example of Logistic Regression. We \
will return to the MNIST Digits dataset we studied using Principal Component \
Analysis.\
\>", "Text",
 CellChangeTimes->{{3.82259055396248*^9, 
  3.8225906027475758`*^9}},ExpressionUUID->"00d4f850-bc20-4a02-ad81-\
add7f188ea1a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MNIST", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<MNIST\>\""}], "}"}], ",", 
     "\"\<TrainingData\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.82178433819939*^9, 3.821784359377384*^9}, {
   3.821998365668429*^9, 3.821998390644134*^9}, 3.821998668594962*^9, 
   3.822033647805273*^9, {3.822033779360832*^9, 3.822033791127304*^9}},
 CellLabel->
  "In[335]:=",ExpressionUUID->"1db8a14c-1e75-461e-aa55-a81e7f83b573"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MNISTtest", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<MNIST\>\""}], "}"}], ",", 
     "\"\<TestData\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.82178433819939*^9, 3.821784359377384*^9}, {
   3.821998365668429*^9, 3.821998390644134*^9}, 3.821998668594962*^9, 
   3.822033647805273*^9, {3.822033779360832*^9, 3.822033791127304*^9}, {
   3.822591074406793*^9, 3.822591081954607*^9}},
 CellLabel->
  "In[339]:=",ExpressionUUID->"2ba2cef8-265f-46a8-9651-26c935c47169"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MNISTbynumber", "=", 
   RowBox[{"GroupBy", "[", 
    RowBox[{"MNIST", ",", 
     RowBox[{"Last", "\[Rule]", "First"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.822033207695846*^9, 3.822033301592517*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"079df9ec-9b5d-4dba-8681-73c5789dccd6"],

Cell["\<\
To save time, we will train the model using a subset of the data.\
\>", "Text",
 CellChangeTimes->{{3.8225907504038553`*^9, 
  3.822590774432714*^9}},ExpressionUUID->"23042e1c-3664-4263-8b68-\
91be2dfca1dd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingset", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"MNIST", ",", "100"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8225688110580597`*^9, 3.822568832135991*^9}, 
   3.822569158739112*^9, {3.822569226653932*^9, 3.822569247223864*^9}, 
   3.822569379989315*^9},
 CellLabel->
  "In[336]:=",ExpressionUUID->"5a732da9-c3cc-4c2e-82f9-6605fc484e8d"],

Cell[TextData[{
 "We could use ",
 ButtonBox["LogitModelFit",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/LogitModelFit"],
 " to fit a model and then used that to build a function that takes in an \
image and returns a number, but rather than worrying about the messy details \
we can use Classify with the LogisticRegression method specified. This takes \
care of converting the image to a matrix and all the other messy details."
}], "Text",
 CellChangeTimes->{{3.8225907842571793`*^9, 3.82259091804918*^9}, {
  3.822590975702598*^9, 
  3.822590994870723*^9}},ExpressionUUID->"b9a9abf1-2ac1-4278-889c-\
7c257272998e"],

Cell[BoxData[
 RowBox[{"logistic", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainingset", ",", " ", 
    RowBox[{"Method", "\[Rule]", "\"\<LogisticRegression\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.8225687770697327`*^9, {3.822590922274912*^9, 3.822590924676269*^9}},
 CellLabel->"In[337]:=",
 CellID->1726682747,ExpressionUUID->"3ed9bf55-d5a7-4de1-92bb-ec2e743a0a60"],

Cell["\<\
We can now treat this as a function that takes in an image and returns a \
number. Let\[CloseCurlyQuote]s look at some information about the function:\
\>", "Text",
 CellChangeTimes->{{3.8225910006950502`*^9, 
  3.8225910413819838`*^9}},ExpressionUUID->"ed301760-c6f5-4eb9-b268-\
22d20f2860d6"],

Cell[BoxData[
 RowBox[{"Information", "[", "logistic", "]"}]], "Input",
 CellChangeTimes->{{3.822569208294838*^9, 3.822569212385087*^9}},
 CellLabel->
  "In[338]:=",ExpressionUUID->"43753dfc-f2d7-4f9e-a5c3-3d3a86502534"],

Cell["\<\
Let\[CloseCurlyQuote]s see how well it performs by testing it on a random \
sample of the test data\
\>", "Text",
 CellChangeTimes->{{3.822591053083922*^9, 
  3.8225910697086077`*^9}},ExpressionUUID->"14e67a9a-389d-4414-880b-\
1a81b3b42311"],

Cell[BoxData[
 RowBox[{"Tally", "[", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"logistic", "[", 
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", 
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "&"}], ",", 
    RowBox[{"RandomSample", "[", 
     RowBox[{"MNISTtest", ",", "1000"}], "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.822569063929542*^9, 3.822569126106969*^9}, {
  3.8225693264264917`*^9, 3.822569328987101*^9}, {3.822591096975554*^9, 
  3.822591097678933*^9}},
 CellLabel->
  "In[341]:=",ExpressionUUID->"471e20c1-486d-4190-a1fd-1db8d5288f2a"],

Cell["\<\
It\[CloseCurlyQuote]s right about 2/3 of the time. We could improve this by \
going back to the training step and using more training samples:\
\>", "Text",
 CellChangeTimes->{{3.82259110804383*^9, 
  3.822591138974526*^9}},ExpressionUUID->"f9f18cef-b1e9-459d-921e-\
07a640711df7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingset", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"MNIST", ",", "1000"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8225688110580597`*^9, 3.822568832135991*^9}, 
   3.822569158739112*^9, {3.822569226653932*^9, 3.822569247223864*^9}, 
   3.822569379989315*^9, 3.82259115498377*^9},
 CellLabel->
  "In[342]:=",ExpressionUUID->"2b0c472c-ee82-4bb7-a81b-eac11de6d05a"],

Cell[BoxData[
 RowBox[{"betterlogistic", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainingset", ",", " ", 
    RowBox[{"Method", "\[Rule]", "\"\<LogisticRegression\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.8225687770697327`*^9, {3.822590922274912*^9, 3.822590924676269*^9}, {
   3.82259116172611*^9, 3.822591162656242*^9}},
 CellLabel->"In[343]:=",
 CellID->1905138556,ExpressionUUID->"6ea609b4-8e5e-45b7-a43a-15592461c6f8"],

Cell[BoxData[
 RowBox[{"Tally", "[", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"betterlogistic", "[", 
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", 
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "&"}], ",", 
    RowBox[{"RandomSample", "[", 
     RowBox[{"MNISTtest", ",", "1000"}], "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.822569063929542*^9, 3.822569126106969*^9}, {
  3.8225693264264917`*^9, 3.822569328987101*^9}, {3.822591096975554*^9, 
  3.822591097678933*^9}, {3.822591171042836*^9, 3.822591171982439*^9}},
 CellLabel->
  "In[344]:=",ExpressionUUID->"92ea5c85-548d-4247-b08c-65b25daf2511"],

Cell["Now this is close to 90% accurate", "Text",
 CellChangeTimes->{{3.8225911746427097`*^9, 
  3.822591182160274*^9}},ExpressionUUID->"55ae742b-48bf-4d01-9f48-\
2028131cf4d5"],

Cell[BoxData[
 RowBox[{"Sort", "[", 
  RowBox[{"Tally", "[", 
   RowBox[{"Map", "[", 
    RowBox[{"betterlogistic", ",", 
     RowBox[{"RandomSample", "[", 
      RowBox[{
       RowBox[{"MNISTbynumber", "[", "8", "]"}], ",", "1000"}], "]"}]}], 
    "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.822569063929542*^9, 3.822569126106969*^9}, {
  3.8225693264264917`*^9, 3.8225693713053007`*^9}, {3.822569407860344*^9, 
  3.822569533802264*^9}, {3.822591255049089*^9, 3.8225912659081917`*^9}},
 CellLabel->
  "In[346]:=",ExpressionUUID->"1022f20d-75d9-4855-81d1-4038b3d633f4"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{-1914, Automatic}, {Automatic, 0}},
TaggingRules->{"TryRealOnly" -> False},
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"5be57777-3417-4661-bd01-5dafb2efe0b7"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 179, 3, 98, "Title",ExpressionUUID->"a4305c4f-c3d1-401c-a457-a8f332cc52ee"],
Cell[CellGroupData[{
Cell[784, 29, 215, 4, 67, "Section",ExpressionUUID->"855011b2-effd-4f4c-8a6c-ff4d2d7ea5df"],
Cell[CellGroupData[{
Cell[1024, 37, 689, 10, 54, "Subsection",ExpressionUUID->"9e1ea565-b32b-4676-a286-125f6cb6a65c"],
Cell[1716, 49, 312, 7, 35, "Text",ExpressionUUID->"c8c7110b-a8ff-48c7-88e8-683f59e6b4f0"],
Cell[2031, 58, 606, 13, 58, "Text",ExpressionUUID->"63cf96ff-c09b-435e-98f1-7a4f802d82d6"],
Cell[2640, 73, 8253, 154, 35, "Input",ExpressionUUID->"d8326d55-2984-4375-a087-2288d5d31151"],
Cell[CellGroupData[{
Cell[10918, 231, 161, 3, 45, "Subsubsection",ExpressionUUID->"3fcde024-09d1-4a32-9647-6d0fdf0d1648"],
Cell[11082, 236, 235, 4, 35, "Text",ExpressionUUID->"9ec25fcd-950f-4b13-bef4-11ce9ed5ea7e"],
Cell[11320, 242, 1149, 28, 50, "Input",ExpressionUUID->"7da11e59-d878-459c-873f-ab5586cecd18",
 CellID->196749448],
Cell[12472, 272, 240, 6, 35, "Text",ExpressionUUID->"6f1e0977-e988-40bb-a39e-d4a6a43a53a1"],
Cell[12715, 280, 388, 8, 28, "Input",ExpressionUUID->"a03cb623-aaa8-427d-abd5-c7bebc1a7949"],
Cell[13106, 290, 623, 14, 58, "Text",ExpressionUUID->"57dde213-1794-4dc7-8589-b4cc835b4eb9"],
Cell[13732, 306, 909, 26, 31, "Input",ExpressionUUID->"054b2643-5526-47b3-b957-4ae8bd018608",
 CellID->831553048],
Cell[14644, 334, 229, 4, 35, "Text",ExpressionUUID->"82ff26bd-ab12-42a4-94f6-bb165d937e64"],
Cell[14876, 340, 586, 15, 28, "Input",ExpressionUUID->"050435b0-9389-458e-bacf-e0de36d24267"],
Cell[15465, 357, 427, 8, 58, "Text",ExpressionUUID->"487c1937-74ef-44bf-a2ab-effe5a506a0e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15941, 371, 237, 4, 54, "Subsection",ExpressionUUID->"79c7919a-4881-428a-a2a9-a8b52c6fdc97"],
Cell[16181, 377, 755, 21, 58, "Text",ExpressionUUID->"a5a02d49-c636-4c43-8e31-bbb19b3d978a"],
Cell[16939, 400, 627, 11, 104, "Text",ExpressionUUID->"76a079be-070f-4dca-8114-7e17bb7c8605"],
Cell[CellGroupData[{
Cell[17591, 415, 989, 22, 48, "Input",ExpressionUUID->"14b44add-0deb-4287-b7e8-f671cd8afe85"],
Cell[18583, 439, 994, 28, 215, "Output",ExpressionUUID->"1e19dea0-9f15-4680-b580-cdcfe6696e12"]
}, Open  ]],
Cell[19592, 470, 692, 17, 35, "Text",ExpressionUUID->"b1df831c-747f-4e25-9dda-8b54d97a7c18"],
Cell[20287, 489, 559, 14, 48, "Input",ExpressionUUID->"45522dc4-0069-4474-92c2-b8c5b95fb3f2"],
Cell[20849, 505, 446, 11, 35, "Text",ExpressionUUID->"da747775-bf1c-47c6-ad5c-1b6a1d42e777"],
Cell[CellGroupData[{
Cell[21320, 520, 448, 12, 48, "Input",ExpressionUUID->"01446fc9-10f7-4d49-b024-dbcd6598ad38"],
Cell[21771, 534, 802, 28, 215, "Output",ExpressionUUID->"1d7cdd6a-4795-4b54-94b5-4204d3944425"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22610, 567, 304, 7, 28, "Input",ExpressionUUID->"b2524a57-857e-4838-b754-950d041a9e4a"],
Cell[22917, 576, 675, 21, 60, "Output",ExpressionUUID->"1a82ca75-a817-4a87-b763-6958d04e148d"]
}, Open  ]],
Cell[23607, 600, 2726, 74, 138, "Text",ExpressionUUID->"d898eb7f-6472-4e15-b527-217ed67630b7"],
Cell[CellGroupData[{
Cell[26358, 678, 1088, 32, 65, "Subsubsection",ExpressionUUID->"b5a120ec-cccc-4363-aaaf-50e46849ff34"],
Cell[27449, 712, 353, 7, 58, "Text",ExpressionUUID->"53a91ac4-6adc-4bf4-8e5a-a08d2d0e525b"],
Cell[CellGroupData[{
Cell[27827, 723, 840, 20, 31, "Input",ExpressionUUID->"6c075980-8ec4-45ce-add6-53266360a6f2"],
Cell[28670, 745, 400, 9, 32, "Output",ExpressionUUID->"9d6948a7-3d3a-4749-a6b9-fc24f25831e5"]
}, Open  ]],
Cell[29085, 757, 253, 4, 35, "Text",ExpressionUUID->"3d02e62f-26cd-40f4-950f-85a9f6023c71"],
Cell[CellGroupData[{
Cell[29363, 765, 1263, 32, 31, "Input",ExpressionUUID->"ccc99c11-7eb6-4ba6-b042-e04e84939ef3"],
Cell[30629, 799, 283358, 4632, 302, 127734, 2080, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"e8967a5a-ba24-45c3-a620-5b7050efcd84"]
}, Open  ]],
Cell[314002, 5434, 1239, 39, 59, "Text",ExpressionUUID->"e64985fb-d617-40b5-8a0a-1a9f24e1e984"],
Cell[CellGroupData[{
Cell[315266, 5477, 531, 13, 28, "Input",ExpressionUUID->"14a19473-c240-4aa9-9ab6-7fa46d3c8319"],
Cell[315800, 5492, 1787, 53, 48, "Output",ExpressionUUID->"7e6211e4-5351-4cbe-ad3d-1732e487d1c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[317624, 5550, 409, 9, 28, "Input",ExpressionUUID->"955ed707-7e0d-45b7-9597-2bbea4998a26"],
Cell[318036, 5561, 227, 4, 32, "Output",ExpressionUUID->"e6945cb3-e757-4702-bd71-db9666e6e26c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[318300, 5570, 393, 8, 28, "Input",ExpressionUUID->"4f8dfab5-f340-41a2-8841-210b20f7cc46"],
Cell[318696, 5580, 229, 4, 32, "Output",ExpressionUUID->"b0577fb2-53ff-4422-bfd6-222c9adddc3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[318962, 5589, 283, 5, 28, "Input",ExpressionUUID->"230d33e1-bd0e-4642-913e-08b8f72e37e3"],
Cell[319248, 5596, 228, 4, 32, "Output",ExpressionUUID->"35ea5353-ff45-4dee-bae7-cfc7e1df08dd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[319525, 5606, 163, 3, 45, "Subsubsection",ExpressionUUID->"b3a69c86-b440-488d-acfd-da813965d537"],
Cell[319691, 5611, 1938, 66, 58, "Text",ExpressionUUID->"acd17b2b-82a7-4ca4-95ac-a63e22e6c4e7"],
Cell[321632, 5679, 353, 8, 28, "Input",ExpressionUUID->"64779275-0869-4589-8f08-a826e90e5ef7"],
Cell[CellGroupData[{
Cell[322010, 5691, 478, 11, 28, "Input",ExpressionUUID->"17a18d48-f179-4a84-bc80-c63645af431b"],
Cell[322491, 5704, 1899, 56, 48, "Output",ExpressionUUID->"010e06d3-da0e-47f9-9a6f-4a65e078f627"]
}, Open  ]],
Cell[CellGroupData[{
Cell[324427, 5765, 334, 6, 28, "Input",ExpressionUUID->"98156093-6efd-4eb3-b847-1c460ded9854"],
Cell[324764, 5773, 230, 4, 32, "Output",ExpressionUUID->"1254fa01-9ad6-4bdc-a516-4843aba7f2d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[325031, 5782, 240, 4, 28, "Input",ExpressionUUID->"66d8d64d-351c-4dd2-b9a0-4a06d47076bf"],
Cell[325274, 5788, 230, 4, 32, "Output",ExpressionUUID->"33720bb7-5517-46e8-988b-9f2bad8e5b67"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[325553, 5798, 174, 3, 45, "Subsubsection",ExpressionUUID->"6b879a35-9c3b-476f-9155-9021baae854d"],
Cell[325730, 5803, 229, 5, 35, "Text",ExpressionUUID->"0ebaa31d-54ec-42c6-89f1-136becb82ecd"],
Cell[CellGroupData[{
Cell[325984, 5812, 238, 4, 28, "Input",ExpressionUUID->"a103eb09-1861-42f6-8052-985bca011a72"],
Cell[326225, 5818, 231, 4, 32, "Output",ExpressionUUID->"bf91f33d-a0a3-44fd-90e5-27f59b7eb825"]
}, Open  ]],
Cell[326471, 5825, 199, 3, 35, "Text",ExpressionUUID->"78a124ef-4c65-41ac-ae45-c1ed5714053c"],
Cell[326673, 5830, 367, 8, 28, "Input",ExpressionUUID->"98a7dd01-f16f-40c9-85e9-77458a8bfe36"],
Cell[CellGroupData[{
Cell[327065, 5842, 372, 7, 48, "Input",ExpressionUUID->"fe39d6ba-ce4f-4aa2-9c4d-85ae68decab0"],
Cell[327440, 5851, 801, 21, 60, "Output",ExpressionUUID->"cc4de316-1935-4481-8d0c-06effa409771"]
}, Open  ]],
Cell[CellGroupData[{
Cell[328278, 5877, 374, 6, 28, "Input",ExpressionUUID->"0c2bbb6d-9620-4ee2-b44e-da4eb643cdbc"],
Cell[328655, 5885, 229, 4, 54, "Output",ExpressionUUID->"aa517413-7a22-4d8e-9ebf-2980326faaa6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[328933, 5895, 179, 3, 45, "Subsubsection",ExpressionUUID->"18e1d098-169b-4183-835c-48a2b09229b0"],
Cell[329115, 5900, 152, 3, 28, "Input",ExpressionUUID->"23f2164e-3e99-4139-8e14-bedc6e9a6bac"],
Cell[329270, 5905, 231, 4, 28, "Input",ExpressionUUID->"91d69e95-1082-4e4f-ae0d-284368165706"],
Cell[329504, 5911, 262, 6, 28, "Input",ExpressionUUID->"b986a4c3-f8b2-45b1-9e6d-782b267203db"],
Cell[329769, 5919, 297, 7, 28, "Input",ExpressionUUID->"13d9a13f-7bb3-42f9-a8a1-253c628bbda4"],
Cell[330069, 5928, 370, 9, 48, "Input",ExpressionUUID->"e066d623-ba2c-41d8-95a3-be7886067f3d"],
Cell[330442, 5939, 363, 9, 28, "Input",ExpressionUUID->"5440ff6f-6cbe-40c0-bc9d-6278c2ab66f7"],
Cell[330808, 5950, 297, 7, 28, "Input",ExpressionUUID->"a708c684-e6d9-42fd-8878-a119b580a814"],
Cell[331108, 5959, 372, 9, 48, "Input",ExpressionUUID->"566350ef-52dd-4a62-8448-c25d646af2f0"],
Cell[331483, 5970, 361, 9, 28, "Input",ExpressionUUID->"ce434c96-5db0-4e48-8420-7063ce14642a"],
Cell[331847, 5981, 348, 8, 28, "Input",ExpressionUUID->"af5f219a-023a-40b9-898e-bfd7e326e8ee"],
Cell[332198, 5991, 422, 10, 48, "Input",ExpressionUUID->"6d075ffd-cd3a-4e90-81cc-8ceefe55f627"],
Cell[332623, 6003, 412, 10, 28, "Input",ExpressionUUID->"1b3db9a2-10fd-4ba5-a9c2-876d5a76a26f"],
Cell[333038, 6015, 350, 8, 28, "Input",ExpressionUUID->"21a9df9a-b73c-482d-bec3-9c8defaf70b1"],
Cell[333391, 6025, 420, 10, 48, "Input",ExpressionUUID->"8af54b6d-c65f-40ed-bc79-4f8a9eacb2e7"],
Cell[333814, 6037, 412, 10, 28, "Input",ExpressionUUID->"b95b909d-0999-41e0-942f-7c21f4eb040c"],
Cell[334229, 6049, 396, 8, 28, "Input",ExpressionUUID->"8c55dd4b-7200-49f7-9403-ab272595fd10"],
Cell[334628, 6059, 488, 12, 28, "Input",ExpressionUUID->"70df0d89-a824-4f34-928d-cc996f1a881c"],
Cell[335119, 6073, 413, 12, 28, "Input",ExpressionUUID->"99b44eb8-6f22-4c42-a29c-9f33f4df4e86"],
Cell[335535, 6087, 1407, 39, 48, "Input",ExpressionUUID->"29b08895-1166-4ad7-b51b-bc2401b4a366"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[336991, 6132, 228, 4, 54, "Subsection",ExpressionUUID->"2970e3d7-7a1f-42c8-8ce6-71f29c104e7d"],
Cell[337222, 6138, 681, 11, 104, "Text",ExpressionUUID->"1cfd99a0-c589-47a7-8bca-06b1d74721c7"],
Cell[337906, 6151, 1109, 28, 70, "Input",ExpressionUUID->"65af08b8-e8a6-45d7-97e4-8dc55e01d4a4"],
Cell[CellGroupData[{
Cell[339040, 6183, 607, 13, 28, "Input",ExpressionUUID->"14489321-0be3-4083-a55a-d6fbb8cd48d1"],
Cell[339650, 6198, 18014, 317, 260, "Output",ExpressionUUID->"70d73014-7038-46b9-adda-68755151bdbd"]
}, Open  ]],
Cell[357679, 6518, 547, 10, 81, "Text",ExpressionUUID->"889f3b84-bbde-44f0-8abd-c24ccfba82e1"],
Cell[358229, 6530, 301, 7, 35, "Text",ExpressionUUID->"c0880606-215c-447f-9d90-157b69d72bb9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[358567, 6542, 233, 5, 54, "Subsection",ExpressionUUID->"90c529a4-5521-498c-9c73-6a64002a1c44"],
Cell[358803, 6549, 409, 10, 58, "Text",ExpressionUUID->"b62b1b71-9c51-4f82-b9d2-f5f115cb0ef7"],
Cell[359215, 6561, 1332, 37, 67, "Input",ExpressionUUID->"62c14d69-7494-497d-9fda-3e0fe46614ac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[360584, 6603, 192, 3, 54, "Subsection",ExpressionUUID->"bae440e7-eac6-40bc-8683-2b157c5146ba"],
Cell[360779, 6608, 219, 5, 35, "Text",ExpressionUUID->"2b821004-930f-47c1-a9bc-e0362ee42db2"],
Cell[361001, 6615, 1670, 48, 72, "Input",ExpressionUUID->"cfb714b1-ef8f-4444-b0f9-84516cc61b76"],
Cell[362674, 6665, 621, 18, 73, "Input",ExpressionUUID->"516aa8a2-2a68-407b-898a-b65e25ba1cca"],
Cell[363298, 6685, 556, 15, 33, "Input",ExpressionUUID->"ed24f831-e7ad-41f3-b4ff-0ef4fbc81863"],
Cell[363857, 6702, 290, 6, 30, "Input",ExpressionUUID->"7f5f7ad0-cd77-40a9-973c-b78a92bd4171"],
Cell[364150, 6710, 180, 3, 30, "Input",ExpressionUUID->"454aa79a-5478-4a9c-9e6a-b36063c696dc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[364379, 6719, 167, 3, 67, "Section",ExpressionUUID->"61354bb9-a0da-4c72-9de9-bb9d03cc7d70"],
Cell[364549, 6724, 363, 7, 58, "Text",ExpressionUUID->"80596a33-288f-4293-975d-56e95d708a2c"],
Cell[364915, 6733, 723, 20, 30, "Input",ExpressionUUID->"915712de-6a7e-4e5f-9c7d-127a674e5a51",
 CellID->2100409069],
Cell[365641, 6755, 185, 3, 35, "Text",ExpressionUUID->"e8f83470-48e8-4d23-9548-2f9394925bda"],
Cell[365829, 6760, 695, 19, 30, "Input",ExpressionUUID->"ba4766db-96c1-42f3-940c-ef2409473932",
 CellID->1239033297],
Cell[366527, 6781, 447, 11, 30, "Input",ExpressionUUID->"3963a008-65dd-4076-82c6-14c99c4a92eb"],
Cell[366977, 6794, 295, 4, 35, "Text",ExpressionUUID->"69f2904c-3028-4ed5-b30b-2098217f41de"],
Cell[367275, 6800, 511, 13, 30, "Input",ExpressionUUID->"0f9daaae-bcbd-4b71-b94c-ac703443a483"]
}, Open  ]],
Cell[CellGroupData[{
Cell[367823, 6818, 166, 3, 67, "Section",ExpressionUUID->"13e1676f-6ac7-475b-a6be-454999329565"],
Cell[367992, 6823, 319, 7, 58, "Text",ExpressionUUID->"00d4f850-bc20-4a02-ad81-add7f188ea1a"],
Cell[368314, 6832, 539, 12, 30, "Input",ExpressionUUID->"1db8a14c-1e75-461e-aa55-a81e7f83b573"],
Cell[368856, 6846, 589, 13, 30, "Input",ExpressionUUID->"2ba2cef8-265f-46a8-9651-26c935c47169"],
Cell[369448, 6861, 327, 7, 30, "Input",ExpressionUUID->"079df9ec-9b5d-4dba-8681-73c5789dccd6"],
Cell[369778, 6870, 217, 5, 35, "Text",ExpressionUUID->"23042e1c-3664-4263-8b68-91be2dfca1dd"],
Cell[369998, 6877, 397, 9, 30, "Input",ExpressionUUID->"5a732da9-c3cc-4c2e-82f9-6605fc484e8d"],
Cell[370398, 6888, 622, 13, 81, "Text",ExpressionUUID->"b9a9abf1-2ac1-4278-889c-7c257272998e"],
Cell[371023, 6903, 389, 9, 30, "Input",ExpressionUUID->"3ed9bf55-d5a7-4de1-92bb-ec2e743a0a60",
 CellID->1726682747],
Cell[371415, 6914, 304, 6, 35, "Text",ExpressionUUID->"ed301760-c6f5-4eb9-b268-22d20f2860d6"],
Cell[371722, 6922, 220, 4, 30, "Input",ExpressionUUID->"43753dfc-f2d7-4f9e-a5c3-3d3a86502534"],
Cell[371945, 6928, 251, 6, 35, "Text",ExpressionUUID->"14e67a9a-389d-4414-880b-1a81b3b42311"],
Cell[372199, 6936, 653, 17, 30, "Input",ExpressionUUID->"471e20c1-486d-4190-a1fd-1db8d5288f2a"],
Cell[372855, 6955, 291, 6, 35, "Text",ExpressionUUID->"f9f18cef-b1e9-459d-921e-07a640711df7"],
Cell[373149, 6963, 419, 9, 30, "Input",ExpressionUUID->"2b0c472c-ee82-4bb7-a81b-eac11de6d05a"],
Cell[373571, 6974, 444, 10, 30, "Input",ExpressionUUID->"6ea609b4-8e5e-45b7-a43a-15592461c6f8",
 CellID->1905138556],
Cell[374018, 6986, 705, 17, 30, "Input",ExpressionUUID->"92ea5c85-548d-4247-b08c-65b25daf2511"],
Cell[374726, 7005, 177, 3, 35, "Text",ExpressionUUID->"55ae742b-48bf-4d01-9f48-2028131cf4d5"],
Cell[374906, 7010, 579, 13, 30, "Input",ExpressionUUID->"1022f20d-75d9-4855-81d1-4038b3d633f4"]
}, Open  ]]
}, Open  ]]
}
]
*)

